{"ast":null,"code":"import { memo, useMemo, createElement } from 'react';\nimport { animated, useSpring, useTransition } from '@react-spring/web';\nimport { textPropsByEngine, useTheme, useMotionConfig, degreesToRadians } from '@nivo/core';\nimport { timeFormat } from 'd3-time-format';\nimport { format } from 'd3-format';\nimport { getScaleTicks, centerScale } from '@nivo/scales';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport PropTypes from 'prop-types';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\nvar computeCartesianTicks = function computeCartesianTicks(_ref) {\n  var axis = _ref.axis,\n    scale = _ref.scale,\n    ticksPosition = _ref.ticksPosition,\n    tickValues = _ref.tickValues,\n    tickSize = _ref.tickSize,\n    tickPadding = _ref.tickPadding,\n    tickRotation = _ref.tickRotation,\n    _ref$engine = _ref.engine,\n    engine = _ref$engine === void 0 ? 'svg' : _ref$engine;\n  var values = getScaleTicks(scale, tickValues);\n  var textProps = textPropsByEngine[engine];\n  var position = 'bandwidth' in scale ? centerScale(scale) : scale;\n  var line = {\n    lineX: 0,\n    lineY: 0\n  };\n  var text = {\n    textX: 0,\n    textY: 0\n  };\n  var isRTL = typeof document === 'object' ? document.dir === 'rtl' : false;\n  var translate;\n  var textAlign = textProps.align.center;\n  var textBaseline = textProps.baseline.center;\n  if (axis === 'x') {\n    translate = function translate(d) {\n      var _position;\n      return {\n        x: (_position = position(d)) !== null && _position !== void 0 ? _position : 0,\n        y: 0\n      };\n    };\n    line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1);\n    text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1);\n    if (ticksPosition === 'after') {\n      textBaseline = textProps.baseline.top;\n    } else {\n      textBaseline = textProps.baseline.bottom;\n    }\n    if (tickRotation === 0) {\n      textAlign = textProps.align.center;\n    } else if (ticksPosition === 'after' && tickRotation < 0 || ticksPosition === 'before' && tickRotation > 0) {\n      textAlign = textProps.align[isRTL ? 'left' : 'right'];\n      textBaseline = textProps.baseline.center;\n    } else if (ticksPosition === 'after' && tickRotation > 0 || ticksPosition === 'before' && tickRotation < 0) {\n      textAlign = textProps.align[isRTL ? 'right' : 'left'];\n      textBaseline = textProps.baseline.center;\n    }\n  } else {\n    translate = function translate(d) {\n      var _position2;\n      return {\n        x: 0,\n        y: (_position2 = position(d)) !== null && _position2 !== void 0 ? _position2 : 0\n      };\n    };\n    line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1);\n    text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1);\n    if (ticksPosition === 'after') {\n      textAlign = textProps.align.left;\n    } else {\n      textAlign = textProps.align.right;\n    }\n  }\n  var ticks = values.map(function (value) {\n    return _objectSpread2(_objectSpread2(_objectSpread2({\n      key: typeof value === 'number' || typeof value === 'string' ? value : \"\".concat(value),\n      value: value\n    }, translate(value)), line), text);\n  });\n  return {\n    ticks: ticks,\n    textAlign: textAlign,\n    textBaseline: textBaseline\n  };\n};\nvar getFormatter = function getFormatter(format$1, scale) {\n  if (typeof format$1 === 'undefined' || typeof format$1 === 'function') return format$1;\n  if (scale.type === 'time') {\n    var formatter = timeFormat(format$1);\n    return function (d) {\n      return formatter(d instanceof Date ? d : new Date(d));\n    };\n  }\n  return format(format$1);\n};\nvar computeGridLines = function computeGridLines(_ref2) {\n  var width = _ref2.width,\n    height = _ref2.height,\n    scale = _ref2.scale,\n    axis = _ref2.axis,\n    _values = _ref2.values;\n  var lineValues = isArray(_values) ? _values : undefined;\n  var values = lineValues || getScaleTicks(scale, _values);\n  var position = 'bandwidth' in scale ? centerScale(scale) : scale;\n  var lines = axis === 'x' ? values.map(function (value) {\n    var _position3, _position4;\n    return {\n      key: \"\".concat(value),\n      x1: (_position3 = position(value)) !== null && _position3 !== void 0 ? _position3 : 0,\n      x2: (_position4 = position(value)) !== null && _position4 !== void 0 ? _position4 : 0,\n      y1: 0,\n      y2: height\n    };\n  }) : values.map(function (value) {\n    var _position5, _position6;\n    return {\n      key: \"\".concat(value),\n      x1: 0,\n      x2: width,\n      y1: (_position5 = position(value)) !== null && _position5 !== void 0 ? _position5 : 0,\n      y2: (_position6 = position(value)) !== null && _position6 !== void 0 ? _position6 : 0\n    };\n  });\n  return lines;\n};\nvar AxisTick = function AxisTick(_ref) {\n  var _format;\n  var _value = _ref.value,\n    format = _ref.format,\n    lineX = _ref.lineX,\n    lineY = _ref.lineY,\n    _onClick = _ref.onClick,\n    textBaseline = _ref.textBaseline,\n    textAnchor = _ref.textAnchor,\n    animatedProps = _ref.animatedProps;\n  var theme = useTheme();\n  var value = (_format = format === null || format === void 0 ? void 0 : format(_value)) !== null && _format !== void 0 ? _format : _value;\n  var props = useMemo(function () {\n    var style = {\n      opacity: animatedProps.opacity\n    };\n    if (!_onClick) {\n      return {\n        style: style\n      };\n    }\n    return {\n      style: _objectSpread2(_objectSpread2({}, style), {}, {\n        cursor: 'pointer'\n      }),\n      onClick: function onClick(event) {\n        return _onClick(event, value);\n      }\n    };\n  }, [animatedProps.opacity, _onClick, value]);\n  return jsxs(animated.g, _objectSpread2(_objectSpread2({\n    transform: animatedProps.transform\n  }, props), {}, {\n    children: [jsx(\"line\", {\n      x1: 0,\n      x2: lineX,\n      y1: 0,\n      y2: lineY,\n      style: theme.axis.ticks.line\n    }), jsx(animated.text, {\n      dominantBaseline: textBaseline,\n      textAnchor: textAnchor,\n      transform: animatedProps.textTransform,\n      style: theme.axis.ticks.text,\n      children: value\n    })]\n  }));\n};\nvar memoizedAxisTick = memo(AxisTick);\nvar Axis = function Axis(_ref) {\n  var axis = _ref.axis,\n    scale = _ref.scale,\n    _ref$x = _ref.x,\n    x = _ref$x === void 0 ? 0 : _ref$x,\n    _ref$y = _ref.y,\n    y = _ref$y === void 0 ? 0 : _ref$y,\n    length = _ref.length,\n    ticksPosition = _ref.ticksPosition,\n    tickValues = _ref.tickValues,\n    _ref$tickSize = _ref.tickSize,\n    tickSize = _ref$tickSize === void 0 ? 5 : _ref$tickSize,\n    _ref$tickPadding = _ref.tickPadding,\n    tickPadding = _ref$tickPadding === void 0 ? 5 : _ref$tickPadding,\n    _ref$tickRotation = _ref.tickRotation,\n    tickRotation = _ref$tickRotation === void 0 ? 0 : _ref$tickRotation,\n    format = _ref.format,\n    _ref$renderTick = _ref.renderTick,\n    renderTick = _ref$renderTick === void 0 ? memoizedAxisTick : _ref$renderTick,\n    legend = _ref.legend,\n    _ref$legendPosition = _ref.legendPosition,\n    legendPosition = _ref$legendPosition === void 0 ? 'end' : _ref$legendPosition,\n    _ref$legendOffset = _ref.legendOffset,\n    legendOffset = _ref$legendOffset === void 0 ? 0 : _ref$legendOffset,\n    onClick = _ref.onClick,\n    ariaHidden = _ref.ariaHidden;\n  var theme = useTheme();\n  var formatValue = useMemo(function () {\n    return getFormatter(format, scale);\n  }, [format, scale]);\n  var _computeCartesianTick = computeCartesianTicks({\n      axis: axis,\n      scale: scale,\n      ticksPosition: ticksPosition,\n      tickValues: tickValues,\n      tickSize: tickSize,\n      tickPadding: tickPadding,\n      tickRotation: tickRotation\n    }),\n    ticks = _computeCartesianTick.ticks,\n    textAlign = _computeCartesianTick.textAlign,\n    textBaseline = _computeCartesianTick.textBaseline;\n  var legendNode = null;\n  if (legend !== undefined) {\n    var legendX = 0;\n    var legendY = 0;\n    var legendRotation = 0;\n    var textAnchor;\n    if (axis === 'y') {\n      legendRotation = -90;\n      legendX = legendOffset;\n      if (legendPosition === 'start') {\n        textAnchor = 'start';\n        legendY = length;\n      } else if (legendPosition === 'middle') {\n        textAnchor = 'middle';\n        legendY = length / 2;\n      } else if (legendPosition === 'end') {\n        textAnchor = 'end';\n      }\n    } else {\n      legendY = legendOffset;\n      if (legendPosition === 'start') {\n        textAnchor = 'start';\n      } else if (legendPosition === 'middle') {\n        textAnchor = 'middle';\n        legendX = length / 2;\n      } else if (legendPosition === 'end') {\n        textAnchor = 'end';\n        legendX = length;\n      }\n    }\n    legendNode = jsx(\"text\", {\n      transform: \"translate(\".concat(legendX, \", \").concat(legendY, \") rotate(\").concat(legendRotation, \")\"),\n      textAnchor: textAnchor,\n      style: _objectSpread2({\n        dominantBaseline: 'central'\n      }, theme.axis.legend.text),\n      children: legend\n    });\n  }\n  var _useMotionConfig = useMotionConfig(),\n    animate = _useMotionConfig.animate,\n    springConfig = _useMotionConfig.config;\n  var animatedProps = useSpring({\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    lineX2: axis === 'x' ? length : 0,\n    lineY2: axis === 'x' ? 0 : length,\n    config: springConfig,\n    immediate: !animate\n  });\n  var transition = useTransition(ticks, {\n    keys: function keys(tick) {\n      return tick.key;\n    },\n    initial: function initial(tick) {\n      return {\n        opacity: 1,\n        transform: \"translate(\".concat(tick.x, \",\").concat(tick.y, \")\"),\n        textTransform: \"translate(\".concat(tick.textX, \",\").concat(tick.textY, \") rotate(\").concat(tickRotation, \")\")\n      };\n    },\n    from: function from(tick) {\n      return {\n        opacity: 0,\n        transform: \"translate(\".concat(tick.x, \",\").concat(tick.y, \")\"),\n        textTransform: \"translate(\".concat(tick.textX, \",\").concat(tick.textY, \") rotate(\").concat(tickRotation, \")\")\n      };\n    },\n    enter: function enter(tick) {\n      return {\n        opacity: 1,\n        transform: \"translate(\".concat(tick.x, \",\").concat(tick.y, \")\"),\n        textTransform: \"translate(\".concat(tick.textX, \",\").concat(tick.textY, \") rotate(\").concat(tickRotation, \")\")\n      };\n    },\n    update: function update(tick) {\n      return {\n        opacity: 1,\n        transform: \"translate(\".concat(tick.x, \",\").concat(tick.y, \")\"),\n        textTransform: \"translate(\".concat(tick.textX, \",\").concat(tick.textY, \") rotate(\").concat(tickRotation, \")\")\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsxs(animated.g, {\n    transform: animatedProps.transform,\n    \"aria-hidden\": ariaHidden,\n    children: [transition(function (transitionProps, tick, _state, tickIndex) {\n      return createElement(renderTick, _objectSpread2(_objectSpread2({\n        tickIndex: tickIndex,\n        format: formatValue,\n        rotate: tickRotation,\n        textBaseline: textBaseline,\n        textAnchor: textAlign,\n        animatedProps: transitionProps\n      }, tick), onClick ? {\n        onClick: onClick\n      } : {}));\n    }), jsx(animated.line, {\n      style: theme.axis.domain.line,\n      x1: 0,\n      x2: animatedProps.lineX2,\n      y1: 0,\n      y2: animatedProps.lineY2\n    }), legendNode]\n  });\n};\nvar memoizedAxis = memo(Axis);\nvar axisPropTypes = {\n  ticksPosition: PropTypes.oneOf(['before', 'after']),\n  tickValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])), PropTypes.string]),\n  tickSize: PropTypes.number,\n  tickPadding: PropTypes.number,\n  tickRotation: PropTypes.number,\n  format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  renderTick: PropTypes.func,\n  legend: PropTypes.node,\n  legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n  legendOffset: PropTypes.number,\n  ariaHidden: PropTypes.bool\n};\nvar axisPropType = PropTypes.shape(axisPropTypes);\nvar positions = ['top', 'right', 'bottom', 'left'];\nvar Axes = memo(function (_ref) {\n  var xScale = _ref.xScale,\n    yScale = _ref.yScale,\n    width = _ref.width,\n    height = _ref.height,\n    top = _ref.top,\n    right = _ref.right,\n    bottom = _ref.bottom,\n    left = _ref.left;\n  var axes = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  return jsx(Fragment, {\n    children: positions.map(function (position) {\n      var axis = axes[position];\n      if (!axis) return null;\n      var isXAxis = position === 'top' || position === 'bottom';\n      var ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after';\n      return jsx(memoizedAxis, _objectSpread2(_objectSpread2({}, axis), {}, {\n        axis: isXAxis ? 'x' : 'y',\n        x: position === 'right' ? width : 0,\n        y: position === 'bottom' ? height : 0,\n        scale: isXAxis ? xScale : yScale,\n        length: isXAxis ? width : height,\n        ticksPosition: ticksPosition\n      }), position);\n    })\n  });\n});\nvar GridLine = memo(function (_ref) {\n  var animatedProps = _ref.animatedProps;\n  var theme = useTheme();\n  return jsx(animated.line, _objectSpread2(_objectSpread2({}, animatedProps), theme.grid.line));\n});\nvar GridLines = memo(function (_ref) {\n  var lines = _ref.lines;\n  var _useMotionConfig = useMotionConfig(),\n    animate = _useMotionConfig.animate,\n    springConfig = _useMotionConfig.config;\n  var transition = useTransition(lines, {\n    keys: function keys(line) {\n      return line.key;\n    },\n    initial: function initial(line) {\n      return {\n        opacity: 1,\n        x1: line.x1,\n        x2: line.x2,\n        y1: line.y1,\n        y2: line.y2\n      };\n    },\n    from: function from(line) {\n      return {\n        opacity: 0,\n        x1: line.x1,\n        x2: line.x2,\n        y1: line.y1,\n        y2: line.y2\n      };\n    },\n    enter: function enter(line) {\n      return {\n        opacity: 1,\n        x1: line.x1,\n        x2: line.x2,\n        y1: line.y1,\n        y2: line.y2\n      };\n    },\n    update: function update(line) {\n      return {\n        opacity: 1,\n        x1: line.x1,\n        x2: line.x2,\n        y1: line.y1,\n        y2: line.y2\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsx(\"g\", {\n    children: transition(function (animatedProps, line) {\n      return createElement(GridLine, _objectSpread2(_objectSpread2({}, line), {}, {\n        key: line.key,\n        animatedProps: animatedProps\n      }));\n    })\n  });\n});\nvar Grid = memo(function (_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    xScale = _ref.xScale,\n    yScale = _ref.yScale,\n    xValues = _ref.xValues,\n    yValues = _ref.yValues;\n  var xLines = useMemo(function () {\n    if (!xScale) return false;\n    return computeGridLines({\n      width: width,\n      height: height,\n      scale: xScale,\n      axis: 'x',\n      values: xValues\n    });\n  }, [xScale, xValues, width, height]);\n  var yLines = useMemo(function () {\n    if (!yScale) return false;\n    return computeGridLines({\n      width: width,\n      height: height,\n      scale: yScale,\n      axis: 'y',\n      values: yValues\n    });\n  }, [height, width, yScale, yValues]);\n  return jsxs(Fragment, {\n    children: [xLines && jsx(GridLines, {\n      lines: xLines\n    }), yLines && jsx(GridLines, {\n      lines: yLines\n    })]\n  });\n});\nvar renderAxisToCanvas = function renderAxisToCanvas(ctx, _ref) {\n  var _theme$axis$domain$li;\n  var axis = _ref.axis,\n    scale = _ref.scale,\n    _ref$x = _ref.x,\n    x = _ref$x === void 0 ? 0 : _ref$x,\n    _ref$y = _ref.y,\n    y = _ref$y === void 0 ? 0 : _ref$y,\n    length = _ref.length,\n    ticksPosition = _ref.ticksPosition,\n    tickValues = _ref.tickValues,\n    _ref$tickSize = _ref.tickSize,\n    tickSize = _ref$tickSize === void 0 ? 5 : _ref$tickSize,\n    _ref$tickPadding = _ref.tickPadding,\n    tickPadding = _ref$tickPadding === void 0 ? 5 : _ref$tickPadding,\n    _ref$tickRotation = _ref.tickRotation,\n    tickRotation = _ref$tickRotation === void 0 ? 0 : _ref$tickRotation,\n    _format = _ref.format,\n    legend = _ref.legend,\n    _ref$legendPosition = _ref.legendPosition,\n    legendPosition = _ref$legendPosition === void 0 ? 'end' : _ref$legendPosition,\n    _ref$legendOffset = _ref.legendOffset,\n    legendOffset = _ref$legendOffset === void 0 ? 0 : _ref$legendOffset,\n    theme = _ref.theme;\n  var _computeCartesianTick = computeCartesianTicks({\n      axis: axis,\n      scale: scale,\n      ticksPosition: ticksPosition,\n      tickValues: tickValues,\n      tickSize: tickSize,\n      tickPadding: tickPadding,\n      tickRotation: tickRotation,\n      engine: 'canvas'\n    }),\n    ticks = _computeCartesianTick.ticks,\n    textAlign = _computeCartesianTick.textAlign,\n    textBaseline = _computeCartesianTick.textBaseline;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ctx.font = \"\".concat(theme.axis.ticks.text.fontWeight ? \"\".concat(theme.axis.ticks.text.fontWeight, \" \") : '').concat(theme.axis.ticks.text.fontSize, \"px \").concat(theme.axis.ticks.text.fontFamily);\n  if (((_theme$axis$domain$li = theme.axis.domain.line.strokeWidth) !== null && _theme$axis$domain$li !== void 0 ? _theme$axis$domain$li : 0) > 0) {\n    ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth);\n    ctx.lineCap = 'square';\n    if (theme.axis.domain.line.stroke) {\n      ctx.strokeStyle = theme.axis.domain.line.stroke;\n    }\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length);\n    ctx.stroke();\n  }\n  var format = typeof _format === 'function' ? _format : function (value) {\n    return \"\".concat(value);\n  };\n  ticks.forEach(function (tick) {\n    var _theme$axis$ticks$lin;\n    if (((_theme$axis$ticks$lin = theme.axis.ticks.line.strokeWidth) !== null && _theme$axis$ticks$lin !== void 0 ? _theme$axis$ticks$lin : 0) > 0) {\n      ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth);\n      ctx.lineCap = 'square';\n      if (theme.axis.ticks.line.stroke) {\n        ctx.strokeStyle = theme.axis.ticks.line.stroke;\n      }\n      ctx.beginPath();\n      ctx.moveTo(tick.x, tick.y);\n      ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);\n      ctx.stroke();\n    }\n    var value = format(tick.value);\n    ctx.save();\n    ctx.translate(tick.x + tick.textX, tick.y + tick.textY);\n    ctx.rotate(degreesToRadians(tickRotation));\n    if (theme.axis.ticks.text.fill) {\n      ctx.fillStyle = theme.axis.ticks.text.fill;\n    }\n    ctx.fillText(String(value), 0, 0);\n    ctx.restore();\n  });\n  if (legend !== undefined) {\n    var legendX = 0;\n    var legendY = 0;\n    var legendRotation = 0;\n    var _textAlign = 'center';\n    if (axis === 'y') {\n      legendRotation = -90;\n      legendX = legendOffset;\n      if (legendPosition === 'start') {\n        _textAlign = 'start';\n        legendY = length;\n      } else if (legendPosition === 'middle') {\n        _textAlign = 'center';\n        legendY = length / 2;\n      } else if (legendPosition === 'end') {\n        _textAlign = 'end';\n      }\n    } else {\n      legendY = legendOffset;\n      if (legendPosition === 'start') {\n        _textAlign = 'start';\n      } else if (legendPosition === 'middle') {\n        _textAlign = 'center';\n        legendX = length / 2;\n      } else if (legendPosition === 'end') {\n        _textAlign = 'end';\n        legendX = length;\n      }\n    }\n    ctx.translate(legendX, legendY);\n    ctx.rotate(degreesToRadians(legendRotation));\n    ctx.font = \"\".concat(theme.axis.legend.text.fontWeight ? \"\".concat(theme.axis.legend.text.fontWeight, \" \") : '').concat(theme.axis.legend.text.fontSize, \"px \").concat(theme.axis.legend.text.fontFamily);\n    if (theme.axis.legend.text.fill) {\n      ctx.fillStyle = theme.axis.legend.text.fill;\n    }\n    ctx.textAlign = _textAlign;\n    ctx.textBaseline = 'middle';\n    ctx.fillText(legend, 0, 0);\n  }\n  ctx.restore();\n};\nvar renderAxesToCanvas = function renderAxesToCanvas(ctx, _ref2) {\n  var xScale = _ref2.xScale,\n    yScale = _ref2.yScale,\n    width = _ref2.width,\n    height = _ref2.height,\n    top = _ref2.top,\n    right = _ref2.right,\n    bottom = _ref2.bottom,\n    left = _ref2.left,\n    theme = _ref2.theme;\n  var axes = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  positions.forEach(function (position) {\n    var axis = axes[position];\n    if (!axis) return null;\n    var isXAxis = position === 'top' || position === 'bottom';\n    var ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after';\n    var scale = isXAxis ? xScale : yScale;\n    var format = getFormatter(axis.format, scale);\n    renderAxisToCanvas(ctx, _objectSpread2(_objectSpread2({}, axis), {}, {\n      axis: isXAxis ? 'x' : 'y',\n      x: position === 'right' ? width : 0,\n      y: position === 'bottom' ? height : 0,\n      scale: scale,\n      format: format,\n      length: isXAxis ? width : height,\n      ticksPosition: ticksPosition,\n      theme: theme\n    }));\n  });\n};\nvar renderGridLinesToCanvas = function renderGridLinesToCanvas(ctx, _ref3) {\n  var width = _ref3.width,\n    height = _ref3.height,\n    scale = _ref3.scale,\n    axis = _ref3.axis,\n    values = _ref3.values;\n  var lines = computeGridLines({\n    width: width,\n    height: height,\n    scale: scale,\n    axis: axis,\n    values: values\n  });\n  lines.forEach(function (line) {\n    ctx.beginPath();\n    ctx.moveTo(line.x1, line.y1);\n    ctx.lineTo(line.x2, line.y2);\n    ctx.stroke();\n  });\n};\nexport { Axes, memoizedAxis as Axis, memoizedAxisTick as AxisTick, Grid, GridLine, GridLines, axisPropType, axisPropTypes, positions, renderAxesToCanvas, renderAxisToCanvas, renderGridLinesToCanvas };","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","isArray","Array","computeCartesianTicks","_ref","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","_ref$engine","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","d","_position","x","y","top","bottom","_position2","left","right","ticks","map","concat","getFormatter","format$1","type","formatter","timeFormat","Date","format","computeGridLines","_ref2","width","height","_values","lineValues","undefined","lines","_position3","_position4","x1","x2","y1","y2","_position5","_position6","AxisTick","_format","_value","_onClick","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","jsxs","animated","g","transform","children","jsx","dominantBaseline","textTransform","memoizedAxisTick","memo","Axis","_ref$x","_ref$y","_ref$tickSize","_ref$tickPadding","_ref$tickRotation","_ref$renderTick","renderTick","legend","_ref$legendPosition","legendPosition","_ref$legendOffset","legendOffset","ariaHidden","formatValue","_computeCartesianTick","legendNode","legendX","legendY","legendRotation","_useMotionConfig","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","createElement","rotate","domain","memoizedAxis","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","Fragment","isXAxis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_theme$axis$domain$li","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","_theme$axis$ticks$lin","degreesToRadians","fill","fillStyle","fillText","String","restore","_textAlign","renderAxesToCanvas","renderGridLinesToCanvas","_ref3"],"sources":["/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/compute.ts","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/AxisTick.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/Axis.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/props.ts","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/Axes.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/GridLine.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/GridLines.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/components/Grid.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/axes/src/canvas.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}