{"ast":null,"code":"import { useState, useCallback, createElement, useMemo } from 'react';\nimport { useTheme } from '@nivo/core';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport PropTypes from 'prop-types';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nvar isObject = function isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n};\nvar zeroPadding = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nvar computeDimensions = function computeDimensions(_ref) {\n  var direction = _ref.direction,\n    itemsSpacing = _ref.itemsSpacing,\n    _padding = _ref.padding,\n    itemCount = _ref.itemCount,\n    itemWidth = _ref.itemWidth,\n    itemHeight = _ref.itemHeight;\n  if (typeof _padding !== 'number' && !isObject(_padding)) {\n    throw new Error('Invalid property padding, must be one of: number, object');\n  }\n  var padding = typeof _padding === 'number' ? {\n    top: _padding,\n    right: _padding,\n    bottom: _padding,\n    left: _padding\n  } : _objectSpread2(_objectSpread2({}, zeroPadding), _padding);\n  var horizontalPadding = padding.left + padding.right;\n  var verticalPadding = padding.top + padding.bottom;\n  var width = itemWidth + horizontalPadding;\n  var height = itemHeight + verticalPadding;\n  var spacing = (itemCount - 1) * itemsSpacing;\n  if (direction === 'row') {\n    width = itemWidth * itemCount + spacing + horizontalPadding;\n  } else if (direction === 'column') {\n    height = itemHeight * itemCount + spacing + verticalPadding;\n  }\n  return {\n    width: width,\n    height: height,\n    padding: padding\n  };\n};\nvar computePositionFromAnchor = function computePositionFromAnchor(_ref2) {\n  var anchor = _ref2.anchor,\n    translateX = _ref2.translateX,\n    translateY = _ref2.translateY,\n    containerWidth = _ref2.containerWidth,\n    containerHeight = _ref2.containerHeight,\n    width = _ref2.width,\n    height = _ref2.height;\n  var x = translateX;\n  var y = translateY;\n  switch (anchor) {\n    case 'top':\n      x += (containerWidth - width) / 2;\n      break;\n    case 'top-right':\n      x += containerWidth - width;\n      break;\n    case 'right':\n      x += containerWidth - width;\n      y += (containerHeight - height) / 2;\n      break;\n    case 'bottom-right':\n      x += containerWidth - width;\n      y += containerHeight - height;\n      break;\n    case 'bottom':\n      x += (containerWidth - width) / 2;\n      y += containerHeight - height;\n      break;\n    case 'bottom-left':\n      y += containerHeight - height;\n      break;\n    case 'left':\n      y += (containerHeight - height) / 2;\n      break;\n    case 'center':\n      x += (containerWidth - width) / 2;\n      y += (containerHeight - height) / 2;\n      break;\n  }\n  return {\n    x: x,\n    y: y\n  };\n};\nvar computeItemLayout = function computeItemLayout(_ref3) {\n  var direction = _ref3.direction,\n    justify = _ref3.justify,\n    symbolSize = _ref3.symbolSize,\n    symbolSpacing = _ref3.symbolSpacing,\n    width = _ref3.width,\n    height = _ref3.height;\n  var symbolX;\n  var symbolY;\n  var labelX;\n  var labelY;\n  var labelAnchor;\n  var labelAlignment;\n  switch (direction) {\n    case 'left-to-right':\n      symbolX = 0;\n      symbolY = (height - symbolSize) / 2;\n      labelY = height / 2;\n      labelAlignment = 'central';\n      if (justify === true) {\n        labelX = width;\n        labelAnchor = 'end';\n      } else {\n        labelX = symbolSize + symbolSpacing;\n        labelAnchor = 'start';\n      }\n      break;\n    case 'right-to-left':\n      symbolX = width - symbolSize;\n      symbolY = (height - symbolSize) / 2;\n      labelY = height / 2;\n      labelAlignment = 'central';\n      if (justify === true) {\n        labelX = 0;\n        labelAnchor = 'start';\n      } else {\n        labelX = width - symbolSize - symbolSpacing;\n        labelAnchor = 'end';\n      }\n      break;\n    case 'top-to-bottom':\n      symbolX = (width - symbolSize) / 2;\n      symbolY = 0;\n      labelX = width / 2;\n      labelAnchor = 'middle';\n      if (justify === true) {\n        labelY = height;\n        labelAlignment = 'alphabetic';\n      } else {\n        labelY = symbolSize + symbolSpacing;\n        labelAlignment = 'text-before-edge';\n      }\n      break;\n    case 'bottom-to-top':\n      symbolX = (width - symbolSize) / 2;\n      symbolY = height - symbolSize;\n      labelX = width / 2;\n      labelAnchor = 'middle';\n      if (justify === true) {\n        labelY = 0;\n        labelAlignment = 'text-before-edge';\n      } else {\n        labelY = height - symbolSize - symbolSpacing;\n        labelAlignment = 'alphabetic';\n      }\n      break;\n  }\n  return {\n    symbolX: symbolX,\n    symbolY: symbolY,\n    labelX: labelX,\n    labelY: labelY,\n    labelAnchor: labelAnchor,\n    labelAlignment: labelAlignment\n  };\n};\nvar SymbolCircle = function SymbolCircle(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    size = _ref.size,\n    fill = _ref.fill,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$borderWidth = _ref.borderWidth,\n    borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n    _ref$borderColor = _ref.borderColor,\n    borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return jsx(\"circle\", {\n    r: size / 2,\n    cx: x + size / 2,\n    cy: y + size / 2,\n    fill: fill,\n    opacity: opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    style: {\n      pointerEvents: 'none'\n    }\n  });\n};\nvar SymbolDiamond = function SymbolDiamond(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    size = _ref.size,\n    fill = _ref.fill,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$borderWidth = _ref.borderWidth,\n    borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n    _ref$borderColor = _ref.borderColor,\n    borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return jsx(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    children: jsx(\"path\", {\n      d: \"\\n                    M\".concat(size / 2, \" 0\\n                    L\").concat(size * 0.8, \" \").concat(size / 2, \"\\n                    L\").concat(size / 2, \" \").concat(size, \"\\n                    L\").concat(size * 0.2, \" \").concat(size / 2, \"\\n                    L\").concat(size / 2, \" 0\\n                \"),\n      fill: fill,\n      opacity: opacity,\n      strokeWidth: borderWidth,\n      stroke: borderColor,\n      style: {\n        pointerEvents: 'none'\n      }\n    })\n  });\n};\nvar SymbolSquare = function SymbolSquare(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    size = _ref.size,\n    fill = _ref.fill,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$borderWidth = _ref.borderWidth,\n    borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n    _ref$borderColor = _ref.borderColor,\n    borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return jsx(\"rect\", {\n    x: x,\n    y: y,\n    fill: fill,\n    opacity: opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    width: size,\n    height: size,\n    style: {\n      pointerEvents: 'none'\n    }\n  });\n};\nvar SymbolTriangle = function SymbolTriangle(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    size = _ref.size,\n    fill = _ref.fill,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$borderWidth = _ref.borderWidth,\n    borderWidth = _ref$borderWidth === void 0 ? 0 : _ref$borderWidth,\n    _ref$borderColor = _ref.borderColor,\n    borderColor = _ref$borderColor === void 0 ? 'transparent' : _ref$borderColor;\n  return jsx(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    children: jsx(\"path\", {\n      d: \"\\n                M\".concat(size / 2, \" 0\\n                L\").concat(size, \" \").concat(size, \"\\n                L0 \").concat(size, \"\\n                L\").concat(size / 2, \" 0\\n            \"),\n      fill: fill,\n      opacity: opacity,\n      strokeWidth: borderWidth,\n      stroke: borderColor,\n      style: {\n        pointerEvents: 'none'\n      }\n    })\n  });\n};\nvar symbolByShape = {\n  circle: SymbolCircle,\n  diamond: SymbolDiamond,\n  square: SymbolSquare,\n  triangle: SymbolTriangle\n};\nvar LegendSvgItem = function LegendSvgItem(_ref) {\n  var _style$symbolSize, _style$itemOpacity, _style$itemBackground, _style$symbolSize2, _ref4, _data$fill, _style$symbolBorderWi, _style$symbolBorderCo, _ref5, _ref6, _style$itemTextColor;\n  var x = _ref.x,\n    y = _ref.y,\n    width = _ref.width,\n    height = _ref.height,\n    data = _ref.data,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'left-to-right' : _ref$direction,\n    _ref$justify = _ref.justify,\n    justify = _ref$justify === void 0 ? false : _ref$justify,\n    textColor = _ref.textColor,\n    _ref$background = _ref.background,\n    background = _ref$background === void 0 ? 'transparent' : _ref$background,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$symbolShape = _ref.symbolShape,\n    symbolShape = _ref$symbolShape === void 0 ? 'square' : _ref$symbolShape,\n    _ref$symbolSize = _ref.symbolSize,\n    symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,\n    _ref$symbolSpacing = _ref.symbolSpacing,\n    symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,\n    _ref$symbolBorderWidt = _ref.symbolBorderWidth,\n    symbolBorderWidth = _ref$symbolBorderWidt === void 0 ? 0 : _ref$symbolBorderWidt,\n    _ref$symbolBorderColo = _ref.symbolBorderColor,\n    symbolBorderColor = _ref$symbolBorderColo === void 0 ? 'transparent' : _ref$symbolBorderColo,\n    _onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    toggleSerie = _ref.toggleSerie,\n    effects = _ref.effects;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    style = _useState2[0],\n    setStyle = _useState2[1];\n  var theme = useTheme();\n  var handleMouseEnter = useCallback(function (event) {\n    if (effects) {\n      var applyEffects = effects.filter(function (_ref2) {\n        var on = _ref2.on;\n        return on === 'hover';\n      });\n      var _style = applyEffects.reduce(function (acc, effect) {\n        return _objectSpread2(_objectSpread2({}, acc), effect.style);\n      }, {});\n      setStyle(_style);\n    }\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(data, event);\n  }, [onMouseEnter, data, effects]);\n  var handleMouseLeave = useCallback(function (event) {\n    if (effects) {\n      var applyEffects = effects.filter(function (_ref3) {\n        var on = _ref3.on;\n        return on !== 'hover';\n      });\n      var _style2 = applyEffects.reduce(function (acc, effect) {\n        return _objectSpread2(_objectSpread2({}, acc), effect.style);\n      }, {});\n      setStyle(_style2);\n    }\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(data, event);\n  }, [onMouseLeave, data, effects]);\n  var _computeItemLayout = computeItemLayout({\n      direction: direction,\n      justify: justify,\n      symbolSize: (_style$symbolSize = style.symbolSize) !== null && _style$symbolSize !== void 0 ? _style$symbolSize : symbolSize,\n      symbolSpacing: symbolSpacing,\n      width: width,\n      height: height\n    }),\n    symbolX = _computeItemLayout.symbolX,\n    symbolY = _computeItemLayout.symbolY,\n    labelX = _computeItemLayout.labelX,\n    labelY = _computeItemLayout.labelY,\n    labelAnchor = _computeItemLayout.labelAnchor,\n    labelAlignment = _computeItemLayout.labelAlignment;\n  var isInteractive = [_onClick, onMouseEnter, onMouseLeave, toggleSerie].some(function (handler) {\n    return handler !== undefined;\n  });\n  var SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape];\n  return jsxs(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    style: {\n      opacity: (_style$itemOpacity = style.itemOpacity) !== null && _style$itemOpacity !== void 0 ? _style$itemOpacity : opacity\n    },\n    children: [jsx(\"rect\", {\n      width: width,\n      height: height,\n      fill: (_style$itemBackground = style.itemBackground) !== null && _style$itemBackground !== void 0 ? _style$itemBackground : background,\n      style: {\n        cursor: isInteractive ? 'pointer' : 'auto'\n      },\n      onClick: function onClick(event) {\n        _onClick === null || _onClick === void 0 ? void 0 : _onClick(data, event);\n        toggleSerie === null || toggleSerie === void 0 ? void 0 : toggleSerie(data.id);\n      },\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave\n    }), createElement(SymbolShape, _objectSpread2({\n      id: data.id,\n      x: symbolX,\n      y: symbolY,\n      size: (_style$symbolSize2 = style.symbolSize) !== null && _style$symbolSize2 !== void 0 ? _style$symbolSize2 : symbolSize,\n      fill: (_ref4 = (_data$fill = data.fill) !== null && _data$fill !== void 0 ? _data$fill : data.color) !== null && _ref4 !== void 0 ? _ref4 : 'black',\n      borderWidth: (_style$symbolBorderWi = style.symbolBorderWidth) !== null && _style$symbolBorderWi !== void 0 ? _style$symbolBorderWi : symbolBorderWidth,\n      borderColor: (_style$symbolBorderCo = style.symbolBorderColor) !== null && _style$symbolBorderCo !== void 0 ? _style$symbolBorderCo : symbolBorderColor\n    }, data.hidden ? theme.legends.hidden.symbol : undefined)), jsx(\"text\", {\n      textAnchor: labelAnchor,\n      style: _objectSpread2(_objectSpread2({}, theme.legends.text), {}, {\n        fill: (_ref5 = (_ref6 = (_style$itemTextColor = style.itemTextColor) !== null && _style$itemTextColor !== void 0 ? _style$itemTextColor : textColor) !== null && _ref6 !== void 0 ? _ref6 : theme.legends.text.fill) !== null && _ref5 !== void 0 ? _ref5 : 'black',\n        dominantBaseline: labelAlignment,\n        pointerEvents: 'none',\n        userSelect: 'none'\n      }, data.hidden ? theme.legends.hidden.text : undefined),\n      x: labelX,\n      y: labelY,\n      children: data.label\n    })]\n  });\n};\nvar LegendSvg = function LegendSvg(_ref) {\n  var data = _ref.data,\n    x = _ref.x,\n    y = _ref.y,\n    direction = _ref.direction,\n    _ref$padding = _ref.padding,\n    _padding = _ref$padding === void 0 ? 0 : _ref$padding,\n    justify = _ref.justify,\n    effects = _ref.effects,\n    itemWidth = _ref.itemWidth,\n    itemHeight = _ref.itemHeight,\n    _ref$itemDirection = _ref.itemDirection,\n    itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,\n    _ref$itemsSpacing = _ref.itemsSpacing,\n    itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n    itemTextColor = _ref.itemTextColor,\n    _ref$itemBackground = _ref.itemBackground,\n    itemBackground = _ref$itemBackground === void 0 ? 'transparent' : _ref$itemBackground,\n    _ref$itemOpacity = _ref.itemOpacity,\n    itemOpacity = _ref$itemOpacity === void 0 ? 1 : _ref$itemOpacity,\n    symbolShape = _ref.symbolShape,\n    symbolSize = _ref.symbolSize,\n    symbolSpacing = _ref.symbolSpacing,\n    symbolBorderWidth = _ref.symbolBorderWidth,\n    symbolBorderColor = _ref.symbolBorderColor,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    toggleSerie = _ref.toggleSerie;\n  var _computeDimensions = computeDimensions({\n      itemCount: data.length,\n      itemWidth: itemWidth,\n      itemHeight: itemHeight,\n      itemsSpacing: itemsSpacing,\n      direction: direction,\n      padding: _padding\n    }),\n    padding = _computeDimensions.padding;\n  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;\n  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;\n  return jsx(\"g\", {\n    transform: \"translate(\".concat(x, \",\").concat(y, \")\"),\n    children: data.map(function (data, i) {\n      return jsx(LegendSvgItem, {\n        data: data,\n        x: i * xStep + padding.left,\n        y: i * yStep + padding.top,\n        width: itemWidth,\n        height: itemHeight,\n        direction: itemDirection,\n        justify: justify,\n        effects: effects,\n        textColor: itemTextColor,\n        background: itemBackground,\n        opacity: itemOpacity,\n        symbolShape: symbolShape,\n        symbolSize: symbolSize,\n        symbolSpacing: symbolSpacing,\n        symbolBorderWidth: symbolBorderWidth,\n        symbolBorderColor: symbolBorderColor,\n        onClick: onClick,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        toggleSerie: toggleSerie\n      }, i);\n    })\n  });\n};\nvar BoxLegendSvg = function BoxLegendSvg(_ref) {\n  var data = _ref.data,\n    containerWidth = _ref.containerWidth,\n    containerHeight = _ref.containerHeight,\n    _ref$translateX = _ref.translateX,\n    translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,\n    _ref$translateY = _ref.translateY,\n    translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,\n    anchor = _ref.anchor,\n    direction = _ref.direction,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 0 : _ref$padding,\n    justify = _ref.justify,\n    _ref$itemsSpacing = _ref.itemsSpacing,\n    itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n    itemWidth = _ref.itemWidth,\n    itemHeight = _ref.itemHeight,\n    itemDirection = _ref.itemDirection,\n    itemTextColor = _ref.itemTextColor,\n    itemBackground = _ref.itemBackground,\n    itemOpacity = _ref.itemOpacity,\n    symbolShape = _ref.symbolShape,\n    symbolSize = _ref.symbolSize,\n    symbolSpacing = _ref.symbolSpacing,\n    symbolBorderWidth = _ref.symbolBorderWidth,\n    symbolBorderColor = _ref.symbolBorderColor,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    toggleSerie = _ref.toggleSerie,\n    effects = _ref.effects;\n  var _computeDimensions = computeDimensions({\n      itemCount: data.length,\n      itemsSpacing: itemsSpacing,\n      itemWidth: itemWidth,\n      itemHeight: itemHeight,\n      direction: direction,\n      padding: padding\n    }),\n    width = _computeDimensions.width,\n    height = _computeDimensions.height;\n  var _computePositionFromA = computePositionFromAnchor({\n      anchor: anchor,\n      translateX: translateX,\n      translateY: translateY,\n      containerWidth: containerWidth,\n      containerHeight: containerHeight,\n      width: width,\n      height: height\n    }),\n    x = _computePositionFromA.x,\n    y = _computePositionFromA.y;\n  return jsx(LegendSvg, {\n    data: data,\n    x: x,\n    y: y,\n    direction: direction,\n    padding: padding,\n    justify: justify,\n    effects: effects,\n    itemsSpacing: itemsSpacing,\n    itemWidth: itemWidth,\n    itemHeight: itemHeight,\n    itemDirection: itemDirection,\n    itemTextColor: itemTextColor,\n    itemBackground: itemBackground,\n    itemOpacity: itemOpacity,\n    symbolShape: symbolShape,\n    symbolSize: symbolSize,\n    symbolSpacing: symbolSpacing,\n    symbolBorderWidth: symbolBorderWidth,\n    symbolBorderColor: symbolBorderColor,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    toggleSerie: typeof toggleSerie === 'boolean' ? undefined : toggleSerie\n  });\n};\nvar textAlignMapping = {\n  start: 'left',\n  middle: 'center',\n  end: 'right'\n};\nvar renderLegendToCanvas = function renderLegendToCanvas(ctx, _ref) {\n  var data = _ref.data,\n    containerWidth = _ref.containerWidth,\n    containerHeight = _ref.containerHeight,\n    _ref$translateX = _ref.translateX,\n    translateX = _ref$translateX === void 0 ? 0 : _ref$translateX,\n    _ref$translateY = _ref.translateY,\n    translateY = _ref$translateY === void 0 ? 0 : _ref$translateY,\n    anchor = _ref.anchor,\n    direction = _ref.direction,\n    _ref$padding = _ref.padding,\n    _padding = _ref$padding === void 0 ? 0 : _ref$padding,\n    _ref$justify = _ref.justify,\n    justify = _ref$justify === void 0 ? false : _ref$justify,\n    _ref$itemsSpacing = _ref.itemsSpacing,\n    itemsSpacing = _ref$itemsSpacing === void 0 ? 0 : _ref$itemsSpacing,\n    itemWidth = _ref.itemWidth,\n    itemHeight = _ref.itemHeight,\n    _ref$itemDirection = _ref.itemDirection,\n    itemDirection = _ref$itemDirection === void 0 ? 'left-to-right' : _ref$itemDirection,\n    itemTextColor = _ref.itemTextColor,\n    _ref$symbolSize = _ref.symbolSize,\n    symbolSize = _ref$symbolSize === void 0 ? 16 : _ref$symbolSize,\n    _ref$symbolSpacing = _ref.symbolSpacing,\n    symbolSpacing = _ref$symbolSpacing === void 0 ? 8 : _ref$symbolSpacing,\n    theme = _ref.theme;\n  var _computeDimensions = computeDimensions({\n      itemCount: data.length,\n      itemWidth: itemWidth,\n      itemHeight: itemHeight,\n      itemsSpacing: itemsSpacing,\n      direction: direction,\n      padding: _padding\n    }),\n    width = _computeDimensions.width,\n    height = _computeDimensions.height,\n    padding = _computeDimensions.padding;\n  var _computePositionFromA = computePositionFromAnchor({\n      anchor: anchor,\n      translateX: translateX,\n      translateY: translateY,\n      containerWidth: containerWidth,\n      containerHeight: containerHeight,\n      width: width,\n      height: height\n    }),\n    x = _computePositionFromA.x,\n    y = _computePositionFromA.y;\n  var xStep = direction === 'row' ? itemWidth + itemsSpacing : 0;\n  var yStep = direction === 'column' ? itemHeight + itemsSpacing : 0;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.font = \"\".concat(theme.legends.text.fontSize, \"px \").concat(theme.legends.text.fontFamily || 'sans-serif');\n  data.forEach(function (d, i) {\n    var _d$color, _ref2;\n    var itemX = i * xStep + padding.left;\n    var itemY = i * yStep + padding.top;\n    var _computeItemLayout = computeItemLayout({\n        direction: itemDirection,\n        justify: justify,\n        symbolSize: symbolSize,\n        symbolSpacing: symbolSpacing,\n        width: itemWidth,\n        height: itemHeight\n      }),\n      symbolX = _computeItemLayout.symbolX,\n      symbolY = _computeItemLayout.symbolY,\n      labelX = _computeItemLayout.labelX,\n      labelY = _computeItemLayout.labelY,\n      labelAnchor = _computeItemLayout.labelAnchor,\n      labelAlignment = _computeItemLayout.labelAlignment;\n    ctx.fillStyle = (_d$color = d.color) !== null && _d$color !== void 0 ? _d$color : 'black';\n    ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize);\n    ctx.textAlign = textAlignMapping[labelAnchor];\n    if (labelAlignment === 'central') {\n      ctx.textBaseline = 'middle';\n    }\n    ctx.fillStyle = (_ref2 = itemTextColor !== null && itemTextColor !== void 0 ? itemTextColor : theme.legends.text.fill) !== null && _ref2 !== void 0 ? _ref2 : 'black';\n    ctx.fillText(String(d.label), itemX + labelX, itemY + labelY);\n  });\n  ctx.restore();\n};\nvar useQuantizeColorScaleLegendData = function useQuantizeColorScaleLegendData(_ref) {\n  var scale = _ref.scale,\n    overriddenDomain = _ref.domain,\n    _ref$reverse = _ref.reverse,\n    reverse = _ref$reverse === void 0 ? false : _ref$reverse,\n    _ref$valueFormat = _ref.valueFormat,\n    valueFormat = _ref$valueFormat === void 0 ? function (v) {\n      return v;\n    } : _ref$valueFormat,\n    _ref$separator = _ref.separator,\n    separator = _ref$separator === void 0 ? ' - ' : _ref$separator;\n  return useMemo(function () {\n    var domain = overriddenDomain !== null && overriddenDomain !== void 0 ? overriddenDomain : scale.range();\n    var items = domain.map(function (domainValue, index) {\n      var _scale$invertExtent = scale.invertExtent(domainValue),\n        _scale$invertExtent2 = _slicedToArray(_scale$invertExtent, 2),\n        start = _scale$invertExtent2[0],\n        end = _scale$invertExtent2[1];\n      return {\n        id: domainValue,\n        index: index,\n        extent: [start, end],\n        label: \"\".concat(valueFormat(start)).concat(separator).concat(valueFormat(end)),\n        value: scale(start),\n        color: domainValue\n      };\n    });\n    if (reverse === true) items.reverse();\n    return items;\n  }, [overriddenDomain, scale, reverse]);\n};\nvar LegendPropShape = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  anchor: PropTypes.oneOf(['top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', 'center']).isRequired,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  direction: PropTypes.oneOf(['row', 'column']).isRequired,\n  itemsSpacing: PropTypes.number,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  itemDirection: PropTypes.oneOf(['left-to-right', 'right-to-left', 'top-to-bottom', 'bottom-to-top']),\n  itemTextColor: PropTypes.string,\n  itemBackground: PropTypes.string,\n  itemOpacity: PropTypes.number,\n  symbolShape: PropTypes.oneOfType([PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']), PropTypes.func]),\n  symbolSize: PropTypes.number,\n  symbolSpacing: PropTypes.number,\n  symbolBorderWidth: PropTypes.number,\n  symbolBorderColor: PropTypes.string,\n  onClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  effects: PropTypes.arrayOf(PropTypes.shape({\n    on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n    style: PropTypes.shape({\n      itemTextColor: PropTypes.string,\n      itemBackground: PropTypes.string,\n      itemOpacity: PropTypes.number,\n      symbolSize: PropTypes.number,\n      symbolBorderWidth: PropTypes.number,\n      symbolBorderColor: PropTypes.string\n    }).isRequired\n  }))\n};\nexport { BoxLegendSvg, LegendPropShape, LegendSvg, LegendSvgItem, renderLegendToCanvas, useQuantizeColorScaleLegendData };","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","isObject","item","zeroPadding","top","right","bottom","left","computeDimensions","_ref","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Error","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","_ref2","anchor","translateX","translateY","containerWidth","containerHeight","x","y","computeItemLayout","_ref3","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","SymbolCircle","size","fill","_ref$opacity","opacity","_ref$borderWidth","borderWidth","_ref$borderColor","borderColor","jsx","r","cx","cy","strokeWidth","stroke","style","pointerEvents","SymbolDiamond","transform","concat","children","d","SymbolSquare","SymbolTriangle","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","_style$symbolSize","_style$itemOpacity","_style$itemBackground","_style$symbolSize2","_ref4","_data$fill","_style$symbolBorderWi","_style$symbolBorderCo","_ref5","_ref6","_style$itemTextColor","data","_ref$direction","_ref$justify","textColor","_ref$background","background","_ref$symbolShape","symbolShape","_ref$symbolSize","_ref$symbolSpacing","_ref$symbolBorderWidt","symbolBorderWidth","_ref$symbolBorderColo","symbolBorderColor","_onClick","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","_useState","useState","_useState2","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","applyEffects","on","_style","reduce","acc","effect","handleMouseLeave","_style2","_computeItemLayout","isInteractive","some","handler","SymbolShape","jsxs","itemOpacity","itemBackground","cursor","id","createElement","color","hidden","legends","symbol","textAnchor","text","itemTextColor","dominantBaseline","userSelect","label","LegendSvg","_ref$padding","_ref$itemDirection","itemDirection","_ref$itemsSpacing","_ref$itemBackground","_ref$itemOpacity","_computeDimensions","xStep","yStep","map","BoxLegendSvg","_ref$translateX","_ref$translateY","_computePositionFromA","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","_d$color","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","_ref$reverse","reverse","_ref$valueFormat","valueFormat","v","_ref$separator","separator","useMemo","range","items","domainValue","index","_scale$invertExtent","invertExtent","_scale$invertExtent2","extent","LegendPropShape","PropTypes","arrayOf","oneOf","isRequired","number","string","oneOfType","func","shape"],"sources":["/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/compute.ts","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/symbols/SymbolCircle.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/symbols/SymbolDiamond.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/symbols/SymbolSquare.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/symbols/SymbolTriangle.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/LegendSvgItem.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/LegendSvg.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/svg/BoxLegendSvg.tsx","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/canvas.ts","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/hooks.ts","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/legends/src/props.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}