{"ast":null,"code":"import { memo, useMemo, useState, useCallback, createElement, Fragment, forwardRef, useRef, useEffect } from 'react';\nimport { useTheme, lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes, curveFromProp, useValueFormatter, useMotionConfig, useAnimatedPath, getLabelGenerator, DotsItem, withContainer, useDimensions, CartesianMarkers, bindDefs, SvgWrapper, ResponsiveWrapper, getRelativeCursor, isCursorInRect } from '@nivo/core';\nimport { ordinalColorsPropType, useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport { axisPropType, Grid, Axes, renderGridLinesToCanvas, renderAxesToCanvas } from '@nivo/axes';\nimport { LegendPropShape, BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\nimport { BasicTooltip, TableTooltip, Chip, useTooltip, Crosshair } from '@nivo/tooltip';\nimport { line, area } from 'd3-shape';\nimport { computeXYScalesForSeries } from '@nivo/scales';\nimport PropTypes from 'prop-types';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Mesh as Mesh$2, useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nvar LinePointTooltip = function LinePointTooltip(_ref) {\n  var point = _ref.point;\n  return jsx(BasicTooltip, {\n    id: jsxs(\"span\", {\n      children: [\"x: \", jsx(\"strong\", {\n        children: point.data.xFormatted\n      }), \", y:\", ' ', jsx(\"strong\", {\n        children: point.data.yFormatted\n      })]\n    }),\n    enableChip: true,\n    color: point.serieColor\n  });\n};\nvar PointTooltip = memo(LinePointTooltip);\nvar SliceTooltip = function SliceTooltip(_ref) {\n  var slice = _ref.slice,\n    axis = _ref.axis;\n  var theme = useTheme();\n  var otherAxis = axis === 'x' ? 'y' : 'x';\n  return jsx(TableTooltip, {\n    rows: slice.points.map(function (point) {\n      return [jsx(Chip, {\n        color: point.serieColor,\n        style: theme.tooltip.chip\n      }, \"chip\"), point.serieId, jsx(\"span\", {\n        style: theme.tooltip.tableCellValue,\n        children: point.data[\"\".concat(otherAxis, \"Formatted\")]\n      }, \"value\")];\n    })\n  });\n};\nvar SliceTooltip$1 = memo(SliceTooltip);\nvar commonPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]),\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n    })).isRequired\n  })).isRequired,\n  xScale: PropTypes.object.isRequired,\n  xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  yScale: PropTypes.object.isRequired,\n  yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'slices', 'points', 'mesh', 'legends']), PropTypes.func])).isRequired,\n  curve: lineCurvePropType.isRequired,\n  axisTop: axisPropType,\n  axisRight: axisPropType,\n  axisBottom: axisPropType,\n  axisLeft: axisPropType,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  gridXValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  gridYValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  enablePoints: PropTypes.bool.isRequired,\n  pointSymbol: PropTypes.func,\n  pointSize: PropTypes.number.isRequired,\n  pointColor: PropTypes.any.isRequired,\n  pointBorderWidth: PropTypes.number.isRequired,\n  pointBorderColor: PropTypes.any.isRequired,\n  enablePointLabel: PropTypes.bool.isRequired,\n  pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  markers: PropTypes.arrayOf(PropTypes.shape({\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n    style: PropTypes.object\n  })),\n  colors: ordinalColorsPropType.isRequired,\n  enableArea: PropTypes.bool.isRequired,\n  areaOpacity: PropTypes.number.isRequired,\n  areaBlendMode: blendModePropType.isRequired,\n  areaBaselineValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n  lineWidth: PropTypes.number.isRequired,\n  legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  debugMesh: PropTypes.bool.isRequired,\n  tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n  debugSlices: PropTypes.bool.isRequired,\n  sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  enableCrosshair: PropTypes.bool.isRequired,\n  crosshairType: PropTypes.string.isRequired\n};\nvar LinePropTypes = _objectSpread2(_objectSpread2(_objectSpread2({}, commonPropTypes), {}, {\n  enablePointLabel: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  useMesh: PropTypes.bool.isRequired\n}, motionPropTypes), defsPropTypes);\nvar LineCanvasPropTypes = _objectSpread2({\n  pixelRatio: PropTypes.number.isRequired\n}, commonPropTypes);\nvar commonDefaultProps = {\n  curve: 'linear',\n  xScale: {\n    type: 'point'\n  },\n  yScale: {\n    type: 'linear',\n    min: 0,\n    max: 'auto'\n  },\n  layers: ['grid', 'markers', 'axes', 'areas', 'crosshair', 'lines', 'points', 'slices', 'mesh', 'legends'],\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: true,\n  enableGridY: true,\n  enablePoints: true,\n  pointSize: 6,\n  pointColor: {\n    from: 'color'\n  },\n  pointBorderWidth: 0,\n  pointBorderColor: {\n    theme: 'background'\n  },\n  enablePointLabel: false,\n  pointLabel: 'yFormatted',\n  colors: {\n    scheme: 'nivo'\n  },\n  enableArea: false,\n  areaBaselineValue: 0,\n  areaOpacity: 0.2,\n  areaBlendMode: 'normal',\n  lineWidth: 2,\n  legends: [],\n  isInteractive: true,\n  tooltip: PointTooltip,\n  enableSlices: false,\n  debugSlices: false,\n  sliceTooltip: SliceTooltip$1,\n  debugMesh: false,\n  enableCrosshair: true,\n  crosshairType: 'bottom-left'\n};\nvar LineDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  enablePointLabel: false,\n  useMesh: false,\n  animate: true,\n  motionConfig: 'gentle',\n  defs: [],\n  fill: [],\n  role: 'img'\n});\nvar LineCanvasDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1\n});\nvar useLineGenerator = function useLineGenerator(_ref) {\n  var curve = _ref.curve;\n  return useMemo(function () {\n    return line().defined(function (d) {\n      return d.x !== null && d.y !== null;\n    }).x(function (d) {\n      return d.x;\n    }).y(function (d) {\n      return d.y;\n    }).curve(curveFromProp(curve));\n  }, [curve]);\n};\nvar useAreaGenerator = function useAreaGenerator(_ref2) {\n  var curve = _ref2.curve,\n    yScale = _ref2.yScale,\n    areaBaselineValue = _ref2.areaBaselineValue;\n  return useMemo(function () {\n    return area().defined(function (d) {\n      return d.x !== null && d.y !== null;\n    }).x(function (d) {\n      return d.x;\n    }).y1(function (d) {\n      return d.y;\n    }).curve(curveFromProp(curve)).y0(yScale(areaBaselineValue));\n  }, [curve, yScale, areaBaselineValue]);\n};\nvar usePoints = function usePoints(_ref3) {\n  var series = _ref3.series,\n    getPointColor = _ref3.getPointColor,\n    getPointBorderColor = _ref3.getPointBorderColor,\n    formatX = _ref3.formatX,\n    formatY = _ref3.formatY;\n  return useMemo(function () {\n    return series.reduce(function (acc, serie) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(serie.data.filter(function (datum) {\n        return datum.position.x !== null && datum.position.y !== null;\n      }).map(function (datum, i) {\n        var point = {\n          id: \"\".concat(serie.id, \".\").concat(i),\n          index: acc.length + i,\n          serieId: serie.id,\n          serieColor: serie.color,\n          x: datum.position.x,\n          y: datum.position.y\n        };\n        point.color = getPointColor(serie);\n        point.borderColor = getPointBorderColor(point);\n        point.data = _objectSpread2(_objectSpread2({}, datum.data), {}, {\n          xFormatted: formatX(datum.data.x),\n          yFormatted: formatY(datum.data.y)\n        });\n        return point;\n      })));\n    }, []);\n  }, [series, getPointColor, getPointBorderColor, formatX, formatY]);\n};\nvar useSlices = function useSlices(_ref4) {\n  var enableSlices = _ref4.enableSlices,\n    points = _ref4.points,\n    width = _ref4.width,\n    height = _ref4.height;\n  return useMemo(function () {\n    if (enableSlices === false) return [];\n    if (enableSlices === 'x') {\n      var map = new Map();\n      points.forEach(function (point) {\n        if (point.data.x === null || point.data.y === null) return;\n        if (!map.has(point.x)) map.set(point.x, [point]);else map.get(point.x).push(point);\n      });\n      return Array.from(map.entries()).sort(function (a, b) {\n        return a[0] - b[0];\n      }).map(function (_ref5, i, slices) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          x = _ref6[0],\n          slicePoints = _ref6[1];\n        var prevSlice = slices[i - 1];\n        var nextSlice = slices[i + 1];\n        var x0;\n        if (!prevSlice) x0 = x;else x0 = x - (x - prevSlice[0]) / 2;\n        var sliceWidth;\n        if (!nextSlice) sliceWidth = width - x0;else sliceWidth = x - x0 + (nextSlice[0] - x) / 2;\n        return {\n          id: x,\n          x0: x0,\n          x: x,\n          y0: 0,\n          y: 0,\n          width: sliceWidth,\n          height: height,\n          points: slicePoints.reverse()\n        };\n      });\n    } else if (enableSlices === 'y') {\n      var _map = new Map();\n      points.forEach(function (point) {\n        if (point.data.x === null || point.data.y === null) return;\n        if (!_map.has(point.y)) _map.set(point.y, [point]);else _map.get(point.y).push(point);\n      });\n      return Array.from(_map.entries()).sort(function (a, b) {\n        return a[0] - b[0];\n      }).map(function (_ref7, i, slices) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          y = _ref8[0],\n          slicePoints = _ref8[1];\n        var prevSlice = slices[i - 1];\n        var nextSlice = slices[i + 1];\n        var y0;\n        if (!prevSlice) y0 = y;else y0 = y - (y - prevSlice[0]) / 2;\n        var sliceHeight;\n        if (!nextSlice) sliceHeight = height - y0;else sliceHeight = y - y0 + (nextSlice[0] - y) / 2;\n        return {\n          id: y,\n          x0: 0,\n          x: 0,\n          y0: y0,\n          y: y,\n          width: width,\n          height: sliceHeight,\n          points: slicePoints.reverse()\n        };\n      });\n    }\n  }, [enableSlices, points]);\n};\nvar useLine = function useLine(_ref9) {\n  var data = _ref9.data,\n    _ref9$xScale = _ref9.xScale,\n    xScaleSpec = _ref9$xScale === void 0 ? LineDefaultProps.xScale : _ref9$xScale,\n    xFormat = _ref9.xFormat,\n    _ref9$yScale = _ref9.yScale,\n    yScaleSpec = _ref9$yScale === void 0 ? LineDefaultProps.yScale : _ref9$yScale,\n    yFormat = _ref9.yFormat,\n    width = _ref9.width,\n    height = _ref9.height,\n    _ref9$colors = _ref9.colors,\n    colors = _ref9$colors === void 0 ? LineDefaultProps.colors : _ref9$colors,\n    _ref9$curve = _ref9.curve,\n    curve = _ref9$curve === void 0 ? LineDefaultProps.curve : _ref9$curve,\n    _ref9$areaBaselineVal = _ref9.areaBaselineValue,\n    areaBaselineValue = _ref9$areaBaselineVal === void 0 ? LineDefaultProps.areaBaselineValue : _ref9$areaBaselineVal,\n    _ref9$pointColor = _ref9.pointColor,\n    pointColor = _ref9$pointColor === void 0 ? LineDefaultProps.pointColor : _ref9$pointColor,\n    _ref9$pointBorderColo = _ref9.pointBorderColor,\n    pointBorderColor = _ref9$pointBorderColo === void 0 ? LineDefaultProps.pointBorderColor : _ref9$pointBorderColo,\n    _ref9$enableSlices = _ref9.enableSlices,\n    enableSlices = _ref9$enableSlices === void 0 ? LineDefaultProps.enableSlicesTooltip : _ref9$enableSlices;\n  var formatX = useValueFormatter(xFormat);\n  var formatY = useValueFormatter(yFormat);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var theme = useTheme();\n  var getPointColor = useInheritedColor(pointColor, theme);\n  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    hiddenIds = _useState2[0],\n    setHiddenIds = _useState2[1];\n  var _useMemo = useMemo(function () {\n      return computeXYScalesForSeries(data.filter(function (item) {\n        return hiddenIds.indexOf(item.id) === -1;\n      }), xScaleSpec, yScaleSpec, width, height);\n    }, [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]),\n    xScale = _useMemo.xScale,\n    yScale = _useMemo.yScale,\n    rawSeries = _useMemo.series;\n  var _useMemo2 = useMemo(function () {\n      var dataWithColor = data.map(function (line) {\n        return {\n          id: line.id,\n          label: line.id,\n          color: getColor(line)\n        };\n      });\n      var series = dataWithColor.map(function (datum) {\n        return _objectSpread2(_objectSpread2({}, rawSeries.find(function (serie) {\n          return serie.id === datum.id;\n        })), {}, {\n          color: datum.color\n        });\n      }).filter(function (item) {\n        return Boolean(item.id);\n      });\n      var legendData = dataWithColor.map(function (item) {\n        return _objectSpread2(_objectSpread2({}, item), {}, {\n          hidden: !series.find(function (serie) {\n            return serie.id === item.id;\n          })\n        });\n      }).reverse();\n      return {\n        legendData: legendData,\n        series: series\n      };\n    }, [data, rawSeries, getColor]),\n    legendData = _useMemo2.legendData,\n    series = _useMemo2.series;\n  var toggleSerie = useCallback(function (id) {\n    setHiddenIds(function (state) {\n      return state.indexOf(id) > -1 ? state.filter(function (item) {\n        return item !== id;\n      }) : [].concat(_toConsumableArray(state), [id]);\n    });\n  }, []);\n  var points = usePoints({\n    series: series,\n    getPointColor: getPointColor,\n    getPointBorderColor: getPointBorderColor,\n    formatX: formatX,\n    formatY: formatY\n  });\n  var slices = useSlices({\n    enableSlices: enableSlices,\n    points: points,\n    width: width,\n    height: height\n  });\n  var lineGenerator = useLineGenerator({\n    curve: curve\n  });\n  var areaGenerator = useAreaGenerator({\n    curve: curve,\n    yScale: yScale,\n    areaBaselineValue: areaBaselineValue\n  });\n  return {\n    legendData: legendData,\n    toggleSerie: toggleSerie,\n    lineGenerator: lineGenerator,\n    areaGenerator: areaGenerator,\n    getColor: getColor,\n    series: series,\n    xScale: xScale,\n    yScale: yScale,\n    slices: slices,\n    points: points\n  };\n};\nvar AreaPath = function AreaPath(_ref) {\n  var areaBlendMode = _ref.areaBlendMode,\n    areaOpacity = _ref.areaOpacity,\n    color = _ref.color,\n    fill = _ref.fill,\n    path = _ref.path;\n  var _useMotionConfig = useMotionConfig(),\n    animate = _useMotionConfig.animate,\n    springConfig = _useMotionConfig.config;\n  var animatedPath = useAnimatedPath(path);\n  var animatedProps = useSpring({\n    color: color,\n    config: springConfig,\n    immediate: !animate\n  });\n  return jsx(animated.path, {\n    d: animatedPath,\n    fill: fill ? fill : animatedProps.color,\n    fillOpacity: areaOpacity,\n    strokeWidth: 0,\n    style: {\n      mixBlendMode: areaBlendMode\n    }\n  });\n};\nvar Areas = function Areas(_ref2) {\n  var areaGenerator = _ref2.areaGenerator,\n    areaOpacity = _ref2.areaOpacity,\n    areaBlendMode = _ref2.areaBlendMode,\n    lines = _ref2.lines;\n  var computedLines = lines.slice(0).reverse();\n  return jsx(\"g\", {\n    children: computedLines.map(function (line) {\n      return jsx(AreaPath, _objectSpread2({\n        path: areaGenerator(line.data.map(function (d) {\n          return d.position;\n        }))\n      }, _objectSpread2({\n        areaOpacity: areaOpacity,\n        areaBlendMode: areaBlendMode\n      }, line)), line.id);\n    })\n  });\n};\nvar Areas$1 = memo(Areas);\nvar LinesItem = function LinesItem(_ref) {\n  var lineGenerator = _ref.lineGenerator,\n    points = _ref.points,\n    color = _ref.color,\n    thickness = _ref.thickness;\n  var path = useMemo(function () {\n    return lineGenerator(points);\n  }, [lineGenerator, points]);\n  var animatedPath = useAnimatedPath(path);\n  return jsx(animated.path, {\n    d: animatedPath,\n    fill: \"none\",\n    strokeWidth: thickness,\n    stroke: color\n  });\n};\nvar LinesItem$1 = memo(LinesItem);\nvar Lines = function Lines(_ref) {\n  var lines = _ref.lines,\n    lineGenerator = _ref.lineGenerator,\n    lineWidth = _ref.lineWidth;\n  return lines.slice(0).reverse().map(function (_ref2) {\n    var id = _ref2.id,\n      data = _ref2.data,\n      color = _ref2.color;\n    return jsx(LinesItem$1, {\n      id: id,\n      points: data.map(function (d) {\n        return d.position;\n      }),\n      lineGenerator: lineGenerator,\n      color: color,\n      thickness: lineWidth\n    }, id);\n  });\n};\nvar Lines$1 = memo(Lines);\nvar SlicesItem = function SlicesItem(_ref) {\n  var slice = _ref.slice,\n    axis = _ref.axis,\n    debug = _ref.debug,\n    tooltip = _ref.tooltip,\n    isCurrent = _ref.isCurrent,\n    setCurrent = _ref.setCurrent;\n  var _useTooltip = useTooltip(),\n    showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n    hideTooltip = _useTooltip.hideTooltip;\n  var handleMouseEnter = useCallback(function (event) {\n    showTooltipFromEvent(createElement(tooltip, {\n      slice: slice,\n      axis: axis\n    }), event, 'right');\n    setCurrent(slice);\n  }, [showTooltipFromEvent, tooltip, slice]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(createElement(tooltip, {\n      slice: slice,\n      axis: axis\n    }), event, 'right');\n  }, [showTooltipFromEvent, tooltip, slice]);\n  var handleMouseLeave = useCallback(function () {\n    hideTooltip();\n    setCurrent(null);\n  }, [hideTooltip]);\n  return jsx(\"rect\", {\n    x: slice.x0,\n    y: slice.y0,\n    width: slice.width,\n    height: slice.height,\n    stroke: \"red\",\n    strokeWidth: debug ? 1 : 0,\n    strokeOpacity: 0.75,\n    fill: \"red\",\n    fillOpacity: isCurrent && debug ? 0.35 : 0,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave\n  });\n};\nvar SlicesItem$1 = memo(SlicesItem);\nvar Slices = function Slices(_ref) {\n  var slices = _ref.slices,\n    axis = _ref.axis,\n    debug = _ref.debug,\n    height = _ref.height,\n    tooltip = _ref.tooltip,\n    current = _ref.current,\n    setCurrent = _ref.setCurrent;\n  return slices.map(function (slice) {\n    return jsx(SlicesItem$1, {\n      slice: slice,\n      axis: axis,\n      debug: debug,\n      height: height,\n      tooltip: tooltip,\n      setCurrent: setCurrent,\n      isCurrent: current !== null && current.id === slice.id\n    }, slice.id);\n  });\n};\nvar Slices$1 = memo(Slices);\nvar Points = function Points(_ref) {\n  var points = _ref.points,\n    symbol = _ref.symbol,\n    size = _ref.size,\n    borderWidth = _ref.borderWidth,\n    enableLabel = _ref.enableLabel,\n    label = _ref.label,\n    labelYOffset = _ref.labelYOffset;\n  var theme = useTheme();\n  var getLabel = getLabelGenerator(label);\n  var mappedPoints = points.reverse().map(function (point) {\n    var mappedPoint = {\n      id: point.id,\n      x: point.x,\n      y: point.y,\n      datum: point.data,\n      fill: point.color,\n      stroke: point.borderColor,\n      label: enableLabel ? getLabel(point.data) : null\n    };\n    return mappedPoint;\n  });\n  return jsx(\"g\", {\n    children: mappedPoints.map(function (point) {\n      return jsx(DotsItem, {\n        x: point.x,\n        y: point.y,\n        datum: point.datum,\n        symbol: symbol,\n        size: size,\n        color: point.fill,\n        borderWidth: borderWidth,\n        borderColor: point.stroke,\n        label: point.label,\n        labelYOffset: labelYOffset,\n        theme: theme\n      }, point.id);\n    })\n  });\n};\nvar Points$1 = memo(Points);\nvar Mesh = function Mesh(_ref) {\n  var points = _ref.points,\n    width = _ref.width,\n    height = _ref.height,\n    margin = _ref.margin,\n    setCurrent = _ref.setCurrent,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseMove = _ref.onMouseMove,\n    onMouseLeave = _ref.onMouseLeave,\n    onClick = _ref.onClick,\n    tooltip = _ref.tooltip,\n    debug = _ref.debug;\n  var _useTooltip = useTooltip(),\n    showTooltipAt = _useTooltip.showTooltipAt,\n    hideTooltip = _useTooltip.hideTooltip;\n  var handleMouseEnter = useCallback(function (point, event) {\n    showTooltipAt(createElement(tooltip, {\n      point: point\n    }), [point.x + margin.left, point.y + margin.top], 'top');\n    setCurrent(point);\n    onMouseEnter && onMouseEnter(point, event);\n  }, [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]);\n  var handleMouseMove = useCallback(function (point, event) {\n    showTooltipAt(createElement(tooltip, {\n      point: point\n    }), [point.x + margin.left, point.y + margin.top], 'top');\n    setCurrent(point);\n    onMouseMove && onMouseMove(point, event);\n  }, [setCurrent, showTooltipAt, tooltip, onMouseMove]);\n  var handleMouseLeave = useCallback(function (point, event) {\n    hideTooltip();\n    setCurrent(null);\n    onMouseLeave && onMouseLeave(point, event);\n  }, [hideTooltip, setCurrent, onMouseLeave]);\n  var handleClick = useCallback(function (point, event) {\n    onClick && onClick(point, event);\n  }, [onClick]);\n  return jsx(Mesh$2, {\n    nodes: points,\n    width: width,\n    height: height,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    debug: debug\n  });\n};\nvar Mesh$1 = memo(Mesh);\nvar Line = function Line(props) {\n  var data = props.data,\n    xScaleSpec = props.xScale,\n    xFormat = props.xFormat,\n    yScaleSpec = props.yScale,\n    yFormat = props.yFormat,\n    layers = props.layers,\n    curve = props.curve,\n    areaBaselineValue = props.areaBaselineValue,\n    colors = props.colors,\n    partialMargin = props.margin,\n    width = props.width,\n    height = props.height,\n    axisTop = props.axisTop,\n    axisRight = props.axisRight,\n    axisBottom = props.axisBottom,\n    axisLeft = props.axisLeft,\n    enableGridX = props.enableGridX,\n    enableGridY = props.enableGridY,\n    gridXValues = props.gridXValues,\n    gridYValues = props.gridYValues,\n    lineWidth = props.lineWidth,\n    enableArea = props.enableArea,\n    areaOpacity = props.areaOpacity,\n    areaBlendMode = props.areaBlendMode,\n    enablePoints = props.enablePoints,\n    pointSymbol = props.pointSymbol,\n    pointSize = props.pointSize,\n    pointColor = props.pointColor,\n    pointBorderWidth = props.pointBorderWidth,\n    pointBorderColor = props.pointBorderColor,\n    enablePointLabel = props.enablePointLabel,\n    pointLabel = props.pointLabel,\n    pointLabelYOffset = props.pointLabelYOffset,\n    defs = props.defs,\n    fill = props.fill,\n    markers = props.markers,\n    legends = props.legends,\n    isInteractive = props.isInteractive,\n    useMesh = props.useMesh,\n    debugMesh = props.debugMesh,\n    onMouseEnter = props.onMouseEnter,\n    onMouseMove = props.onMouseMove,\n    onMouseLeave = props.onMouseLeave,\n    onClick = props.onClick,\n    tooltip = props.tooltip,\n    enableSlices = props.enableSlices,\n    debugSlices = props.debugSlices,\n    sliceTooltip = props.sliceTooltip,\n    enableCrosshair = props.enableCrosshair,\n    crosshairType = props.crosshairType,\n    role = props.role;\n  var _useDimensions = useDimensions(width, height, partialMargin),\n    margin = _useDimensions.margin,\n    innerWidth = _useDimensions.innerWidth,\n    innerHeight = _useDimensions.innerHeight,\n    outerWidth = _useDimensions.outerWidth,\n    outerHeight = _useDimensions.outerHeight;\n  var _useLine = useLine({\n      data: data,\n      xScale: xScaleSpec,\n      xFormat: xFormat,\n      yScale: yScaleSpec,\n      yFormat: yFormat,\n      width: innerWidth,\n      height: innerHeight,\n      colors: colors,\n      curve: curve,\n      areaBaselineValue: areaBaselineValue,\n      pointColor: pointColor,\n      pointBorderColor: pointBorderColor,\n      enableSlices: enableSlices\n    }),\n    legendData = _useLine.legendData,\n    toggleSerie = _useLine.toggleSerie,\n    lineGenerator = _useLine.lineGenerator,\n    areaGenerator = _useLine.areaGenerator,\n    series = _useLine.series,\n    xScale = _useLine.xScale,\n    yScale = _useLine.yScale,\n    slices = _useLine.slices,\n    points = _useLine.points;\n  var theme = useTheme();\n  var getPointColor = useInheritedColor(pointColor, theme);\n  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPoint = _useState2[0],\n    setCurrentPoint = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentSlice = _useState4[0],\n    setCurrentSlice = _useState4[1];\n  var layerById = {\n    grid: jsx(Grid, {\n      theme: theme,\n      width: innerWidth,\n      height: innerHeight,\n      xScale: enableGridX ? xScale : null,\n      yScale: enableGridY ? yScale : null,\n      xValues: gridXValues,\n      yValues: gridYValues\n    }, \"grid\"),\n    markers: jsx(CartesianMarkers, {\n      markers: markers,\n      width: innerWidth,\n      height: innerHeight,\n      xScale: xScale,\n      yScale: yScale,\n      theme: theme\n    }, \"markers\"),\n    axes: jsx(Axes, {\n      xScale: xScale,\n      yScale: yScale,\n      width: innerWidth,\n      height: innerHeight,\n      theme: theme,\n      top: axisTop,\n      right: axisRight,\n      bottom: axisBottom,\n      left: axisLeft\n    }, \"axes\"),\n    areas: null,\n    lines: jsx(Lines$1, {\n      lines: series,\n      lineGenerator: lineGenerator,\n      lineWidth: lineWidth\n    }, \"lines\"),\n    slices: null,\n    points: null,\n    crosshair: null,\n    mesh: null,\n    legends: legends.map(function (legend, i) {\n      return jsx(BoxLegendSvg, _objectSpread2(_objectSpread2({}, legend), {}, {\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        data: legend.data || legendData,\n        theme: theme,\n        toggleSerie: legend.toggleSerie ? toggleSerie : undefined\n      }), \"legend.\".concat(i));\n    })\n  };\n  var boundDefs = bindDefs(defs, series, fill);\n  if (enableArea) {\n    layerById.areas = jsx(Areas$1, {\n      areaGenerator: areaGenerator,\n      areaOpacity: areaOpacity,\n      areaBlendMode: areaBlendMode,\n      lines: series\n    }, \"areas\");\n  }\n  if (isInteractive && enableSlices !== false) {\n    layerById.slices = jsx(Slices$1, {\n      slices: slices,\n      axis: enableSlices,\n      debug: debugSlices,\n      height: innerHeight,\n      tooltip: sliceTooltip,\n      current: currentSlice,\n      setCurrent: setCurrentSlice\n    }, \"slices\");\n  }\n  if (enablePoints) {\n    layerById.points = jsx(Points$1, {\n      points: points,\n      symbol: pointSymbol,\n      size: pointSize,\n      color: getPointColor,\n      borderWidth: pointBorderWidth,\n      borderColor: getPointBorderColor,\n      enableLabel: enablePointLabel,\n      label: pointLabel,\n      labelYOffset: pointLabelYOffset\n    }, \"points\");\n  }\n  if (isInteractive && enableCrosshair) {\n    if (currentPoint !== null) {\n      layerById.crosshair = jsx(Crosshair, {\n        width: innerWidth,\n        height: innerHeight,\n        x: currentPoint.x,\n        y: currentPoint.y,\n        type: crosshairType\n      }, \"crosshair\");\n    }\n    if (currentSlice !== null) {\n      layerById.crosshair = jsx(Crosshair, {\n        width: innerWidth,\n        height: innerHeight,\n        x: currentSlice.x,\n        y: currentSlice.y,\n        type: enableSlices\n      }, \"crosshair\");\n    }\n  }\n  if (isInteractive && useMesh && enableSlices === false) {\n    layerById.mesh = jsx(Mesh$1, {\n      points: points,\n      width: innerWidth,\n      height: innerHeight,\n      margin: margin,\n      current: currentPoint,\n      setCurrent: setCurrentPoint,\n      onMouseEnter: onMouseEnter,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick,\n      tooltip: tooltip,\n      debug: debugMesh\n    }, \"mesh\");\n  }\n  return jsx(SvgWrapper, {\n    defs: boundDefs,\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role,\n    children: layers.map(function (layer, i) {\n      if (typeof layer === 'function') {\n        return jsx(Fragment, {\n          children: layer(_objectSpread2(_objectSpread2({}, props), {}, {\n            innerWidth: innerWidth,\n            innerHeight: innerHeight,\n            series: series,\n            slices: slices,\n            points: points,\n            xScale: xScale,\n            yScale: yScale,\n            lineGenerator: lineGenerator,\n            areaGenerator: areaGenerator,\n            currentPoint: currentPoint,\n            setCurrentPoint: setCurrentPoint,\n            currentSlice: currentSlice,\n            setCurrentSlice: setCurrentSlice\n          }))\n        }, i);\n      }\n      return layerById[layer];\n    })\n  });\n};\nLine.defaultProps = LineDefaultProps;\nvar Line$1 = withContainer(Line);\nvar ResponsiveLine = function ResponsiveLine(props) {\n  return jsx(ResponsiveWrapper, {\n    children: function children(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      return jsx(Line$1, _objectSpread2({\n        width: width,\n        height: height\n      }, props));\n    }\n  });\n};\nvar LineCanvas = function LineCanvas(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    partialMargin = _ref.margin,\n    pixelRatio = _ref.pixelRatio,\n    data = _ref.data,\n    xScaleSpec = _ref.xScale,\n    xFormat = _ref.xFormat,\n    yScaleSpec = _ref.yScale,\n    yFormat = _ref.yFormat,\n    curve = _ref.curve,\n    layers = _ref.layers,\n    colors = _ref.colors,\n    lineWidth = _ref.lineWidth,\n    enableArea = _ref.enableArea,\n    areaBaselineValue = _ref.areaBaselineValue,\n    areaOpacity = _ref.areaOpacity,\n    enablePoints = _ref.enablePoints,\n    pointSize = _ref.pointSize,\n    pointColor = _ref.pointColor,\n    pointBorderWidth = _ref.pointBorderWidth,\n    pointBorderColor = _ref.pointBorderColor,\n    enableGridX = _ref.enableGridX,\n    gridXValues = _ref.gridXValues,\n    enableGridY = _ref.enableGridY,\n    gridYValues = _ref.gridYValues,\n    axisTop = _ref.axisTop,\n    axisRight = _ref.axisRight,\n    axisBottom = _ref.axisBottom,\n    axisLeft = _ref.axisLeft,\n    legends = _ref.legends,\n    isInteractive = _ref.isInteractive,\n    debugMesh = _ref.debugMesh,\n    onMouseLeave = _ref.onMouseLeave,\n    onClick = _ref.onClick,\n    tooltip = _ref.tooltip,\n    canvasRef = _ref.canvasRef;\n  var canvasEl = useRef(null);\n  var _useDimensions = useDimensions(width, height, partialMargin),\n    margin = _useDimensions.margin,\n    innerWidth = _useDimensions.innerWidth,\n    innerHeight = _useDimensions.innerHeight,\n    outerWidth = _useDimensions.outerWidth,\n    outerHeight = _useDimensions.outerHeight;\n  var theme = useTheme();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPoint = _useState2[0],\n    setCurrentPoint = _useState2[1];\n  var _useLine = useLine({\n      data: data,\n      xScale: xScaleSpec,\n      xFormat: xFormat,\n      yScale: yScaleSpec,\n      yFormat: yFormat,\n      width: innerWidth,\n      height: innerHeight,\n      colors: colors,\n      curve: curve,\n      areaBaselineValue: areaBaselineValue,\n      pointColor: pointColor,\n      pointBorderColor: pointBorderColor\n    }),\n    lineGenerator = _useLine.lineGenerator,\n    areaGenerator = _useLine.areaGenerator,\n    series = _useLine.series,\n    xScale = _useLine.xScale,\n    yScale = _useLine.yScale,\n    points = _useLine.points;\n  var _useVoronoiMesh = useVoronoiMesh({\n      points: points,\n      width: innerWidth,\n      height: innerHeight,\n      debug: debugMesh\n    }),\n    delaunay = _useVoronoiMesh.delaunay,\n    voronoi = _useVoronoiMesh.voronoi;\n  useEffect(function () {\n    if (canvasRef) {\n      canvasRef.current = canvasEl.current;\n    }\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.translate(margin.left, margin.top);\n    layers.forEach(function (layer) {\n      if (typeof layer === 'function') {\n        layer({\n          ctx: ctx,\n          innerWidth: innerWidth,\n          innerHeight: innerHeight,\n          series: series,\n          points: points,\n          xScale: xScale,\n          yScale: yScale,\n          lineWidth: lineWidth,\n          lineGenerator: lineGenerator,\n          areaGenerator: areaGenerator,\n          currentPoint: currentPoint,\n          setCurrentPoint: setCurrentPoint\n        });\n      }\n      if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.grid.line.strokeWidth;\n        ctx.strokeStyle = theme.grid.line.stroke;\n        enableGridX && renderGridLinesToCanvas(ctx, {\n          width: innerWidth,\n          height: innerHeight,\n          scale: xScale,\n          axis: 'x',\n          values: gridXValues\n        });\n        enableGridY && renderGridLinesToCanvas(ctx, {\n          width: innerWidth,\n          height: innerHeight,\n          scale: yScale,\n          axis: 'y',\n          values: gridYValues\n        });\n      }\n      if (layer === 'axes') {\n        renderAxesToCanvas(ctx, {\n          xScale: xScale,\n          yScale: yScale,\n          width: innerWidth,\n          height: innerHeight,\n          top: axisTop,\n          right: axisRight,\n          bottom: axisBottom,\n          left: axisLeft,\n          theme: theme\n        });\n      }\n      if (layer === 'areas' && enableArea === true) {\n        ctx.save();\n        ctx.globalAlpha = areaOpacity;\n        areaGenerator.context(ctx);\n        series.forEach(function (serie) {\n          ctx.fillStyle = serie.color;\n          ctx.beginPath();\n          areaGenerator(serie.data.map(function (d) {\n            return d.position;\n          }));\n          ctx.fill();\n        });\n        ctx.restore();\n      }\n      if (layer === 'lines') {\n        lineGenerator.context(ctx);\n        series.forEach(function (serie) {\n          ctx.strokeStyle = serie.color;\n          ctx.lineWidth = lineWidth;\n          ctx.beginPath();\n          lineGenerator(serie.data.map(function (d) {\n            return d.position;\n          }));\n          ctx.stroke();\n        });\n      }\n      if (layer === 'points' && enablePoints === true && pointSize > 0) {\n        points.forEach(function (point) {\n          ctx.fillStyle = point.color;\n          ctx.beginPath();\n          ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI);\n          ctx.fill();\n          if (pointBorderWidth > 0) {\n            ctx.strokeStyle = point.borderColor;\n            ctx.lineWidth = pointBorderWidth;\n            ctx.stroke();\n          }\n        });\n      }\n      if (layer === 'mesh' && debugMesh === true) {\n        renderVoronoiToCanvas(ctx, voronoi);\n        if (currentPoint) {\n          renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index);\n        }\n      }\n      if (layer === 'legends') {\n        var legendData = series.map(function (serie) {\n          return {\n            id: serie.id,\n            label: serie.id,\n            color: serie.color\n          };\n        }).reverse();\n        legends.forEach(function (legend) {\n          renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n            data: legend.data || legendData,\n            containerWidth: innerWidth,\n            containerHeight: innerHeight,\n            theme: theme\n          }));\n        });\n      }\n    });\n  }, [canvasEl, outerWidth, outerHeight, layers, theme, lineGenerator, series, xScale, yScale, enableGridX, gridXValues, enableGridY, gridYValues, axisTop, axisRight, axisBottom, axisLeft, legends, points, enablePoints, pointSize, currentPoint]);\n  var getPointFromMouseEvent = useCallback(function (event) {\n    var _getRelativeCursor = getRelativeCursor(canvasEl.current, event),\n      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n      x = _getRelativeCursor2[0],\n      y = _getRelativeCursor2[1];\n    if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null;\n    var pointIndex = delaunay.find(x - margin.left, y - margin.top);\n    return points[pointIndex];\n  }, [canvasEl, margin, innerWidth, innerHeight, delaunay]);\n  var _useTooltip = useTooltip(),\n    showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n    hideTooltip = _useTooltip.hideTooltip;\n  var handleMouseHover = useCallback(function (event) {\n    var point = getPointFromMouseEvent(event);\n    setCurrentPoint(point);\n    if (point) {\n      showTooltipFromEvent(createElement(tooltip, {\n        point: point\n      }), event);\n    } else {\n      hideTooltip();\n    }\n  }, [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]);\n  var handleMouseLeave = useCallback(function (event) {\n    hideTooltip();\n    setCurrentPoint(null);\n    currentPoint && onMouseLeave && onMouseLeave(currentPoint, event);\n  }, [hideTooltip, setCurrentPoint, onMouseLeave]);\n  var handleClick = useCallback(function (event) {\n    if (onClick) {\n      var point = getPointFromMouseEvent(event);\n      point && onClick(point, event);\n    }\n  }, [getPointFromMouseEvent, onClick]);\n  return jsx(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseEnter: isInteractive ? handleMouseHover : undefined,\n    onMouseMove: isInteractive ? handleMouseHover : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\nLineCanvas.defaultProps = LineCanvasDefaultProps;\nvar LineCanvasWithContainer = withContainer(LineCanvas);\nvar LineCanvas$1 = forwardRef(function (props, ref) {\n  return jsx(LineCanvasWithContainer, _objectSpread2(_objectSpread2({}, props), {}, {\n    canvasRef: ref\n  }));\n});\nvar ResponsiveLineCanvas = function ResponsiveLineCanvas(props, ref) {\n  return jsx(ResponsiveWrapper, {\n    children: function children(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      return jsx(LineCanvas$1, _objectSpread2(_objectSpread2({\n        width: width,\n        height: height\n      }, props), {}, {\n        ref: ref\n      }));\n    }\n  });\n};\nvar ResponsiveLineCanvas$1 = forwardRef(ResponsiveLineCanvas);\nexport { Line$1 as Line, LineCanvas$1 as LineCanvas, LineCanvasDefaultProps, LineCanvasPropTypes, LineDefaultProps, LinePropTypes, ResponsiveLine, ResponsiveLineCanvas$1 as ResponsiveLineCanvas, useAreaGenerator, useLine, useLineGenerator, useSlices };","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","_arrayWithoutHoles","_iterableToArray","iter","_nonIterableSpread","_toConsumableArray","LinePointTooltip","_ref","point","jsx","BasicTooltip","id","jsxs","children","data","xFormatted","yFormatted","enableChip","color","serieColor","PointTooltip","memo","SliceTooltip","axis","theme","useTheme","otherAxis","TableTooltip","rows","points","map","Chip","style","tooltip","chip","serieId","tableCellValue","concat","SliceTooltip$1","commonPropTypes","PropTypes","arrayOf","shape","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","scheme","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","_ref2","area","y1","y0","usePoints","_ref3","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","datum","position","index","borderColor","useSlices","_ref4","width","height","Map","has","set","get","entries","sort","a","b","_ref5","slices","_ref6","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","_map","_ref7","_ref8","sliceHeight","useLine","_ref9","_ref9$xScale","xScaleSpec","_ref9$yScale","yScaleSpec","_ref9$colors","_ref9$curve","_ref9$areaBaselineVal","_ref9$pointColor","_ref9$pointBorderColo","_ref9$enableSlices","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useInheritedColor","_useState","useState","_useState2","hiddenIds","setHiddenIds","_useMemo","computeXYScalesForSeries","item","indexOf","rawSeries","_useMemo2","dataWithColor","label","find","Boolean","legendData","hidden","toggleSerie","useCallback","state","lineGenerator","areaGenerator","AreaPath","path","_useMotionConfig","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","fillOpacity","strokeWidth","mixBlendMode","Areas","lines","computedLines","Areas$1","LinesItem","thickness","stroke","LinesItem$1","Lines","Lines$1","SlicesItem","debug","isCurrent","setCurrent","_useTooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","event","createElement","handleMouseMove","handleMouseLeave","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","SlicesItem$1","Slices","current","Slices$1","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","DotsItem","Points$1","Mesh","margin","onClick","showTooltipAt","left","top","handleClick","Mesh$2","nodes","Mesh$1","Line","props","partialMargin","pointLabelYOffset","_useDimensions","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","_useLine","currentPoint","setCurrentPoint","_useState3","_useState4","currentSlice","setCurrentSlice","layerById","grid","Grid","xValues","yValues","CartesianMarkers","axes","Axes","right","bottom","areas","crosshair","mesh","legend","BoxLegendSvg","containerWidth","containerHeight","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","Line$1","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","_useVoronoiMesh","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","getPointFromMouseEvent","_getRelativeCursor","getRelativeCursor","_getRelativeCursor2","isCursorInRect","pointIndex","handleMouseHover","ref","cursor","LineCanvasWithContainer","LineCanvas$1","forwardRef","ResponsiveLineCanvas","ResponsiveLineCanvas$1"],"sources":["/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/PointTooltip.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/SliceTooltip.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/props.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/hooks.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Areas.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/LinesItem.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Lines.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/SlicesItem.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Slices.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Points.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Mesh.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/Line.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/ResponsiveLine.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/LineCanvas.js","/home/thiago/Documentos/Testes/KPIs/frontend/node_modules/@nivo/line/src/ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}