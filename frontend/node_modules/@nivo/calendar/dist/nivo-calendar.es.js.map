{"version":3,"file":"nivo-calendar.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/CalendarYearLegends.tsx","../src/CalendarMonthPath.tsx","../src/CalendarMonthLegends.tsx","../src/CalendarDay.tsx","../src/CalendarTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute/calendar.ts","../src/hooks.ts","../src/Calendar.tsx","../src/compute/timeRange.ts","../src/TimeRangeDay.tsx","../src/TimeRange.tsx","../src/ResponsiveTimeRange.tsx","../src/ResponsiveCalendar.tsx","../src/CalendarCanvas.tsx","../src/ResponsiveCalendarCanvas.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { CalendarYearLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarYearLegends = memo(({ years, legend, theme }: CalendarYearLegendsProps) => {\n    return (\n        <>\n            {years.map(year => {\n                return (\n                    <text\n                        key={year.year}\n                        transform={`translate(${year.x},${year.y}) rotate(${year.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(year.year)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarMonthPathProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthPath = memo(\n    ({ path, borderWidth, borderColor }: CalendarMonthPathProps) => {\n        return (\n            <path\n                d={path}\n                style={{\n                    fill: 'none',\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                    pointerEvents: 'none',\n                }}\n            />\n        )\n    }\n)\n","import { CalendarMonthLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthLegends = memo(({ months, legend, theme }: CalendarMonthLegendsProps) => {\n    return (\n        <>\n            {months.map(month => {\n                return (\n                    <text\n                        key={`${month.date.toString()}.legend`}\n                        transform={`translate(${month.x},${month.y}) rotate(${month.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(month.year, month.month, month.date)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarDayProps } from './types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { memo, useCallback } from 'react'\nimport * as React from 'react'\n\nexport const CalendarDay = memo(\n    ({\n        data,\n        x,\n        y,\n        size,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: CalendarDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseMove && onMouseMove(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => onClick?.(data, event),\n            [data, onClick]\n        )\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                width={size}\n                height={size}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { CalendarTooltipProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarTooltip = memo(({ value, day, color }: CalendarTooltipProps) => {\n    if (value === undefined || isNaN(Number(value))) return null\n    return <BasicTooltip id={day} value={value} color={color} enableChip={true} />\n})\n","import { timeFormat } from 'd3-time-format'\nimport { CalendarLegendProps } from './types'\nimport { CalendarTooltip } from './CalendarTooltip'\n\nconst monthLabelFormat = timeFormat('%b')\n\nconst commonDefaultProps = {\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'] as string[],\n\n    align: 'center',\n    direction: 'horizontal',\n    emptyColor: '#fff',\n\n    minValue: 0,\n    maxValue: 'auto',\n\n    yearSpacing: 30,\n    yearLegend: (year: number) => year,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthBorderWidth: 2,\n    monthBorderColor: '#000',\n    monthSpacing: 0,\n    monthLegend: (_year: number, _month: number, date: Date) => monthLabelFormat(date),\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    daySpacing: 0,\n    dayBorderWidth: 1,\n    dayBorderColor: '#000',\n\n    isInteractive: true,\n\n    legends: [] as CalendarLegendProps[],\n    tooltip: CalendarTooltip,\n} as const\n\nexport const calendarDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n} as const\n\nexport const calendarCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n} as const\n\nexport const timeRangeDefaultProps = {\n    ...calendarDefaultProps,\n    dayBorderColor: '#fff',\n    dayRadius: 0,\n    square: true,\n    weekdayLegendOffset: 75,\n} as const\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { isDate, memoize, range } from 'lodash'\nimport { alignBox } from '@nivo/core'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeWeek, timeWeeks, timeMonths, timeYear } from 'd3-time'\nimport { ScaleQuantize } from 'd3-scale'\nimport { BBox, CalendarSvgProps, ColorScale, Datum, Year } from '../types'\n\n/**\n * Compute min/max values.\n */\nexport const computeDomain = (\n    data: CalendarSvgProps['data'],\n    minSpec: NonNullable<CalendarSvgProps['minValue']>,\n    maxSpec: NonNullable<CalendarSvgProps['maxValue']>\n) => {\n    const allValues = data.map(d => d.value)\n    const minValue = minSpec === 'auto' ? Math.min(...allValues) : minSpec\n    const maxValue = maxSpec === 'auto' ? Math.max(...allValues) : maxSpec\n\n    return [minValue, maxValue] as const\n}\n\n/**\n * Compute day cell size according to current context.\n */\nconst computeCellSize = ({\n    width,\n    height,\n    direction,\n    yearRange,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    maxWeeks,\n}: Pick<\n    Required<CalendarSvgProps>,\n    'direction' | 'width' | 'height' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n> & {\n    maxWeeks: number\n    yearRange: number[]\n}) => {\n    let hCellSize\n    let vCellSize\n\n    if (direction === 'horizontal') {\n        hCellSize = (width - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n        vCellSize =\n            (height - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n    } else {\n        hCellSize =\n            (width - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n        vCellSize = (height - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n    }\n\n    return Math.min(hCellSize, vCellSize)\n}\n\n/**\n * Computes month path and bounding box.\n */\nconst monthPathAndBBox = ({\n    date,\n    cellSize,\n    yearIndex,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    direction,\n    originX,\n    originY,\n}: Record<'cellSize' | 'originX' | 'originY' | 'yearIndex', number> &\n    Pick<\n        Required<CalendarSvgProps>,\n        'direction' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n    > & {\n        date: Date\n    }) => {\n    // first day of next month\n    const t1 = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n\n    // ranges\n    const firstWeek = timeWeek.count(timeYear(date), date)\n    const lastWeek = timeWeek.count(timeYear(t1), t1)\n    const firstDay = date.getDay()\n    const lastDay = t1.getDay()\n\n    // offset according to year index and month\n    let xO = originX\n    let yO = originY\n    const yearOffset = yearIndex * (7 * (cellSize + daySpacing) + yearSpacing)\n    const monthOffset = date.getMonth() * monthSpacing\n    if (direction === 'horizontal') {\n        yO += yearOffset\n        xO += monthOffset\n    } else {\n        yO += monthOffset\n        xO += yearOffset\n    }\n\n    let path\n    const bbox = { x: xO, y: yO, width: 0, height: 0 }\n    if (direction === 'horizontal') {\n        path = [\n            `M${xO + (firstWeek + 1) * (cellSize + daySpacing)},${\n                yO + firstDay * (cellSize + daySpacing)\n            }`,\n            `H${xO + firstWeek * (cellSize + daySpacing)}V${yO + 7 * (cellSize + daySpacing)}`,\n            `H${xO + lastWeek * (cellSize + daySpacing)}V${\n                yO + (lastDay + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO + (lastWeek + 1) * (cellSize + daySpacing)}V${yO}`,\n            `H${xO + (firstWeek + 1) * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.x = xO + firstWeek * (cellSize + daySpacing)\n        bbox.width = xO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.x\n        bbox.height = 7 * (cellSize + daySpacing)\n    } else {\n        path = [\n            `M${xO + firstDay * (cellSize + daySpacing)},${\n                yO + (firstWeek + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO}V${yO + (lastWeek + 1) * (cellSize + daySpacing)}`,\n            `H${xO + (lastDay + 1) * (cellSize + daySpacing)}V${\n                yO + lastWeek * (cellSize + daySpacing)\n            }`,\n            `H${xO + 7 * (cellSize + daySpacing)}V${yO + firstWeek * (cellSize + daySpacing)}`,\n            `H${xO + firstDay * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.y = yO + firstWeek * (cellSize + daySpacing)\n        bbox.width = 7 * (cellSize + daySpacing)\n        bbox.height = yO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.y\n    }\n\n    return { path, bbox }\n}\n\n/**\n * Creates a memoized version of monthPathAndBBox function.\n */\nconst memoMonthPathAndBBox = memoize(\n    monthPathAndBBox,\n    ({\n        date,\n        cellSize,\n        yearIndex,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        direction,\n        originX,\n        originY,\n    }) => {\n        return `${date.toString()}.${cellSize}.${yearIndex}.${yearSpacing}.${monthSpacing}.${daySpacing}.${direction}.${originX}.${originY}`\n    }\n)\n\n/**\n * Returns a function to Compute day cell position for horizontal layout.\n */\nconst cellPositionHorizontal = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n            y:\n                originY +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n        }\n    }\n}\n\n/**\n * Returns a function to Compute day cell position for vertical layout.\n */\nconst cellPositionVertical = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n            y:\n                originY +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n        }\n    }\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute base layout, without caring about the current data.\n */\nexport const computeLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'align'\n    | 'direction'\n    | 'from'\n    | 'to'\n    | 'width'\n    | 'height'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n>) => {\n    const fromDate = isDate(from) ? from : new Date(from)\n    const toDate = isDate(to) ? to : new Date(to)\n\n    const yearRange = range(fromDate.getFullYear(), toDate.getFullYear() + 1)\n    const maxWeeks =\n        Math.max(\n            ...yearRange.map(\n                year => timeWeeks(new Date(year, 0, 1), new Date(year + 1, 0, 1)).length\n            )\n        ) + 1\n\n    const cellSize = computeCellSize({\n        width,\n        height,\n        direction,\n        yearRange,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        maxWeeks,\n    })\n\n    const monthsSize = cellSize * maxWeeks + daySpacing * maxWeeks + monthSpacing * 12\n    const yearsSize =\n        (cellSize + daySpacing) * 7 * yearRange.length + yearSpacing * (yearRange.length - 1)\n\n    const calendarWidth = direction === 'horizontal' ? monthsSize : yearsSize\n    const calendarHeight = direction === 'horizontal' ? yearsSize : monthsSize\n    const [originX, originY] = alignBox(\n        {\n            x: 0,\n            y: 0,\n            width: calendarWidth,\n            height: calendarHeight,\n        },\n        {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        },\n        align\n    )\n\n    let cellPosition: ReturnType<typeof cellPositionHorizontal>\n    if (direction === 'horizontal') {\n        cellPosition = cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing)\n    } else {\n        cellPosition = cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing)\n    }\n\n    const years: Array<{\n        year: number\n        bbox: BBox\n    }> = []\n\n    let months: Array<{\n        path: string\n        bbox: {\n            x: number\n            y: number\n            width: number\n            height: number\n        }\n        date: Date\n        year: number\n        month: number\n    }> = []\n\n    let days: Array<Omit<Datum, 'color' | 'data' | 'value'>> = []\n\n    yearRange.forEach((year, i) => {\n        const yearStart = new Date(year, 0, 1)\n        const yearEnd = new Date(year + 1, 0, 1)\n\n        days = days.concat(\n            timeDays(yearStart, yearEnd).map(dayDate => {\n                return {\n                    date: dayDate,\n                    day: dayFormat(dayDate),\n                    size: cellSize,\n                    ...cellPosition(originX, originY, dayDate, i),\n                }\n            })\n        )\n\n        const yearMonths = timeMonths(yearStart, yearEnd).map(monthDate => ({\n            date: monthDate,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth(),\n            ...memoMonthPathAndBBox({\n                originX,\n                originY,\n                date: monthDate,\n                direction,\n                yearIndex: i,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                cellSize,\n            }),\n        }))\n\n        months = months.concat(yearMonths)\n\n        years.push({\n            year,\n            bbox: {\n                x: yearMonths[0].bbox.x,\n                y: yearMonths[0].bbox.y,\n                width: yearMonths[11].bbox.x - yearMonths[0].bbox.x + yearMonths[11].bbox.width,\n                height: yearMonths[11].bbox.y - yearMonths[0].bbox.y + yearMonths[11].bbox.height,\n            },\n        })\n    })\n\n    return { years, months, days, cellSize, calendarWidth, calendarHeight, originX, originY }\n}\n\n/**\n * Bind current data to computed day cells.\n */\nexport const bindDaysData = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> & {\n    colorScale: ScaleQuantize<string> | ColorScale\n    days: Array<Omit<Datum, 'color' | 'data' | 'value'>>\n}) => {\n    return days.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        if (!dayData) {\n            return { ...day, color: emptyColor }\n        }\n\n        return {\n            ...day,\n            color: colorScale(dayData.value),\n            data: dayData,\n            value: dayData.value,\n        }\n    })\n}\n\nexport const computeYearLegendPositions = ({\n    years,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    years: Year[]\n}) => {\n    return years.map(year => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = year.bbox.x - offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = year.bbox.x + year.bbox.width + offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'vertical' && position === 'before') {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y - offset\n        } else {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y + year.bbox.height + offset\n        }\n\n        return {\n            ...year,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n\nexport const computeMonthLegendPositions = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    months: Month[]\n}) => {\n    return months.map(month => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y - offset\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y + month.bbox.height + offset\n        } else if (direction === 'vertical' && position === 'before') {\n            x = month.bbox.x - offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        } else {\n            x = month.bbox.x + month.bbox.width + offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        }\n\n        return {\n            ...month,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n","import { useMemo } from 'react'\nimport { ScaleQuantize, scaleQuantize } from 'd3-scale'\nimport {\n    computeDomain,\n    computeYearLegendPositions,\n    computeMonthLegendPositions,\n    bindDaysData,\n    computeLayout,\n} from './compute/calendar'\nimport { BBox, CalendarSvgProps, ColorScale, Year } from './types'\n\nexport const useCalendarLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'width'\n    | 'height'\n    | 'from'\n    | 'to'\n    | 'direction'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n    | 'align'\n>) =>\n    useMemo(\n        () =>\n            computeLayout({\n                width,\n                height,\n                from,\n                to,\n                direction,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                align,\n            }),\n        [width, height, from, to, direction, yearSpacing, monthSpacing, daySpacing, align]\n    )\n\nexport const useColorScale = ({\n    data,\n    minValue,\n    maxValue,\n    colors,\n    colorScale,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'minValue' | 'maxValue' | 'colors'> &\n    Pick<CalendarSvgProps, 'colorScale'>) =>\n    useMemo(() => {\n        if (colorScale) return colorScale\n        const domain = computeDomain(data, minValue, maxValue)\n        const defaultColorScale = scaleQuantize<string>().domain(domain).range(colors)\n        return defaultColorScale\n    }, [data, minValue, maxValue, colors, colorScale])\n\nexport const useYearLegends = ({\n    years,\n    direction,\n    yearLegendPosition,\n    yearLegendOffset,\n}: {\n    years: Year[]\n    direction: 'horizontal' | 'vertical'\n    yearLegendPosition: 'before' | 'after'\n    yearLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeYearLegendPositions({\n                years,\n                direction,\n                position: yearLegendPosition,\n                offset: yearLegendOffset,\n            }),\n        [years, direction, yearLegendPosition, yearLegendOffset]\n    )\n\nexport const useMonthLegends = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    monthLegendPosition,\n    monthLegendOffset,\n}: {\n    months: Month[]\n    direction: 'horizontal' | 'vertical'\n    monthLegendPosition: 'before' | 'after'\n    monthLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeMonthLegendPositions({\n                months,\n                direction,\n                position: monthLegendPosition,\n                offset: monthLegendOffset,\n            }),\n        [months, direction, monthLegendPosition, monthLegendOffset]\n    )\n\nexport const useDays = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> &\n    Pick<Parameters<typeof bindDaysData>[0], 'days'> & {\n        colorScale: ScaleQuantize<string> | ColorScale\n    }) =>\n    useMemo(\n        () =>\n            bindDaysData({\n                days,\n                data,\n                colorScale,\n                emptyColor,\n            }),\n        [days, data, colorScale, emptyColor]\n    )\n","import { CalendarSvgProps } from './types'\nimport { Container, SvgWrapper, useTheme, useDimensions, useValueFormatter } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CalendarYearLegends } from './CalendarYearLegends'\nimport { CalendarMonthPath } from './CalendarMonthPath'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { CalendarDay } from './CalendarDay'\nimport { calendarDefaultProps } from './props'\nimport { useMonthLegends, useYearLegends, useCalendarLayout, useDays, useColorScale } from './hooks'\n\nconst InnerCalendar = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    align = calendarDefaultProps.align,\n    colors = calendarDefaultProps.colors,\n    colorScale,\n    data,\n    direction = calendarDefaultProps.direction,\n    emptyColor = calendarDefaultProps.emptyColor,\n    from,\n    to,\n    minValue = calendarDefaultProps.minValue,\n    maxValue = calendarDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    yearLegend = calendarDefaultProps.yearLegend,\n    yearLegendOffset = calendarDefaultProps.yearLegendOffset,\n    yearLegendPosition = calendarDefaultProps.yearLegendPosition,\n    yearSpacing = calendarDefaultProps.yearSpacing,\n\n    monthBorderColor = calendarDefaultProps.monthBorderColor,\n    monthBorderWidth = calendarDefaultProps.monthBorderWidth,\n    monthLegend = calendarDefaultProps.monthLegend,\n    monthLegendOffset = calendarDefaultProps.monthLegendOffset,\n    monthLegendPosition = calendarDefaultProps.monthLegendPosition,\n    monthSpacing = calendarDefaultProps.monthSpacing,\n\n    dayBorderColor = calendarDefaultProps.dayBorderColor,\n    dayBorderWidth = calendarDefaultProps.dayBorderWidth,\n    daySpacing = calendarDefaultProps.daySpacing,\n\n    isInteractive = calendarDefaultProps.isInteractive,\n    tooltip = calendarDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = calendarDefaultProps.legends,\n    role = calendarDefaultProps.role,\n}: CalendarSvgProps) => {\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const { months, years, ...rest } = useCalendarLayout({\n        width: innerWidth,\n        height: innerHeight,\n        from,\n        to,\n        direction,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        align,\n    })\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n    const yearLegends = useYearLegends({ years, direction, yearLegendPosition, yearLegendOffset })\n    const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n    const formatLegend = useValueFormatter(legendFormat)\n    const formatValue = useValueFormatter(valueFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {days.map(d => (\n                <CalendarDay\n                    key={d.date.toString()}\n                    data={d}\n                    x={d.x}\n                    y={d.y}\n                    size={d.size}\n                    color={d.color}\n                    borderWidth={dayBorderWidth}\n                    borderColor={dayBorderColor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onMouseMove={onMouseMove}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    formatValue={formatValue}\n                />\n            ))}\n            {months.map(m => (\n                <CalendarMonthPath\n                    key={m.date.toString()}\n                    path={m.path}\n                    borderWidth={monthBorderWidth}\n                    borderColor={monthBorderColor}\n                />\n            ))}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n            <CalendarYearLegends years={yearLegends} legend={yearLegend} theme={theme} />\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Calendar = ({\n    isInteractive = calendarDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendar isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { timeWeek, timeDays, timeDay } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { DateOrString } from '../types'\nimport { isDate } from 'lodash'\n\n// Interfaces\ninterface ComputeBaseProps {\n    direction: 'horizontal' | 'vertical'\n}\n\ninterface ComputeBaseSpaceProps {\n    daySpacing: number\n    offset: number\n}\n\ninterface ComputeBaseDimensionProps {\n    cellWidth: number\n    cellHeight: number\n}\n\ninterface ComputeCellSize extends ComputeBaseProps, ComputeBaseSpaceProps {\n    totalDays: number\n    width: number\n    height: number\n    square: boolean\n}\n\ninterface ComputeCellPositions\n    extends ComputeBaseProps,\n        ComputeBaseSpaceProps,\n        ComputeBaseDimensionProps {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n    colorScale: (value: number) => string\n    emptyColor: string\n}\n\ninterface ComputeWeekdays\n    extends Omit<ComputeBaseProps, 'daysInRange'>,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    ticks?: number[]\n    arrayOfWeekdays?: string[]\n}\n\ninterface Day {\n    coordinates: {\n        x: number\n        y: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n    date: Date\n    color: string\n    day: string\n    value?: number\n}\n\ninterface Month {\n    date: Date\n    bbox: {\n        x: number\n        y: number\n        width: number\n        height: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n}\n\ninterface ComputeMonths\n    extends ComputeBaseProps,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    days: Day[]\n}\n\ninterface ComputeTotalDays {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute day cell size according to\n * current context.\n */\nexport const computeCellSize = ({\n    direction,\n    daySpacing,\n    offset,\n    square,\n    totalDays,\n    width,\n    height,\n}: ComputeCellSize) => {\n    const daysInRange = 7\n    let rows\n    let columns\n    let widthRest = width\n    let heightRest = height\n    if (direction === 'horizontal') {\n        widthRest -= offset\n        rows = daysInRange\n        columns = Math.ceil(totalDays / daysInRange)\n    } else {\n        heightRest -= offset\n        columns = daysInRange\n        rows = Math.ceil(totalDays / daysInRange)\n    }\n    // + 1 since we have to apply spacing to the rigth and left\n    const cellHeight = (heightRest - daySpacing * (rows + 1)) / rows\n    const cellWidth = (widthRest - daySpacing * (columns + 1)) / columns\n    // do we want square?\n    const size = Math.min(cellHeight, cellWidth)\n    return {\n        columns,\n        rows,\n        cellHeight: square ? size : cellHeight,\n        cellWidth: square ? size : cellWidth,\n    }\n}\n\nfunction computeGrid({\n    startDate,\n    date,\n    direction,\n}: {\n    startDate: Date\n    date: Date\n    direction: 'horizontal' | 'vertical'\n}) {\n    const firstWeek = timeWeek.count(startDate, date)\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    let currentColumn = 0\n    let currentRow = 0\n    if (direction === 'horizontal') {\n        currentColumn = firstWeek\n        currentRow = date.getDay()\n    } else {\n        currentColumn = date.getDay()\n        currentRow = firstWeek\n    }\n\n    return { currentColumn, year, currentRow, firstWeek, month, date }\n}\n\nexport const computeCellPositions = ({\n    direction,\n    colorScale,\n    emptyColor,\n    from,\n    to,\n    data,\n    cellWidth,\n    cellHeight,\n    daySpacing,\n    offset,\n}: ComputeCellPositions) => {\n    let x = daySpacing\n    let y = daySpacing\n\n    if (direction === 'horizontal') {\n        x += offset\n    } else {\n        y += offset\n    }\n\n    // we need to determine whether we need to add days to move to correct position\n    const start = from ? from : data[0].date\n    const end = to ? to : data[data.length - 1].date\n    const startDate = isDate(start) ? start : new Date(start)\n    const endDate = isDate(end) ? end : new Date(end)\n    const dateRange = timeDays(startDate, endDate).map(dayDate => {\n        return {\n            date: dayDate,\n            day: dayFormat(dayDate),\n        }\n    })\n\n    const dataWithCellPosition = dateRange.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        const { currentColumn, currentRow, firstWeek, year, month, date } = computeGrid({\n            startDate,\n            date: day.date,\n            direction,\n        })\n\n        const coordinates = {\n            x: x + daySpacing * currentColumn + cellWidth * currentColumn,\n            y: y + daySpacing * currentRow + cellHeight * currentRow,\n        }\n\n        if (!dayData) {\n            return {\n                ...day,\n                coordinates,\n                firstWeek,\n                month,\n                year,\n                date,\n                color: emptyColor,\n                width: cellWidth,\n                height: cellHeight,\n            }\n        }\n\n        return {\n            ...dayData,\n            coordinates,\n            firstWeek,\n            month,\n            year,\n            date,\n            color: colorScale(dayData.value),\n            width: cellWidth,\n            height: cellHeight,\n        }\n    })\n\n    return dataWithCellPosition\n}\n\nexport const computeWeekdays = ({\n    cellHeight,\n    cellWidth,\n    direction,\n    daySpacing,\n    ticks = [1, 3, 5],\n    arrayOfWeekdays = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ],\n}: ComputeWeekdays) => {\n    const sizes = {\n        width: cellWidth + daySpacing,\n        height: cellHeight + daySpacing,\n    }\n    return ticks.map(day => ({\n        value: arrayOfWeekdays[day],\n        rotation: direction === 'horizontal' ? 0 : -90,\n        y: direction === 'horizontal' ? sizes.height * (day + 1) - sizes.height / 3 : 0,\n        x: direction === 'horizontal' ? 0 : sizes.width * (day + 1) - sizes.width / 3,\n    }))\n}\n\nexport const computeMonthLegends = ({\n    direction,\n    daySpacing,\n    days,\n    cellHeight,\n    cellWidth,\n}: ComputeMonths) => {\n    const accumulator: {\n        months: { [key: string]: Month }\n        weeks: Day[]\n    } = {\n        months: {},\n        weeks: [],\n    }\n\n    return days.reduce((acc, day) => {\n        if (acc.weeks.length === day.firstWeek) {\n            acc.weeks.push(day)\n\n            const key = `${day.year}-${day.month}`\n\n            if (!Object.keys(acc.months).includes(key)) {\n                const bbox = { x: 0, y: 0, width: 0, height: 0 }\n\n                if (direction === 'horizontal') {\n                    bbox.x = day.coordinates.x - daySpacing\n                    bbox.height = cellHeight + daySpacing\n                    bbox.width = cellWidth + daySpacing * 2\n                } else {\n                    bbox.y = day.coordinates.y - daySpacing\n                    bbox.height = cellHeight + daySpacing * 2\n                    bbox.width = cellWidth + daySpacing * 2\n                }\n\n                acc.months[key] = {\n                    date: day.date,\n                    bbox,\n                    firstWeek: day.firstWeek,\n                    month: 0,\n                    year: 0,\n                }\n            } else {\n                // enhance width/height\n                if (direction === 'horizontal') {\n                    acc.months[key].bbox.width =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellWidth + daySpacing)\n                } else {\n                    acc.months[key].bbox.height =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellHeight + daySpacing)\n                }\n            }\n        }\n        return acc\n    }, accumulator)\n}\n\nexport const computeTotalDays = ({ from, to, data }: ComputeTotalDays) => {\n    let startDate\n    let endDate\n    if (from) {\n        startDate = isDate(from) ? from : new Date(from)\n    } else {\n        startDate = data[0].date\n    }\n\n    if (from && to) {\n        endDate = isDate(to) ? to : new Date(to)\n    } else {\n        endDate = data[data.length - 1].date\n    }\n\n    return startDate.getDay() + timeDay.count(startDate, endDate)\n}\n","import { createElement, memo, useCallback } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TimeRangeDayProps } from './types'\n\nexport const TimeRangeDay = memo(\n    ({\n        data,\n        x,\n        ry = 5,\n        rx = 5,\n        y,\n        width,\n        height,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: TimeRangeDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseMove?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(event => onClick?.(data, event), [data, onClick])\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                rx={rx}\n                ry={ry}\n                width={width}\n                height={height}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { useMemo } from 'react'\nimport { Container, SvgWrapper, useValueFormatter, useTheme, useDimensions } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport {\n    computeWeekdays,\n    computeCellSize,\n    computeCellPositions,\n    computeMonthLegends,\n    computeTotalDays,\n} from './compute/timeRange'\nimport { useMonthLegends, useColorScale } from './hooks'\nimport { TimeRangeDay } from './TimeRangeDay'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { TimeRangeSvgProps } from './types'\nimport { timeRangeDefaultProps } from './props'\n\nconst InnerTimeRange = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    square = timeRangeDefaultProps.square,\n    colors = timeRangeDefaultProps.colors,\n    colorScale,\n    emptyColor = timeRangeDefaultProps.emptyColor,\n    from,\n    to,\n    data: _data,\n    direction = timeRangeDefaultProps.direction,\n    minValue = timeRangeDefaultProps.minValue,\n    maxValue = timeRangeDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    monthLegend = timeRangeDefaultProps.monthLegend,\n    monthLegendOffset = timeRangeDefaultProps.monthLegendOffset,\n    monthLegendPosition = timeRangeDefaultProps.monthLegendPosition,\n\n    weekdayLegendOffset = timeRangeDefaultProps.weekdayLegendOffset,\n    weekdayTicks,\n\n    dayBorderColor = timeRangeDefaultProps.dayBorderColor,\n    dayBorderWidth = timeRangeDefaultProps.dayBorderWidth,\n    daySpacing = timeRangeDefaultProps.daySpacing,\n    dayRadius = timeRangeDefaultProps.dayRadius,\n\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    tooltip = timeRangeDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = timeRangeDefaultProps.legends,\n    role = timeRangeDefaultProps.role,\n}: TimeRangeSvgProps) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const data = useMemo(\n        () =>\n            _data\n                .map(data => ({ ...data, date: new Date(`${data.day}T00:00:00`) }))\n                .sort((left, right) => left.day.localeCompare(right.day)),\n        [_data]\n    )\n\n    const theme = useTheme()\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n\n    const totalDays = computeTotalDays({\n        from,\n        to,\n        data,\n    })\n\n    const { cellHeight, cellWidth } = computeCellSize({\n        square,\n        offset: weekdayLegendOffset,\n        totalDays: totalDays,\n        width: innerWidth,\n        height: innerHeight,\n        daySpacing,\n        direction,\n    })\n\n    const days = computeCellPositions({\n        offset: weekdayLegendOffset,\n        colorScale: colorScaleFn,\n        emptyColor,\n        cellHeight,\n        cellWidth,\n        from,\n        to,\n        data,\n        direction,\n        daySpacing,\n    })\n\n    // map the days and reduce the month\n    const months = Object.values(\n        computeMonthLegends({\n            daySpacing,\n            direction,\n            cellHeight,\n            cellWidth,\n            days,\n        }).months\n    )\n\n    const weekdayLegends = computeWeekdays({\n        direction,\n        cellHeight,\n        cellWidth,\n        daySpacing,\n        ticks: weekdayTicks,\n    })\n\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n\n    const formatValue = useValueFormatter(valueFormat)\n    const formatLegend = useValueFormatter(legendFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {weekdayLegends.map(legend => (\n                <text\n                    key={legend.value}\n                    transform={`translate(${legend.x},${legend.y}) rotate(${legend.rotation})`}\n                    textAnchor=\"left\"\n                    style={theme.labels.text}\n                >\n                    {legend.value}\n                </text>\n            ))}\n            {days.map(d => {\n                return (\n                    <TimeRangeDay\n                        key={d.date.toString()}\n                        data={d}\n                        x={d.coordinates.x}\n                        rx={dayRadius}\n                        y={d.coordinates.y}\n                        ry={dayRadius}\n                        width={cellWidth}\n                        height={cellHeight}\n                        color={d.color}\n                        borderWidth={dayBorderWidth}\n                        borderColor={dayBorderColor}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onMouseMove={onMouseMove}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onClick={onClick}\n                        formatValue={formatValue}\n                    />\n                )\n            })}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const TimeRange = ({\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: TimeRangeSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerTimeRange isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { TimeRange } from './TimeRange'\nimport { TimeRangeSvgProps } from './types'\n\nexport const ResponsiveTimeRange = (props: Omit<TimeRangeSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TimeRange width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { Calendar } from './Calendar'\nimport { CalendarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveCalendar = (props: Omit<CalendarSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Calendar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { memo, useRef, useState, useEffect, useCallback } from 'react'\nimport * as React from 'react'\nimport {\n    Box,\n    Container,\n    isCursorInRect,\n    getRelativeCursor,\n    degreesToRadians,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { calendarCanvasDefaultProps } from './props'\nimport { useCalendarLayout, useColorScale, useMonthLegends, useYearLegends, useDays } from './hooks'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CalendarCanvasProps } from './types'\n\nconst findDayUnderCursor = (\n    event: React.MouseEvent,\n    canvasEl: HTMLCanvasElement,\n    days: ReturnType<typeof useDays>,\n    size: number,\n    dayBorderWidth: number,\n    margin: Required<Box>\n) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    return days.find(day => {\n        return (\n            'value' in day &&\n            isCursorInRect(\n                day.x + margin.left - dayBorderWidth / 2,\n                day.y + margin.top - dayBorderWidth / 2,\n                size + dayBorderWidth,\n                size + dayBorderWidth,\n                x,\n                y\n            )\n        )\n    })\n}\n\nconst InnerCalendarCanvas = memo(\n    ({\n        margin: partialMargin,\n        width,\n        height,\n        pixelRatio = calendarCanvasDefaultProps.pixelRatio,\n\n        align = calendarCanvasDefaultProps.align,\n        colors = calendarCanvasDefaultProps.colors,\n        colorScale,\n        data,\n        direction = calendarCanvasDefaultProps.direction,\n        emptyColor = calendarCanvasDefaultProps.emptyColor,\n        from,\n        to,\n        minValue = calendarCanvasDefaultProps.minValue,\n        maxValue = calendarCanvasDefaultProps.maxValue,\n        valueFormat,\n        legendFormat,\n\n        yearLegend = calendarCanvasDefaultProps.yearLegend,\n        yearLegendOffset = calendarCanvasDefaultProps.yearLegendOffset,\n        yearLegendPosition = calendarCanvasDefaultProps.yearLegendPosition,\n        yearSpacing = calendarCanvasDefaultProps.yearSpacing,\n\n        monthLegend = calendarCanvasDefaultProps.monthLegend,\n        monthLegendOffset = calendarCanvasDefaultProps.monthLegendOffset,\n        monthLegendPosition = calendarCanvasDefaultProps.monthLegendPosition,\n        monthSpacing = calendarCanvasDefaultProps.monthSpacing,\n\n        dayBorderColor = calendarCanvasDefaultProps.dayBorderColor,\n        dayBorderWidth = calendarCanvasDefaultProps.dayBorderWidth,\n        daySpacing = calendarCanvasDefaultProps.daySpacing,\n\n        isInteractive = calendarCanvasDefaultProps.isInteractive,\n        tooltip = calendarCanvasDefaultProps.tooltip,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        onMouseMove,\n\n        legends = calendarCanvasDefaultProps.legends,\n    }: CalendarCanvasProps) => {\n        const canvasEl = useRef<HTMLCanvasElement | null>(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const { months, years, ...rest } = useCalendarLayout({\n            width: innerWidth,\n            height: innerHeight,\n            from,\n            to,\n            direction,\n            yearSpacing,\n            monthSpacing,\n            daySpacing,\n            align,\n        })\n        const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n        const monthLegends = useMonthLegends({\n            months,\n            direction,\n            monthLegendPosition,\n            monthLegendOffset,\n        })\n        const yearLegends = useYearLegends({\n            years,\n            direction,\n            yearLegendPosition,\n            yearLegendOffset,\n        })\n        const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n        const [currentDay, setCurrentDay] = useState<ReturnType<typeof useDays>[number] | null>(\n            null\n        )\n        const theme = useTheme()\n        const formatValue = useValueFormatter(valueFormat)\n        const formatLegend = useValueFormatter(legendFormat)\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        useEffect(() => {\n            if (!canvasEl.current) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            if (!ctx) return\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            days.forEach(day => {\n                ctx.fillStyle = day.color\n                if (dayBorderWidth > 0) {\n                    ctx.strokeStyle = dayBorderColor\n                    ctx.lineWidth = dayBorderWidth\n                }\n\n                ctx.beginPath()\n                ctx.rect(day.x, day.y, day.size, day.size)\n                ctx.fill()\n\n                if (dayBorderWidth > 0) {\n                    ctx.stroke()\n                }\n            })\n\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.fillStyle = theme.labels.text.fill ?? ''\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            monthLegends.forEach(month => {\n                ctx.save()\n                ctx.translate(month.x, month.y)\n                ctx.rotate(degreesToRadians(month.rotation))\n                ctx.fillText(String(monthLegend(month.year, month.month, month.date)), 0, 0)\n                ctx.restore()\n            })\n\n            yearLegends.forEach(year => {\n                ctx.save()\n                ctx.translate(year.x, year.y)\n                ctx.rotate(degreesToRadians(year.rotation))\n                ctx.fillText(String(yearLegend(year.year)), 0, 0)\n                ctx.restore()\n            })\n\n            legends.forEach(legend => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                renderLegendToCanvas(ctx, {\n                    ...legend,\n                    data: legendData,\n                    containerWidth: innerWidth,\n                    containerHeight: innerHeight,\n                    theme,\n                })\n            })\n        }, [\n            canvasEl,\n            innerHeight,\n            innerWidth,\n            outerWidth,\n            outerHeight,\n            pixelRatio,\n            margin,\n            days,\n            dayBorderColor,\n            dayBorderWidth,\n            colorScale,\n            yearLegend,\n            yearLegends,\n            monthLegend,\n            monthLegends,\n            legends,\n            theme,\n            formatLegend,\n            colorScaleFn,\n        ])\n\n        const handleMouseHover = useCallback(\n            event => {\n                if (!canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    dayBorderWidth,\n                    margin\n                )\n\n                if (data) {\n                    setCurrentDay(data)\n\n                    if (!('value' in data)) {\n                        return\n                    }\n\n                    const formatedData = {\n                        ...data,\n                        value: formatValue(data.value),\n                        data: { ...data.data },\n                    }\n                    showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                    !currentDay && onMouseEnter?.(data, event)\n                    onMouseMove?.(data, event)\n                    currentDay && onMouseLeave?.(data, event)\n                } else {\n                    hideTooltip()\n                    data && onMouseLeave?.(data, event)\n                }\n            },\n            [\n                canvasEl,\n                currentDay,\n                margin,\n                days,\n                setCurrentDay,\n                formatValue,\n                dayBorderWidth,\n                showTooltipFromEvent,\n                hideTooltip,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                tooltip,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentDay(null)\n            hideTooltip()\n        }, [setCurrentDay, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onClick || !canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    daySpacing,\n                    margin\n                )\n\n                data && onClick(data, event)\n            },\n            [canvasEl, daySpacing, margin, days, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nexport const CalendarCanvas = ({\n    isInteractive = calendarCanvasDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarCanvasProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendarCanvas isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CalendarCanvas } from './CalendarCanvas'\nimport { CalendarCanvasProps } from './types'\n\nexport const ResponsiveCalendarCanvas = (props: Omit<CalendarCanvasProps, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <CalendarCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["defineProperty","objectWithoutPropertiesLoose","CalendarYearLegends","memo","years","legend","theme","_jsx","map","year","x","y","rotation","labels","text","CalendarMonthPath","path","borderWidth","borderColor","fill","strokeWidth","stroke","pointerEvents","CalendarMonthLegends","months","month","date","toString","CalendarDay","data","size","color","isInteractive","tooltip","onMouseEnter","onMouseMove","onMouseLeave","onClick","formatValue","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","formatedData","value","React","handleMouseMove","handleMouseLeave","handleClick","undefined","CalendarTooltip","day","isNaN","Number","monthLabelFormat","timeFormat","commonDefaultProps","colors","align","direction","emptyColor","minValue","maxValue","yearSpacing","yearLegend","yearLegendPosition","yearLegendOffset","monthBorderWidth","monthBorderColor","monthSpacing","monthLegend","_year","_month","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","legends","calendarDefaultProps","role","calendarCanvasDefaultProps","pixelRatio","window","devicePixelRatio","timeRangeDefaultProps","dayRadius","square","weekdayLegendOffset","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","computeDomain","minSpec","maxSpec","allValues","d","Math","min","max","computeCellSize","width","height","yearRange","maxWeeks","hCellSize","vCellSize","length","monthPathAndBBox","cellSize","yearIndex","originX","originY","t1","Date","getFullYear","getMonth","firstWeek","timeWeek","count","timeYear","lastWeek","firstDay","getDay","lastDay","xO","yO","yearOffset","monthOffset","bbox","join","memoMonthPathAndBBox","cellPositionHorizontal","weekOfYear","cellPositionVertical","dayFormat","computeLayout","from","to","fromDate","toDate","timeWeeks","monthsSize","yearsSize","calendarWidth","calendarHeight","alignBox","cellPosition","days","forEach","i","yearStart","yearEnd","concat","timeDays","dayDate","yearMonths","timeMonths","monthDate","push","bindDaysData","colorScale","dayData","find","item","computeYearLegendPositions","position","offset","computeMonthLegendPositions","useCalendarLayout","useMemo","useColorScale","domain","defaultColorScale","scaleQuantize","range","useYearLegends","useMonthLegends","useDays","InnerCalendar","partialMargin","margin","valueFormat","legendFormat","useTheme","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","rest","colorScaleFn","monthLegends","yearLegends","formatLegend","useValueFormatter","_jsxs","m","legendData","ticks","itemCount","id","label","Calendar","renderWrapper","props","totalDays","daysInRange","rows","columns","widthRest","heightRest","ceil","cellHeight","cellWidth","computeGrid","startDate","currentColumn","currentRow","computeCellPositions","start","end","endDate","dateRange","dataWithCellPosition","coordinates","computeWeekdays","arrayOfWeekdays","sizes","computeMonthLegends","accumulator","weeks","reduce","acc","key","Object","keys","includes","computeTotalDays","timeDay","TimeRangeDay","ry","rx","createElement","InnerTimeRange","_data","weekdayTicks","sort","left","right","localeCompare","values","weekdayLegends","TimeRange","ResponsiveTimeRange","ResponsiveCalendar","findDayUnderCursor","canvasEl","getRelativeCursor","isCursorInRect","top","InnerCalendarCanvas","useRef","useState","currentDay","setCurrentDay","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","lineWidth","beginPath","rect","textAlign","textBaseline","font","fontSize","fontFamily","save","rotate","degreesToRadians","fillText","String","restore","renderLegendToCanvas","containerWidth","containerHeight","handleMouseHover","CalendarCanvas","ResponsiveCalendarCanvas"],"mappings":"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"}