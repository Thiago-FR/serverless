{"version":3,"file":"nivo-calendar.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/CalendarYearLegends.tsx","../src/CalendarMonthPath.tsx","../src/CalendarMonthLegends.tsx","../src/CalendarDay.tsx","../src/CalendarTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute/calendar.ts","../src/hooks.ts","../src/Calendar.tsx","../src/compute/timeRange.ts","../src/TimeRangeDay.tsx","../src/TimeRange.tsx","../src/ResponsiveTimeRange.tsx","../src/ResponsiveCalendar.tsx","../src/CalendarCanvas.tsx","../src/ResponsiveCalendarCanvas.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { CalendarYearLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarYearLegends = memo(({ years, legend, theme }: CalendarYearLegendsProps) => {\n    return (\n        <>\n            {years.map(year => {\n                return (\n                    <text\n                        key={year.year}\n                        transform={`translate(${year.x},${year.y}) rotate(${year.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(year.year)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarMonthPathProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthPath = memo(\n    ({ path, borderWidth, borderColor }: CalendarMonthPathProps) => {\n        return (\n            <path\n                d={path}\n                style={{\n                    fill: 'none',\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                    pointerEvents: 'none',\n                }}\n            />\n        )\n    }\n)\n","import { CalendarMonthLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthLegends = memo(({ months, legend, theme }: CalendarMonthLegendsProps) => {\n    return (\n        <>\n            {months.map(month => {\n                return (\n                    <text\n                        key={`${month.date.toString()}.legend`}\n                        transform={`translate(${month.x},${month.y}) rotate(${month.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(month.year, month.month, month.date)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarDayProps } from './types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { memo, useCallback } from 'react'\nimport * as React from 'react'\n\nexport const CalendarDay = memo(\n    ({\n        data,\n        x,\n        y,\n        size,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: CalendarDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseMove && onMouseMove(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => onClick?.(data, event),\n            [data, onClick]\n        )\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                width={size}\n                height={size}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { CalendarTooltipProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarTooltip = memo(({ value, day, color }: CalendarTooltipProps) => {\n    if (value === undefined || isNaN(Number(value))) return null\n    return <BasicTooltip id={day} value={value} color={color} enableChip={true} />\n})\n","import { timeFormat } from 'd3-time-format'\nimport { CalendarLegendProps } from './types'\nimport { CalendarTooltip } from './CalendarTooltip'\n\nconst monthLabelFormat = timeFormat('%b')\n\nconst commonDefaultProps = {\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'] as string[],\n\n    align: 'center',\n    direction: 'horizontal',\n    emptyColor: '#fff',\n\n    minValue: 0,\n    maxValue: 'auto',\n\n    yearSpacing: 30,\n    yearLegend: (year: number) => year,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthBorderWidth: 2,\n    monthBorderColor: '#000',\n    monthSpacing: 0,\n    monthLegend: (_year: number, _month: number, date: Date) => monthLabelFormat(date),\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    daySpacing: 0,\n    dayBorderWidth: 1,\n    dayBorderColor: '#000',\n\n    isInteractive: true,\n\n    legends: [] as CalendarLegendProps[],\n    tooltip: CalendarTooltip,\n} as const\n\nexport const calendarDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n} as const\n\nexport const calendarCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n} as const\n\nexport const timeRangeDefaultProps = {\n    ...calendarDefaultProps,\n    dayBorderColor: '#fff',\n    dayRadius: 0,\n    square: true,\n    weekdayLegendOffset: 75,\n} as const\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { isDate, memoize, range } from 'lodash'\nimport { alignBox } from '@nivo/core'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeWeek, timeWeeks, timeMonths, timeYear } from 'd3-time'\nimport { ScaleQuantize } from 'd3-scale'\nimport { BBox, CalendarSvgProps, ColorScale, Datum, Year } from '../types'\n\n/**\n * Compute min/max values.\n */\nexport const computeDomain = (\n    data: CalendarSvgProps['data'],\n    minSpec: NonNullable<CalendarSvgProps['minValue']>,\n    maxSpec: NonNullable<CalendarSvgProps['maxValue']>\n) => {\n    const allValues = data.map(d => d.value)\n    const minValue = minSpec === 'auto' ? Math.min(...allValues) : minSpec\n    const maxValue = maxSpec === 'auto' ? Math.max(...allValues) : maxSpec\n\n    return [minValue, maxValue] as const\n}\n\n/**\n * Compute day cell size according to current context.\n */\nconst computeCellSize = ({\n    width,\n    height,\n    direction,\n    yearRange,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    maxWeeks,\n}: Pick<\n    Required<CalendarSvgProps>,\n    'direction' | 'width' | 'height' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n> & {\n    maxWeeks: number\n    yearRange: number[]\n}) => {\n    let hCellSize\n    let vCellSize\n\n    if (direction === 'horizontal') {\n        hCellSize = (width - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n        vCellSize =\n            (height - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n    } else {\n        hCellSize =\n            (width - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n        vCellSize = (height - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n    }\n\n    return Math.min(hCellSize, vCellSize)\n}\n\n/**\n * Computes month path and bounding box.\n */\nconst monthPathAndBBox = ({\n    date,\n    cellSize,\n    yearIndex,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    direction,\n    originX,\n    originY,\n}: Record<'cellSize' | 'originX' | 'originY' | 'yearIndex', number> &\n    Pick<\n        Required<CalendarSvgProps>,\n        'direction' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n    > & {\n        date: Date\n    }) => {\n    // first day of next month\n    const t1 = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n\n    // ranges\n    const firstWeek = timeWeek.count(timeYear(date), date)\n    const lastWeek = timeWeek.count(timeYear(t1), t1)\n    const firstDay = date.getDay()\n    const lastDay = t1.getDay()\n\n    // offset according to year index and month\n    let xO = originX\n    let yO = originY\n    const yearOffset = yearIndex * (7 * (cellSize + daySpacing) + yearSpacing)\n    const monthOffset = date.getMonth() * monthSpacing\n    if (direction === 'horizontal') {\n        yO += yearOffset\n        xO += monthOffset\n    } else {\n        yO += monthOffset\n        xO += yearOffset\n    }\n\n    let path\n    const bbox = { x: xO, y: yO, width: 0, height: 0 }\n    if (direction === 'horizontal') {\n        path = [\n            `M${xO + (firstWeek + 1) * (cellSize + daySpacing)},${\n                yO + firstDay * (cellSize + daySpacing)\n            }`,\n            `H${xO + firstWeek * (cellSize + daySpacing)}V${yO + 7 * (cellSize + daySpacing)}`,\n            `H${xO + lastWeek * (cellSize + daySpacing)}V${\n                yO + (lastDay + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO + (lastWeek + 1) * (cellSize + daySpacing)}V${yO}`,\n            `H${xO + (firstWeek + 1) * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.x = xO + firstWeek * (cellSize + daySpacing)\n        bbox.width = xO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.x\n        bbox.height = 7 * (cellSize + daySpacing)\n    } else {\n        path = [\n            `M${xO + firstDay * (cellSize + daySpacing)},${\n                yO + (firstWeek + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO}V${yO + (lastWeek + 1) * (cellSize + daySpacing)}`,\n            `H${xO + (lastDay + 1) * (cellSize + daySpacing)}V${\n                yO + lastWeek * (cellSize + daySpacing)\n            }`,\n            `H${xO + 7 * (cellSize + daySpacing)}V${yO + firstWeek * (cellSize + daySpacing)}`,\n            `H${xO + firstDay * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.y = yO + firstWeek * (cellSize + daySpacing)\n        bbox.width = 7 * (cellSize + daySpacing)\n        bbox.height = yO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.y\n    }\n\n    return { path, bbox }\n}\n\n/**\n * Creates a memoized version of monthPathAndBBox function.\n */\nconst memoMonthPathAndBBox = memoize(\n    monthPathAndBBox,\n    ({\n        date,\n        cellSize,\n        yearIndex,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        direction,\n        originX,\n        originY,\n    }) => {\n        return `${date.toString()}.${cellSize}.${yearIndex}.${yearSpacing}.${monthSpacing}.${daySpacing}.${direction}.${originX}.${originY}`\n    }\n)\n\n/**\n * Returns a function to Compute day cell position for horizontal layout.\n */\nconst cellPositionHorizontal = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n            y:\n                originY +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n        }\n    }\n}\n\n/**\n * Returns a function to Compute day cell position for vertical layout.\n */\nconst cellPositionVertical = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n            y:\n                originY +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n        }\n    }\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute base layout, without caring about the current data.\n */\nexport const computeLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'align'\n    | 'direction'\n    | 'from'\n    | 'to'\n    | 'width'\n    | 'height'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n>) => {\n    const fromDate = isDate(from) ? from : new Date(from)\n    const toDate = isDate(to) ? to : new Date(to)\n\n    const yearRange = range(fromDate.getFullYear(), toDate.getFullYear() + 1)\n    const maxWeeks =\n        Math.max(\n            ...yearRange.map(\n                year => timeWeeks(new Date(year, 0, 1), new Date(year + 1, 0, 1)).length\n            )\n        ) + 1\n\n    const cellSize = computeCellSize({\n        width,\n        height,\n        direction,\n        yearRange,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        maxWeeks,\n    })\n\n    const monthsSize = cellSize * maxWeeks + daySpacing * maxWeeks + monthSpacing * 12\n    const yearsSize =\n        (cellSize + daySpacing) * 7 * yearRange.length + yearSpacing * (yearRange.length - 1)\n\n    const calendarWidth = direction === 'horizontal' ? monthsSize : yearsSize\n    const calendarHeight = direction === 'horizontal' ? yearsSize : monthsSize\n    const [originX, originY] = alignBox(\n        {\n            x: 0,\n            y: 0,\n            width: calendarWidth,\n            height: calendarHeight,\n        },\n        {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        },\n        align\n    )\n\n    let cellPosition: ReturnType<typeof cellPositionHorizontal>\n    if (direction === 'horizontal') {\n        cellPosition = cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing)\n    } else {\n        cellPosition = cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing)\n    }\n\n    const years: Array<{\n        year: number\n        bbox: BBox\n    }> = []\n\n    let months: Array<{\n        path: string\n        bbox: {\n            x: number\n            y: number\n            width: number\n            height: number\n        }\n        date: Date\n        year: number\n        month: number\n    }> = []\n\n    let days: Array<Omit<Datum, 'color' | 'data' | 'value'>> = []\n\n    yearRange.forEach((year, i) => {\n        const yearStart = new Date(year, 0, 1)\n        const yearEnd = new Date(year + 1, 0, 1)\n\n        days = days.concat(\n            timeDays(yearStart, yearEnd).map(dayDate => {\n                return {\n                    date: dayDate,\n                    day: dayFormat(dayDate),\n                    size: cellSize,\n                    ...cellPosition(originX, originY, dayDate, i),\n                }\n            })\n        )\n\n        const yearMonths = timeMonths(yearStart, yearEnd).map(monthDate => ({\n            date: monthDate,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth(),\n            ...memoMonthPathAndBBox({\n                originX,\n                originY,\n                date: monthDate,\n                direction,\n                yearIndex: i,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                cellSize,\n            }),\n        }))\n\n        months = months.concat(yearMonths)\n\n        years.push({\n            year,\n            bbox: {\n                x: yearMonths[0].bbox.x,\n                y: yearMonths[0].bbox.y,\n                width: yearMonths[11].bbox.x - yearMonths[0].bbox.x + yearMonths[11].bbox.width,\n                height: yearMonths[11].bbox.y - yearMonths[0].bbox.y + yearMonths[11].bbox.height,\n            },\n        })\n    })\n\n    return { years, months, days, cellSize, calendarWidth, calendarHeight, originX, originY }\n}\n\n/**\n * Bind current data to computed day cells.\n */\nexport const bindDaysData = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> & {\n    colorScale: ScaleQuantize<string> | ColorScale\n    days: Array<Omit<Datum, 'color' | 'data' | 'value'>>\n}) => {\n    return days.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        if (!dayData) {\n            return { ...day, color: emptyColor }\n        }\n\n        return {\n            ...day,\n            color: colorScale(dayData.value),\n            data: dayData,\n            value: dayData.value,\n        }\n    })\n}\n\nexport const computeYearLegendPositions = ({\n    years,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    years: Year[]\n}) => {\n    return years.map(year => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = year.bbox.x - offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = year.bbox.x + year.bbox.width + offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'vertical' && position === 'before') {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y - offset\n        } else {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y + year.bbox.height + offset\n        }\n\n        return {\n            ...year,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n\nexport const computeMonthLegendPositions = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    months: Month[]\n}) => {\n    return months.map(month => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y - offset\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y + month.bbox.height + offset\n        } else if (direction === 'vertical' && position === 'before') {\n            x = month.bbox.x - offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        } else {\n            x = month.bbox.x + month.bbox.width + offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        }\n\n        return {\n            ...month,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n","import { useMemo } from 'react'\nimport { ScaleQuantize, scaleQuantize } from 'd3-scale'\nimport {\n    computeDomain,\n    computeYearLegendPositions,\n    computeMonthLegendPositions,\n    bindDaysData,\n    computeLayout,\n} from './compute/calendar'\nimport { BBox, CalendarSvgProps, ColorScale, Year } from './types'\n\nexport const useCalendarLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'width'\n    | 'height'\n    | 'from'\n    | 'to'\n    | 'direction'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n    | 'align'\n>) =>\n    useMemo(\n        () =>\n            computeLayout({\n                width,\n                height,\n                from,\n                to,\n                direction,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                align,\n            }),\n        [width, height, from, to, direction, yearSpacing, monthSpacing, daySpacing, align]\n    )\n\nexport const useColorScale = ({\n    data,\n    minValue,\n    maxValue,\n    colors,\n    colorScale,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'minValue' | 'maxValue' | 'colors'> &\n    Pick<CalendarSvgProps, 'colorScale'>) =>\n    useMemo(() => {\n        if (colorScale) return colorScale\n        const domain = computeDomain(data, minValue, maxValue)\n        const defaultColorScale = scaleQuantize<string>().domain(domain).range(colors)\n        return defaultColorScale\n    }, [data, minValue, maxValue, colors, colorScale])\n\nexport const useYearLegends = ({\n    years,\n    direction,\n    yearLegendPosition,\n    yearLegendOffset,\n}: {\n    years: Year[]\n    direction: 'horizontal' | 'vertical'\n    yearLegendPosition: 'before' | 'after'\n    yearLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeYearLegendPositions({\n                years,\n                direction,\n                position: yearLegendPosition,\n                offset: yearLegendOffset,\n            }),\n        [years, direction, yearLegendPosition, yearLegendOffset]\n    )\n\nexport const useMonthLegends = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    monthLegendPosition,\n    monthLegendOffset,\n}: {\n    months: Month[]\n    direction: 'horizontal' | 'vertical'\n    monthLegendPosition: 'before' | 'after'\n    monthLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeMonthLegendPositions({\n                months,\n                direction,\n                position: monthLegendPosition,\n                offset: monthLegendOffset,\n            }),\n        [months, direction, monthLegendPosition, monthLegendOffset]\n    )\n\nexport const useDays = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> &\n    Pick<Parameters<typeof bindDaysData>[0], 'days'> & {\n        colorScale: ScaleQuantize<string> | ColorScale\n    }) =>\n    useMemo(\n        () =>\n            bindDaysData({\n                days,\n                data,\n                colorScale,\n                emptyColor,\n            }),\n        [days, data, colorScale, emptyColor]\n    )\n","import { CalendarSvgProps } from './types'\nimport { Container, SvgWrapper, useTheme, useDimensions, useValueFormatter } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CalendarYearLegends } from './CalendarYearLegends'\nimport { CalendarMonthPath } from './CalendarMonthPath'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { CalendarDay } from './CalendarDay'\nimport { calendarDefaultProps } from './props'\nimport { useMonthLegends, useYearLegends, useCalendarLayout, useDays, useColorScale } from './hooks'\n\nconst InnerCalendar = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    align = calendarDefaultProps.align,\n    colors = calendarDefaultProps.colors,\n    colorScale,\n    data,\n    direction = calendarDefaultProps.direction,\n    emptyColor = calendarDefaultProps.emptyColor,\n    from,\n    to,\n    minValue = calendarDefaultProps.minValue,\n    maxValue = calendarDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    yearLegend = calendarDefaultProps.yearLegend,\n    yearLegendOffset = calendarDefaultProps.yearLegendOffset,\n    yearLegendPosition = calendarDefaultProps.yearLegendPosition,\n    yearSpacing = calendarDefaultProps.yearSpacing,\n\n    monthBorderColor = calendarDefaultProps.monthBorderColor,\n    monthBorderWidth = calendarDefaultProps.monthBorderWidth,\n    monthLegend = calendarDefaultProps.monthLegend,\n    monthLegendOffset = calendarDefaultProps.monthLegendOffset,\n    monthLegendPosition = calendarDefaultProps.monthLegendPosition,\n    monthSpacing = calendarDefaultProps.monthSpacing,\n\n    dayBorderColor = calendarDefaultProps.dayBorderColor,\n    dayBorderWidth = calendarDefaultProps.dayBorderWidth,\n    daySpacing = calendarDefaultProps.daySpacing,\n\n    isInteractive = calendarDefaultProps.isInteractive,\n    tooltip = calendarDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = calendarDefaultProps.legends,\n    role = calendarDefaultProps.role,\n}: CalendarSvgProps) => {\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const { months, years, ...rest } = useCalendarLayout({\n        width: innerWidth,\n        height: innerHeight,\n        from,\n        to,\n        direction,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        align,\n    })\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n    const yearLegends = useYearLegends({ years, direction, yearLegendPosition, yearLegendOffset })\n    const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n    const formatLegend = useValueFormatter(legendFormat)\n    const formatValue = useValueFormatter(valueFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {days.map(d => (\n                <CalendarDay\n                    key={d.date.toString()}\n                    data={d}\n                    x={d.x}\n                    y={d.y}\n                    size={d.size}\n                    color={d.color}\n                    borderWidth={dayBorderWidth}\n                    borderColor={dayBorderColor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onMouseMove={onMouseMove}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    formatValue={formatValue}\n                />\n            ))}\n            {months.map(m => (\n                <CalendarMonthPath\n                    key={m.date.toString()}\n                    path={m.path}\n                    borderWidth={monthBorderWidth}\n                    borderColor={monthBorderColor}\n                />\n            ))}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n            <CalendarYearLegends years={yearLegends} legend={yearLegend} theme={theme} />\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Calendar = ({\n    isInteractive = calendarDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendar isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { timeWeek, timeDays, timeDay } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { DateOrString } from '../types'\nimport { isDate } from 'lodash'\n\n// Interfaces\ninterface ComputeBaseProps {\n    direction: 'horizontal' | 'vertical'\n}\n\ninterface ComputeBaseSpaceProps {\n    daySpacing: number\n    offset: number\n}\n\ninterface ComputeBaseDimensionProps {\n    cellWidth: number\n    cellHeight: number\n}\n\ninterface ComputeCellSize extends ComputeBaseProps, ComputeBaseSpaceProps {\n    totalDays: number\n    width: number\n    height: number\n    square: boolean\n}\n\ninterface ComputeCellPositions\n    extends ComputeBaseProps,\n        ComputeBaseSpaceProps,\n        ComputeBaseDimensionProps {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n    colorScale: (value: number) => string\n    emptyColor: string\n}\n\ninterface ComputeWeekdays\n    extends Omit<ComputeBaseProps, 'daysInRange'>,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    ticks?: number[]\n    arrayOfWeekdays?: string[]\n}\n\ninterface Day {\n    coordinates: {\n        x: number\n        y: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n    date: Date\n    color: string\n    day: string\n    value?: number\n}\n\ninterface Month {\n    date: Date\n    bbox: {\n        x: number\n        y: number\n        width: number\n        height: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n}\n\ninterface ComputeMonths\n    extends ComputeBaseProps,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    days: Day[]\n}\n\ninterface ComputeTotalDays {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute day cell size according to\n * current context.\n */\nexport const computeCellSize = ({\n    direction,\n    daySpacing,\n    offset,\n    square,\n    totalDays,\n    width,\n    height,\n}: ComputeCellSize) => {\n    const daysInRange = 7\n    let rows\n    let columns\n    let widthRest = width\n    let heightRest = height\n    if (direction === 'horizontal') {\n        widthRest -= offset\n        rows = daysInRange\n        columns = Math.ceil(totalDays / daysInRange)\n    } else {\n        heightRest -= offset\n        columns = daysInRange\n        rows = Math.ceil(totalDays / daysInRange)\n    }\n    // + 1 since we have to apply spacing to the rigth and left\n    const cellHeight = (heightRest - daySpacing * (rows + 1)) / rows\n    const cellWidth = (widthRest - daySpacing * (columns + 1)) / columns\n    // do we want square?\n    const size = Math.min(cellHeight, cellWidth)\n    return {\n        columns,\n        rows,\n        cellHeight: square ? size : cellHeight,\n        cellWidth: square ? size : cellWidth,\n    }\n}\n\nfunction computeGrid({\n    startDate,\n    date,\n    direction,\n}: {\n    startDate: Date\n    date: Date\n    direction: 'horizontal' | 'vertical'\n}) {\n    const firstWeek = timeWeek.count(startDate, date)\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    let currentColumn = 0\n    let currentRow = 0\n    if (direction === 'horizontal') {\n        currentColumn = firstWeek\n        currentRow = date.getDay()\n    } else {\n        currentColumn = date.getDay()\n        currentRow = firstWeek\n    }\n\n    return { currentColumn, year, currentRow, firstWeek, month, date }\n}\n\nexport const computeCellPositions = ({\n    direction,\n    colorScale,\n    emptyColor,\n    from,\n    to,\n    data,\n    cellWidth,\n    cellHeight,\n    daySpacing,\n    offset,\n}: ComputeCellPositions) => {\n    let x = daySpacing\n    let y = daySpacing\n\n    if (direction === 'horizontal') {\n        x += offset\n    } else {\n        y += offset\n    }\n\n    // we need to determine whether we need to add days to move to correct position\n    const start = from ? from : data[0].date\n    const end = to ? to : data[data.length - 1].date\n    const startDate = isDate(start) ? start : new Date(start)\n    const endDate = isDate(end) ? end : new Date(end)\n    const dateRange = timeDays(startDate, endDate).map(dayDate => {\n        return {\n            date: dayDate,\n            day: dayFormat(dayDate),\n        }\n    })\n\n    const dataWithCellPosition = dateRange.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        const { currentColumn, currentRow, firstWeek, year, month, date } = computeGrid({\n            startDate,\n            date: day.date,\n            direction,\n        })\n\n        const coordinates = {\n            x: x + daySpacing * currentColumn + cellWidth * currentColumn,\n            y: y + daySpacing * currentRow + cellHeight * currentRow,\n        }\n\n        if (!dayData) {\n            return {\n                ...day,\n                coordinates,\n                firstWeek,\n                month,\n                year,\n                date,\n                color: emptyColor,\n                width: cellWidth,\n                height: cellHeight,\n            }\n        }\n\n        return {\n            ...dayData,\n            coordinates,\n            firstWeek,\n            month,\n            year,\n            date,\n            color: colorScale(dayData.value),\n            width: cellWidth,\n            height: cellHeight,\n        }\n    })\n\n    return dataWithCellPosition\n}\n\nexport const computeWeekdays = ({\n    cellHeight,\n    cellWidth,\n    direction,\n    daySpacing,\n    ticks = [1, 3, 5],\n    arrayOfWeekdays = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ],\n}: ComputeWeekdays) => {\n    const sizes = {\n        width: cellWidth + daySpacing,\n        height: cellHeight + daySpacing,\n    }\n    return ticks.map(day => ({\n        value: arrayOfWeekdays[day],\n        rotation: direction === 'horizontal' ? 0 : -90,\n        y: direction === 'horizontal' ? sizes.height * (day + 1) - sizes.height / 3 : 0,\n        x: direction === 'horizontal' ? 0 : sizes.width * (day + 1) - sizes.width / 3,\n    }))\n}\n\nexport const computeMonthLegends = ({\n    direction,\n    daySpacing,\n    days,\n    cellHeight,\n    cellWidth,\n}: ComputeMonths) => {\n    const accumulator: {\n        months: { [key: string]: Month }\n        weeks: Day[]\n    } = {\n        months: {},\n        weeks: [],\n    }\n\n    return days.reduce((acc, day) => {\n        if (acc.weeks.length === day.firstWeek) {\n            acc.weeks.push(day)\n\n            const key = `${day.year}-${day.month}`\n\n            if (!Object.keys(acc.months).includes(key)) {\n                const bbox = { x: 0, y: 0, width: 0, height: 0 }\n\n                if (direction === 'horizontal') {\n                    bbox.x = day.coordinates.x - daySpacing\n                    bbox.height = cellHeight + daySpacing\n                    bbox.width = cellWidth + daySpacing * 2\n                } else {\n                    bbox.y = day.coordinates.y - daySpacing\n                    bbox.height = cellHeight + daySpacing * 2\n                    bbox.width = cellWidth + daySpacing * 2\n                }\n\n                acc.months[key] = {\n                    date: day.date,\n                    bbox,\n                    firstWeek: day.firstWeek,\n                    month: 0,\n                    year: 0,\n                }\n            } else {\n                // enhance width/height\n                if (direction === 'horizontal') {\n                    acc.months[key].bbox.width =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellWidth + daySpacing)\n                } else {\n                    acc.months[key].bbox.height =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellHeight + daySpacing)\n                }\n            }\n        }\n        return acc\n    }, accumulator)\n}\n\nexport const computeTotalDays = ({ from, to, data }: ComputeTotalDays) => {\n    let startDate\n    let endDate\n    if (from) {\n        startDate = isDate(from) ? from : new Date(from)\n    } else {\n        startDate = data[0].date\n    }\n\n    if (from && to) {\n        endDate = isDate(to) ? to : new Date(to)\n    } else {\n        endDate = data[data.length - 1].date\n    }\n\n    return startDate.getDay() + timeDay.count(startDate, endDate)\n}\n","import { createElement, memo, useCallback } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TimeRangeDayProps } from './types'\n\nexport const TimeRangeDay = memo(\n    ({\n        data,\n        x,\n        ry = 5,\n        rx = 5,\n        y,\n        width,\n        height,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: TimeRangeDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseMove?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            event => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(event => onClick?.(data, event), [data, onClick])\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                rx={rx}\n                ry={ry}\n                width={width}\n                height={height}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { useMemo } from 'react'\nimport { Container, SvgWrapper, useValueFormatter, useTheme, useDimensions } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport {\n    computeWeekdays,\n    computeCellSize,\n    computeCellPositions,\n    computeMonthLegends,\n    computeTotalDays,\n} from './compute/timeRange'\nimport { useMonthLegends, useColorScale } from './hooks'\nimport { TimeRangeDay } from './TimeRangeDay'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { TimeRangeSvgProps } from './types'\nimport { timeRangeDefaultProps } from './props'\n\nconst InnerTimeRange = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    square = timeRangeDefaultProps.square,\n    colors = timeRangeDefaultProps.colors,\n    colorScale,\n    emptyColor = timeRangeDefaultProps.emptyColor,\n    from,\n    to,\n    data: _data,\n    direction = timeRangeDefaultProps.direction,\n    minValue = timeRangeDefaultProps.minValue,\n    maxValue = timeRangeDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    monthLegend = timeRangeDefaultProps.monthLegend,\n    monthLegendOffset = timeRangeDefaultProps.monthLegendOffset,\n    monthLegendPosition = timeRangeDefaultProps.monthLegendPosition,\n\n    weekdayLegendOffset = timeRangeDefaultProps.weekdayLegendOffset,\n    weekdayTicks,\n\n    dayBorderColor = timeRangeDefaultProps.dayBorderColor,\n    dayBorderWidth = timeRangeDefaultProps.dayBorderWidth,\n    daySpacing = timeRangeDefaultProps.daySpacing,\n    dayRadius = timeRangeDefaultProps.dayRadius,\n\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    tooltip = timeRangeDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = timeRangeDefaultProps.legends,\n    role = timeRangeDefaultProps.role,\n}: TimeRangeSvgProps) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const data = useMemo(\n        () =>\n            _data\n                .map(data => ({ ...data, date: new Date(`${data.day}T00:00:00`) }))\n                .sort((left, right) => left.day.localeCompare(right.day)),\n        [_data]\n    )\n\n    const theme = useTheme()\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n\n    const totalDays = computeTotalDays({\n        from,\n        to,\n        data,\n    })\n\n    const { cellHeight, cellWidth } = computeCellSize({\n        square,\n        offset: weekdayLegendOffset,\n        totalDays: totalDays,\n        width: innerWidth,\n        height: innerHeight,\n        daySpacing,\n        direction,\n    })\n\n    const days = computeCellPositions({\n        offset: weekdayLegendOffset,\n        colorScale: colorScaleFn,\n        emptyColor,\n        cellHeight,\n        cellWidth,\n        from,\n        to,\n        data,\n        direction,\n        daySpacing,\n    })\n\n    // map the days and reduce the month\n    const months = Object.values(\n        computeMonthLegends({\n            daySpacing,\n            direction,\n            cellHeight,\n            cellWidth,\n            days,\n        }).months\n    )\n\n    const weekdayLegends = computeWeekdays({\n        direction,\n        cellHeight,\n        cellWidth,\n        daySpacing,\n        ticks: weekdayTicks,\n    })\n\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n\n    const formatValue = useValueFormatter(valueFormat)\n    const formatLegend = useValueFormatter(legendFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {weekdayLegends.map(legend => (\n                <text\n                    key={legend.value}\n                    transform={`translate(${legend.x},${legend.y}) rotate(${legend.rotation})`}\n                    textAnchor=\"left\"\n                    style={theme.labels.text}\n                >\n                    {legend.value}\n                </text>\n            ))}\n            {days.map(d => {\n                return (\n                    <TimeRangeDay\n                        key={d.date.toString()}\n                        data={d}\n                        x={d.coordinates.x}\n                        rx={dayRadius}\n                        y={d.coordinates.y}\n                        ry={dayRadius}\n                        width={cellWidth}\n                        height={cellHeight}\n                        color={d.color}\n                        borderWidth={dayBorderWidth}\n                        borderColor={dayBorderColor}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onMouseMove={onMouseMove}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onClick={onClick}\n                        formatValue={formatValue}\n                    />\n                )\n            })}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const TimeRange = ({\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: TimeRangeSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerTimeRange isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { TimeRange } from './TimeRange'\nimport { TimeRangeSvgProps } from './types'\n\nexport const ResponsiveTimeRange = (props: Omit<TimeRangeSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TimeRange width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { Calendar } from './Calendar'\nimport { CalendarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveCalendar = (props: Omit<CalendarSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Calendar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { memo, useRef, useState, useEffect, useCallback } from 'react'\nimport * as React from 'react'\nimport {\n    Box,\n    Container,\n    isCursorInRect,\n    getRelativeCursor,\n    degreesToRadians,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { calendarCanvasDefaultProps } from './props'\nimport { useCalendarLayout, useColorScale, useMonthLegends, useYearLegends, useDays } from './hooks'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CalendarCanvasProps } from './types'\n\nconst findDayUnderCursor = (\n    event: React.MouseEvent,\n    canvasEl: HTMLCanvasElement,\n    days: ReturnType<typeof useDays>,\n    size: number,\n    dayBorderWidth: number,\n    margin: Required<Box>\n) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    return days.find(day => {\n        return (\n            'value' in day &&\n            isCursorInRect(\n                day.x + margin.left - dayBorderWidth / 2,\n                day.y + margin.top - dayBorderWidth / 2,\n                size + dayBorderWidth,\n                size + dayBorderWidth,\n                x,\n                y\n            )\n        )\n    })\n}\n\nconst InnerCalendarCanvas = memo(\n    ({\n        margin: partialMargin,\n        width,\n        height,\n        pixelRatio = calendarCanvasDefaultProps.pixelRatio,\n\n        align = calendarCanvasDefaultProps.align,\n        colors = calendarCanvasDefaultProps.colors,\n        colorScale,\n        data,\n        direction = calendarCanvasDefaultProps.direction,\n        emptyColor = calendarCanvasDefaultProps.emptyColor,\n        from,\n        to,\n        minValue = calendarCanvasDefaultProps.minValue,\n        maxValue = calendarCanvasDefaultProps.maxValue,\n        valueFormat,\n        legendFormat,\n\n        yearLegend = calendarCanvasDefaultProps.yearLegend,\n        yearLegendOffset = calendarCanvasDefaultProps.yearLegendOffset,\n        yearLegendPosition = calendarCanvasDefaultProps.yearLegendPosition,\n        yearSpacing = calendarCanvasDefaultProps.yearSpacing,\n\n        monthLegend = calendarCanvasDefaultProps.monthLegend,\n        monthLegendOffset = calendarCanvasDefaultProps.monthLegendOffset,\n        monthLegendPosition = calendarCanvasDefaultProps.monthLegendPosition,\n        monthSpacing = calendarCanvasDefaultProps.monthSpacing,\n\n        dayBorderColor = calendarCanvasDefaultProps.dayBorderColor,\n        dayBorderWidth = calendarCanvasDefaultProps.dayBorderWidth,\n        daySpacing = calendarCanvasDefaultProps.daySpacing,\n\n        isInteractive = calendarCanvasDefaultProps.isInteractive,\n        tooltip = calendarCanvasDefaultProps.tooltip,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        onMouseMove,\n\n        legends = calendarCanvasDefaultProps.legends,\n    }: CalendarCanvasProps) => {\n        const canvasEl = useRef<HTMLCanvasElement | null>(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const { months, years, ...rest } = useCalendarLayout({\n            width: innerWidth,\n            height: innerHeight,\n            from,\n            to,\n            direction,\n            yearSpacing,\n            monthSpacing,\n            daySpacing,\n            align,\n        })\n        const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n        const monthLegends = useMonthLegends({\n            months,\n            direction,\n            monthLegendPosition,\n            monthLegendOffset,\n        })\n        const yearLegends = useYearLegends({\n            years,\n            direction,\n            yearLegendPosition,\n            yearLegendOffset,\n        })\n        const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n        const [currentDay, setCurrentDay] = useState<ReturnType<typeof useDays>[number] | null>(\n            null\n        )\n        const theme = useTheme()\n        const formatValue = useValueFormatter(valueFormat)\n        const formatLegend = useValueFormatter(legendFormat)\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        useEffect(() => {\n            if (!canvasEl.current) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            if (!ctx) return\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            days.forEach(day => {\n                ctx.fillStyle = day.color\n                if (dayBorderWidth > 0) {\n                    ctx.strokeStyle = dayBorderColor\n                    ctx.lineWidth = dayBorderWidth\n                }\n\n                ctx.beginPath()\n                ctx.rect(day.x, day.y, day.size, day.size)\n                ctx.fill()\n\n                if (dayBorderWidth > 0) {\n                    ctx.stroke()\n                }\n            })\n\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.fillStyle = theme.labels.text.fill ?? ''\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            monthLegends.forEach(month => {\n                ctx.save()\n                ctx.translate(month.x, month.y)\n                ctx.rotate(degreesToRadians(month.rotation))\n                ctx.fillText(String(monthLegend(month.year, month.month, month.date)), 0, 0)\n                ctx.restore()\n            })\n\n            yearLegends.forEach(year => {\n                ctx.save()\n                ctx.translate(year.x, year.y)\n                ctx.rotate(degreesToRadians(year.rotation))\n                ctx.fillText(String(yearLegend(year.year)), 0, 0)\n                ctx.restore()\n            })\n\n            legends.forEach(legend => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                renderLegendToCanvas(ctx, {\n                    ...legend,\n                    data: legendData,\n                    containerWidth: innerWidth,\n                    containerHeight: innerHeight,\n                    theme,\n                })\n            })\n        }, [\n            canvasEl,\n            innerHeight,\n            innerWidth,\n            outerWidth,\n            outerHeight,\n            pixelRatio,\n            margin,\n            days,\n            dayBorderColor,\n            dayBorderWidth,\n            colorScale,\n            yearLegend,\n            yearLegends,\n            monthLegend,\n            monthLegends,\n            legends,\n            theme,\n            formatLegend,\n            colorScaleFn,\n        ])\n\n        const handleMouseHover = useCallback(\n            event => {\n                if (!canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    dayBorderWidth,\n                    margin\n                )\n\n                if (data) {\n                    setCurrentDay(data)\n\n                    if (!('value' in data)) {\n                        return\n                    }\n\n                    const formatedData = {\n                        ...data,\n                        value: formatValue(data.value),\n                        data: { ...data.data },\n                    }\n                    showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                    !currentDay && onMouseEnter?.(data, event)\n                    onMouseMove?.(data, event)\n                    currentDay && onMouseLeave?.(data, event)\n                } else {\n                    hideTooltip()\n                    data && onMouseLeave?.(data, event)\n                }\n            },\n            [\n                canvasEl,\n                currentDay,\n                margin,\n                days,\n                setCurrentDay,\n                formatValue,\n                dayBorderWidth,\n                showTooltipFromEvent,\n                hideTooltip,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                tooltip,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentDay(null)\n            hideTooltip()\n        }, [setCurrentDay, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onClick || !canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    daySpacing,\n                    margin\n                )\n\n                data && onClick(data, event)\n            },\n            [canvasEl, daySpacing, margin, days, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nexport const CalendarCanvas = ({\n    isInteractive = calendarCanvasDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarCanvasProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendarCanvas isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CalendarCanvas } from './CalendarCanvas'\nimport { CalendarCanvasProps } from './types'\n\nexport const ResponsiveCalendarCanvas = (props: Omit<CalendarCanvasProps, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <CalendarCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["defineProperty","objectWithoutPropertiesLoose","CalendarYearLegends","memo","years","legend","theme","_jsx","map","year","x","y","rotation","labels","text","CalendarMonthPath","path","borderWidth","borderColor","fill","strokeWidth","stroke","pointerEvents","CalendarMonthLegends","months","month","date","toString","CalendarDay","data","size","color","isInteractive","tooltip","onMouseEnter","onMouseMove","onMouseLeave","onClick","formatValue","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","formatedData","value","React","handleMouseMove","handleMouseLeave","handleClick","undefined","CalendarTooltip","day","isNaN","Number","BasicTooltip","monthLabelFormat","timeFormat","commonDefaultProps","colors","align","direction","emptyColor","minValue","maxValue","yearSpacing","yearLegend","yearLegendPosition","yearLegendOffset","monthBorderWidth","monthBorderColor","monthSpacing","monthLegend","_year","_month","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","legends","calendarDefaultProps","role","calendarCanvasDefaultProps","pixelRatio","window","devicePixelRatio","timeRangeDefaultProps","dayRadius","square","weekdayLegendOffset","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","computeDomain","minSpec","maxSpec","allValues","d","Math","min","max","computeCellSize","width","height","yearRange","maxWeeks","hCellSize","vCellSize","length","monthPathAndBBox","cellSize","yearIndex","originX","originY","t1","Date","getFullYear","getMonth","firstWeek","timeWeek","count","timeYear","lastWeek","firstDay","getDay","lastDay","xO","yO","yearOffset","monthOffset","bbox","join","memoMonthPathAndBBox","cellPositionHorizontal","weekOfYear","cellPositionVertical","dayFormat","computeLayout","from","to","fromDate","toDate","timeWeeks","monthsSize","yearsSize","calendarWidth","calendarHeight","alignBox","cellPosition","days","forEach","i","yearStart","yearEnd","concat","timeDays","dayDate","yearMonths","timeMonths","monthDate","push","bindDaysData","colorScale","dayData","find","item","computeYearLegendPositions","position","offset","computeMonthLegendPositions","useCalendarLayout","useMemo","useColorScale","domain","defaultColorScale","scaleQuantize","range","useYearLegends","useMonthLegends","useDays","InnerCalendar","partialMargin","margin","valueFormat","legendFormat","useTheme","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","rest","colorScaleFn","monthLegends","yearLegends","formatLegend","useValueFormatter","_jsxs","SvgWrapper","m","legendData","ticks","itemCount","id","label","BoxLegendSvg","Calendar","renderWrapper","props","Container","totalDays","daysInRange","rows","columns","widthRest","heightRest","ceil","cellHeight","cellWidth","computeGrid","startDate","currentColumn","currentRow","computeCellPositions","start","end","endDate","dateRange","dataWithCellPosition","coordinates","computeWeekdays","arrayOfWeekdays","sizes","computeMonthLegends","accumulator","weeks","reduce","acc","key","Object","keys","includes","computeTotalDays","timeDay","TimeRangeDay","ry","rx","createElement","InnerTimeRange","_data","weekdayTicks","sort","left","right","localeCompare","values","weekdayLegends","TimeRange","ResponsiveTimeRange","ResponsiveWrapper","ResponsiveCalendar","findDayUnderCursor","canvasEl","getRelativeCursor","isCursorInRect","top","InnerCalendarCanvas","useRef","useState","currentDay","setCurrentDay","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","lineWidth","beginPath","rect","textAlign","textBaseline","font","fontSize","fontFamily","save","rotate","degreesToRadians","fillText","String","restore","renderLegendToCanvas","containerWidth","containerHeight","handleMouseHover","CalendarCanvas","ResponsiveCalendarCanvas"],"mappings":"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"}