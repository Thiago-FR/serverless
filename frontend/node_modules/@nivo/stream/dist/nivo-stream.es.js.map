{"version":3,"file":"nivo-stream.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/StreamLayer.tsx","../src/StreamLayers.tsx","../src/StreamDots.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/StreamSlicesItem.tsx","../src/StreamSlices.tsx","../src/StreamDotsItem.tsx","../src/LayerTooltip.tsx","../src/StackTooltip.tsx","../src/props.ts","../src/hooks.ts","../src/Stream.tsx","../src/ResponsiveStream.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] } as StreamCommonProps<\n        any\n    >['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(() => (typeof dotSize === 'function' ? dotSize : () => dotSize), [\n        dotSize,\n    ])\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","createElement","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","path","animatedProps","useSpring","color","immediate","_jsx","fill","undefined","StreamLayers","layers","map","i","getDotY","datum","position","y","y2","y1","StreamDots","data","dotComponent","getSize","getColor","getBorderWidth","key","x","size","borderColor","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","StreamSlicesItem","slice","height","useState","isHover","setIsHover","handleMouseLeave","_jsxs","StreamSlices","slices","index","StreamDotsItem","radius","LayerTooltip","label","StackTooltip","rows","useMemo","stack","p","layerId","layerLabel","formattedValue","defaultProps","order","offsetType","curve","axisBottom","axisLeft","enableGridX","enableGridY","colors","scheme","from","modifiers","enableDots","dotPosition","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableStackTooltip","stackTooltip","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","useStream","width","keys","valueFormat","areaCurveFactory","useCurveInterpolation","areaGenerator","area","y0","d3Stack","offset","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","point","push","value","minValue","Math","min","maxValue","max","scalePoint","domain","Array","length","_","range","scaleLinear","xScale","yScale","theme","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","points","layerIndex","computedPoints","id","layerWithComputedProperties","sliceStack","sort","a","b","layerContext","InnerStream","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","boundDefs","bindDefs","layerById","grid","axes","dots","includes","Fragment","legend","legendData","reverse","Stream","renderWrapper","otherProps","ResponsiveStream","props"],"mappings":";;;;;;;;;;;AAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClBe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClBO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOO;AAAA,MAN9BC,KAM8B,QAN9BA,KAM8B;AAAA,MAL9BC,WAK8B,QAL9BA,WAK8B;AAAA,MAJ9BC,WAI8B,QAJ9BA,WAI8B;AAAA,MAH9BC,cAG8B,QAH9BA,cAG8B;AAAA,MAF9BC,aAE8B,QAF9BA,aAE8B;AAAA,MAD9BC,OAC8B,QAD9BA,OAC8B;;AAAA,oBACgBC,UAAU,EAD1B;AAAA,MACtBC,oBADsB,eACtBA,oBADsB;AAAA,MACAC,WADA,eACAA,WADA;;AAE9B,MAAMC,gBAAgB,GAAGC,WAAW,CAChC,UAAAC,KAAK,EAAI;AACLJ,IAAAA,oBAAoB,CAACK,aAAa,CAACP,OAAD,EAAU;AAAEL,MAAAA,KAAK,EAALA;AAAF,KAAV,CAAd,EAAoCW,KAApC,EAA2C,MAA3C,CAApB;AACH,GAH+B,EAIhC,CAACJ,oBAAD,EAAuBP,KAAvB,CAJgC,CAApC;;AAF8B,yBASYa,eAAe,EAT3B;AAAA,MAStBC,OATsB,oBAStBA,OATsB;AAAA,MASLC,YATK,oBASbC,MATa;;AAU9B,MAAMC,YAAY,GAAGC,eAAe,CAAClB,KAAK,CAACmB,IAAP,CAApC;AACA,MAAMC,aAAa,GAAGC,SAAS,CAAC;AAC5BC,IAAAA,KAAK,EAAEtB,KAAK,CAACsB,KADe;AAE5BN,IAAAA,MAAM,EAAED,YAFoB;AAG5BQ,IAAAA,SAAS,EAAE,CAACT;AAHgB,GAAD,CAA/B;AAMA,SACIU,IAAC,QAAD,CAAU,IAAV;AACI,IAAA,CAAC,EAAEP,YADP;AAEI,IAAA,IAAI,EAAEjB,KAAK,CAACyB,IAAN,GAAazB,KAAK,CAACyB,IAAnB,GAA0BL,aAAa,CAACE,KAFlD;AAGI,IAAA,WAAW,EAAErB,WAHjB;AAII,IAAA,MAAM,EAAEE,cAAc,CAACH,KAAD,CAJ1B;AAKI,IAAA,WAAW,EAAEE,WALjB;AAMI,IAAA,WAAW,EAAEE,aAAa,GAAGK,gBAAH,GAAsBiB,SANpD;AAOI,IAAA,YAAY,EAAEtB,aAAa,GAAGK,gBAAH,GAAsBiB,SAPrD;AAQI,IAAA,YAAY,EAAEtB,aAAa,GAAGI,WAAH,GAAiBkB;AARhD,IADJ;AAYH,CApCM;;ACHA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MACxBC,MADwB,QACxBA,MADwB;AAAA,MAExB3B,WAFwB,QAExBA,WAFwB;AAAA,MAGxBC,WAHwB,QAGxBA,WAHwB;AAAA,MAIxBC,cAJwB,QAIxBA,cAJwB;AAAA,MAKxBC,aALwB,QAKxBA,aALwB;AAAA,MAMxBC,OANwB,QAMxBA,OANwB;AAAA,SAQxBmB;AAAA,cACKI,MAAM,CAACC,GAAP,CAAW,UAAC7B,KAAD,EAAQ8B,CAAR;AAAA,aACRN,IAAC,WAAD;AAEI,QAAA,KAAK,EAAExB,KAFX;AAGI,QAAA,cAAc,EAAEG,cAHpB;AAII,QAAA,WAAW,EAAED,WAJjB;AAKI,QAAA,WAAW,EAAED,WALjB;AAMI,QAAA,aAAa,EAAEG,aANnB;AAOI,QAAA,OAAO,EAAEC;AAPb,SACSyB,CADT,CADQ;AAAA,KAAX;AADL,IARwB;AAAA,CAArB;;ACEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,CACZC,KADY,EAEZC,QAFY,EAGX;AACD,MAAIC,CAAC,GAAGF,KAAK,CAACG,EAAd;;AACA,MAAIF,QAAQ,KAAK,QAAjB,EAA2B;AACvBC,IAAAA,CAAC,GAAGF,KAAK,CAACI,EAAN,GAAW,CAACJ,KAAK,CAACG,EAAN,GAAWH,KAAK,CAACI,EAAlB,IAAwB,CAAvC;AACH,GAFD,MAEO,IAAIH,QAAQ,KAAK,OAAjB,EAA0B;AAC7BC,IAAAA,CAAC,GAAGF,KAAK,CAACI,EAAV;AACH;;AAED,SAAOF,CAAP;AACH,CAZD;;AAcO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MACtBC,IADsB,QACtBA,IADsB;AAAA,MAEtBC,YAFsB,QAEtBA,YAFsB;AAAA,MAGtBN,QAHsB,QAGtBA,QAHsB;AAAA,MAItBO,OAJsB,QAItBA,OAJsB;AAAA,MAKtBC,QALsB,QAKtBA,QALsB;AAAA,MAMtBC,cANsB,QAMtBA,cANsB;AAAA,MAOtBvC,cAPsB,QAOtBA,cAPsB;AAAA,SAStBqB;AAAA,cACKc,IAAI,CAACT,GAAL,CAAS,UAACG,KAAD,EAAQF,CAAR,EAAc;AACpB,aAAOlB,aAAa,CAAC2B,YAAD,EAAe;AAC/BI,QAAAA,GAAG,EAAEb,CAD0B;AAE/BE,QAAAA,KAAK,EAALA,KAF+B;AAG/BY,QAAAA,CAAC,EAAEZ,KAAK,CAACY,CAHsB;AAI/BV,QAAAA,CAAC,EAAEH,OAAO,CAAWC,KAAX,EAAkBC,QAAlB,CAJqB;AAK/BY,QAAAA,IAAI,EAAEL,OAAO,CAACR,KAAD,CALkB;AAM/BV,QAAAA,KAAK,EAAEmB,QAAQ,CAACT,KAAD,CANgB;AAO/B9B,QAAAA,WAAW,EAAEwC,cAAc,CAACV,KAAD,CAPI;AAQ/Bc,QAAAA,WAAW,EAAE3C,cAAc,CAAC6B,KAAD;AARI,OAAf,CAApB;AAUH,KAXA;AADL,IATsB;AAAA,CAAnB;;AC7BQ,SAAS,eAAe,CAAC,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACrC;;ACFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;AACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;AACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAErB,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;AACtD,KAAK,SAAS;AACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACvB,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOe,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,gBAAgB,GAAG;AAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;AACnK;;ACEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;AAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;AACxH;;ACIO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAIO;AAAA,MAHnCC,KAGmC,QAHnCA,KAGmC;AAAA,MAFnCC,MAEmC,QAFnCA,MAEmC;AAAA,MADnCjD,OACmC,QADnCA,OACmC;;AAAA,kBACLkD,QAAQ,CAAC,KAAD,CADH;AAAA;AAAA,MAC5BC,OAD4B;AAAA,MACnBC,UADmB;;AAAA,oBAEWnD,UAAU,EAFrB;AAAA,MAE3BC,oBAF2B,eAE3BA,oBAF2B;AAAA,MAELC,WAFK,eAELA,WAFK;;AAInC,MAAMC,gBAAgB,GAAGC,WAAW,CAChC,UAAAC,KAAK,EAAI;AACL8C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAlD,IAAAA,oBAAoB,CAACK,aAAa,CAACP,OAAD,EAAU;AAAEgD,MAAAA,KAAK,EAALA;AAAF,KAAV,CAAd,EAAoC1C,KAApC,EAA2C,MAA3C,CAApB;AACH,GAJ+B,EAKhC,CAAC8C,UAAD,EAAalD,oBAAb,EAAmCF,OAAnC,EAA4CgD,KAA5C,CALgC,CAApC;AAQA,MAAMK,gBAAgB,GAAGhD,WAAW,CAAC,YAAM;AACvC+C,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAjD,IAAAA,WAAW;AACd,GAHmC,EAGjC,CAACiD,UAAD,EAAajD,WAAb,CAHiC,CAApC;AAKA,SACImD;AAAG,IAAA,SAAS,sBAAeN,KAAK,CAACT,CAArB,SAAZ;AAAA,eACKY,OAAO,IACJhC;AACI,MAAA,EAAE,EAAE,CADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,EAAE,EAAE,CAHR;AAII,MAAA,EAAE,EAAE8B,MAJR;AAKI,MAAA,MAAM,EAAC,MALX;AAMI,MAAA,aAAa,EAAE,IANnB;AAOI,MAAA,WAAW,EAAE;AAPjB,MAFR,EAYI9B;AACI,MAAA,CAAC,EAAE,CAAC,EADR;AAEI,MAAA,KAAK,EAAE,EAFX;AAGI,MAAA,MAAM,EAAE8B,MAHZ;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAE,CALjB;AAMI,MAAA,YAAY,EAAE7C,gBANlB;AAOI,MAAA,WAAW,EAAEA,gBAPjB;AAQI,MAAA,YAAY,EAAEiD;AARlB,MAZJ;AAAA,IADJ;AAyBH,CA9CM;;ACDA,IAAME,YAAY,GAAG,SAAfA,YAAe;AAAA,MACxBC,MADwB,QACxBA,MADwB;AAAA,MAExBP,MAFwB,QAExBA,MAFwB;AAAA,MAGxBjD,OAHwB,QAGxBA,OAHwB;AAAA,SAKxBmB;AAAA,cACKqC,MAAM,CAAChC,GAAP,CAAW,UAAAwB,KAAK;AAAA,aACb7B,IAAC,gBAAD;AAEI,QAAA,KAAK,EAAE6B,KAFX;AAGI,QAAA,MAAM,EAAEC,MAHZ;AAII,QAAA,OAAO,EAAEjD;AAJb,SACSgD,KAAK,CAACS,KADf,CADa;AAAA,KAAhB;AADL,IALwB;AAAA,CAArB;;ACGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOH;AAAA,MANvBnB,CAMuB,QANvBA,CAMuB;AAAA,MALvBV,CAKuB,QALvBA,CAKuB;AAAA,MAJvBW,IAIuB,QAJvBA,IAIuB;AAAA,MAHvBvB,KAGuB,QAHvBA,KAGuB;AAAA,MAFvBpB,WAEuB,QAFvBA,WAEuB;AAAA,MADvB4C,WACuB,QADvBA,WACuB;;AAAA,yBACmBjC,eAAe,EADlC;AAAA,MACfC,OADe,oBACfA,OADe;AAAA,MACEC,YADF,oBACNC,MADM;;AAEvB,MAAMI,aAAa,GAAGC,SAAS,CAAC;AAC5BuB,IAAAA,CAAC,EAADA,CAD4B;AAE5BV,IAAAA,CAAC,EAADA,CAF4B;AAG5B8B,IAAAA,MAAM,EAAEnB,IAAI,GAAG,GAHa;AAI5BvB,IAAAA,KAAK,EAALA,KAJ4B;AAK5BN,IAAAA,MAAM,EAAED,YALoB;AAM5BQ,IAAAA,SAAS,EAAE,CAACT;AANgB,GAAD,CAA/B;AASA,SACIU,IAAC,QAAD,CAAU,MAAV;AACI,IAAA,EAAE,EAAEJ,aAAa,CAACwB,CADtB;AAEI,IAAA,EAAE,EAAExB,aAAa,CAACc,CAFtB;AAGI,IAAA,CAAC,EAAEd,aAAa,CAAC4C,MAHrB;AAII,IAAA,IAAI,EAAE5C,aAAa,CAACE,KAJxB;AAKI,IAAA,WAAW,EAAEpB,WALjB;AAMI,IAAA,MAAM,EAAE4C;AANZ,IADJ;AAUH,CA5BM;;ACTA,IAAMmB,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGjE,KAAH,QAAGA,KAAH;AAAA,SACxBwB,IAAC,YAAD;AAAc,IAAA,EAAE,EAAExB,KAAK,CAACkE,KAAxB;AAA+B,IAAA,UAAU,EAAE,IAA3C;AAAiD,IAAA,KAAK,EAAElE,KAAK,CAACsB;AAA9D,IADwB;AAAA,CAArB;;ACCA,IAAM6C,YAAY,GAAG,SAAfA,YAAe,OAAkC;AAAA,MAA/Bd,KAA+B,QAA/BA,KAA+B;AAC1D,MAAMe,IAAI,GAAGC,OAAO,CAChB;AAAA,WACIhB,KAAK,CAACiB,KAAN,CAAYzC,GAAZ,CAAgB,UAAA0C,CAAC;AAAA,aAAI,CACjB/C,IAAC,IAAD;AAAsB,QAAA,KAAK,EAAE+C,CAAC,CAACjD;AAA/B,SAAWiD,CAAC,CAACC,OAAb,CADiB,EAEjBD,CAAC,CAACE,UAFe,EAGjBF,CAAC,CAACG,cAHe,CAAJ;AAAA,KAAjB,CADJ;AAAA,GADgB,EAOhB,CAACrB,KAAD,CAPgB,CAApB;AAUA,SAAO7B,IAAC,YAAD;AAAc,IAAA,IAAI,EAAE4C;AAApB,IAAP;AACH,CAZM;;ICEMO,YAAY,GAAG;AACxBT,EAAAA,KAAK,EAAE,IADiB;AAGxBU,EAAAA,KAAK,EAAE,MAHiB;AAIxBC,EAAAA,UAAU,EAAE,QAJY;AAKxBC,EAAAA,KAAK,EAAE,YALiB;AAOxBC,EAAAA,UAAU,EAAE,EAPY;AAQxBC,EAAAA,QAAQ,EAAE,EARc;AASxBC,EAAAA,WAAW,EAAE,KATW;AAUxBC,EAAAA,WAAW,EAAE,IAVW;AAYxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAZgB;AAaxBnF,EAAAA,WAAW,EAAE,CAbW;AAcxBC,EAAAA,WAAW,EAAE,CAdW;AAexB4C,EAAAA,WAAW,EAAE;AAAEuC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;AAA5B,GAfW;AAmBxBC,EAAAA,UAAU,EAAE,KAnBY;AAoBxBC,EAAAA,WAAW,EAAE,QApBW;AAqBxBjD,EAAAA,YAAY,EAAEwB,cArBU;AAsBxB0B,EAAAA,OAAO,EAAE,CAtBe;AAuBxBC,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,IAAI,EAAE;AAAR,GAvBc;AAwBxBM,EAAAA,cAAc,EAAE,CAxBQ;AAyBxBC,EAAAA,cAAc,EAAE;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAzBQ;AA2BxBjF,EAAAA,aAAa,EAAE,IA3BS;AA4BxBC,EAAAA,OAAO,EAAE4D,YA5Be;AA6BxB4B,EAAAA,kBAAkB,EAAE,IA7BI;AA8BxBC,EAAAA,YAAY,EAAE3B,YA9BU;AAgCxB4B,EAAAA,OAAO,EAAE,EAhCe;AAiCxBC,EAAAA,WAAW,EAAE,IAjCW;AAmCxBC,EAAAA,IAAI,EAAE;AAnCkB;IAsCfC,eAAe,qCACrBvB,YADqB;AAExB/C,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,SAA7C,CAFgB;AAIxBuE,EAAAA,IAAI,EAAE,EAJkB;AAKxB1E,EAAAA,IAAI,EAAE,EALkB;AAOxBX,EAAAA,OAAO,EAAE,IAPe;AAQxBsF,EAAAA,YAAY,EAAE,SARU;AAUxBH,EAAAA,IAAI,EAAE,KAVkB;AAWxBI,EAAAA,WAAW,EAAE;AAXW;;ACnBrB,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAgCnB;AAAA,MA/BFC,KA+BE,QA/BFA,KA+BE;AAAA,MA9BFjD,MA8BE,QA9BFA,MA8BE;AAAA,MA7BFhB,IA6BE,QA7BFA,IA6BE;AAAA,MA5BFkE,IA4BE,QA5BFA,IA4BE;AAAA,wBA3BFtC,KA2BE;AAAA,MA3BFA,KA2BE,2BA3BMS,YAAY,CAACT,KA2BnB;AAAA,MA1BFuC,WA0BE,QA1BFA,WA0BE;AAAA,6BAzBF5B,UAyBE;AAAA,MAzBFA,UAyBE,gCAzBWF,YAAY,CAACE,UAyBxB;AAAA,wBAxBFD,KAwBE;AAAA,MAxBFA,KAwBE,2BAxBMD,YAAY,CAACC,KAwBnB;AAAA,wBAvBFE,KAuBE;AAAA,MAvBFA,KAuBE,2BAvBMH,YAAY,CAACG,KAuBnB;AAAA,yBAtBFK,MAsBE;AAAA,MAtBFA,MAsBE,4BAtBOR,YAAY,CAACQ,MAsBpB;AAAA,8BArBFrC,WAqBE;AAAA,MArBFA,WAqBE,iCArBY6B,YAAY,CAAC7B,WAqBzB;AAAA,0BApBF2C,OAoBE;AAAA,MApBFA,OAoBE,6BApBQd,YAAY,CAACc,OAoBrB;AAAA,2BAnBFC,QAmBE;AAAA,MAnBFA,QAmBE,8BAnBSf,YAAY,CAACe,QAmBtB;AAAA,iCAlBFC,cAkBE;AAAA,MAlBFA,cAkBE,oCAlBehB,YAAY,CAACgB,cAkB5B;AAAA,iCAjBFC,cAiBE;AAAA,MAjBFA,cAiBE,oCAjBejB,YAAY,CAACiB,cAiB5B;AACF,MAAMc,gBAAgB,GAAGC,qBAAqB,CAAC7B,KAAD,CAA9C;AACA,MAAM8B,aAAa,GAAGvC,OAAO,CACzB;AAAA,WACIwC,IAAI,GACCjE,CADL,CACO;AAAA,UAAGA,CAAH,SAAGA,CAAH;AAAA,aAAWA,CAAX;AAAA,KADP,EAEKkE,EAFL,CAEQ;AAAA,UAAG1E,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAZ;AAAA,KAFR,EAGKA,EAHL,CAGQ;AAAA,UAAGD,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAZ;AAAA,KAHR,EAIK2C,KAJL,CAIW4B,gBAJX,CADJ;AAAA,GADyB,EAOzB,CAACA,gBAAD,CAPyB,CAA7B;AAUA,MAAMpC,OAAK,GAAGD,OAAO,CACjB;AAAA,WACI0C,KAAO,GACFP,IADL,CACUA,IADV,EAEKQ,MAFL,CAEYC,mBAAmB,CAACpC,UAAD,CAF/B,EAGKD,KAHL,CAGWsC,kBAAkB,CAACtC,KAAD,CAH7B,CADJ;AAAA,GADiB,EAMjB,CAAC4B,IAAD,EAAO3B,UAAP,EAAmBD,KAAnB,CANiB,CAArB;;AAZE,iBAqB+BP,OAAO,CAAC,YAAM;AAC3C,QAAM8C,MAAgB,GAAG,EAAzB;AACA,QAAMC,MAAgB,GAAG,EAAzB;AAEA,QAAMxF,MAAM,GAAG0C,OAAK,CAAChC,IAAD,CAAL,CAAYT,GAAZ,CAAgB,UAAA7B,KAAK,EAAI;AACpC,aAAOA,KAAK,CAAC6B,GAAN,CAAU,UAAAwF,KAAK,EAAI;AACtBF,QAAAA,MAAM,CAACG,IAAP,CAAYD,KAAK,CAAC,CAAD,CAAjB;AACAD,QAAAA,MAAM,CAACE,IAAP,CAAYD,KAAK,CAAC,CAAD,CAAjB;AAEA,iDACOA,KADP;AAEIE,UAAAA,KAAK,EAAEF,KAAK,CAAC/E,IAAN,CAAWtC,KAAK,CAAC2C,GAAjB;AAFX;AAIH,OARM,CAAP;AASH,KAVc,CAAf;AAYA,QAAM6E,QAAQ,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,EAAQN,MAAR,CAArB;AACA,QAAMQ,QAAQ,GAAGF,IAAI,CAACG,GAAL,OAAAH,IAAI,EAAQL,MAAR,CAArB;AAEA,WAAO,CACHxF,MADG,EAEHiG,UAAU,GACLC,MADL,CACYC,KAAK,CAAC1C,IAAN,CAAW;AAAE2C,MAAAA,MAAM,EAAE1F,IAAI,CAAC0F;AAAf,KAAX,EAAoC,UAACC,CAAD,EAAInG,CAAJ;AAAA,aAAUA,CAAV;AAAA,KAApC,CADZ,EAEKoG,KAFL,CAEW,CAAC,CAAD,EAAI3B,KAAJ,CAFX,CAFG,EAKH4B,WAAW,GAAGL,MAAd,CAAqB,CAACN,QAAD,EAAWG,QAAX,CAArB,EAA2CO,KAA3C,CAAiD,CAAC5E,MAAD,EAAS,CAAT,CAAjD,CALG,CAAP;AAOH,GA1BuC,EA0BrC,CAACgB,OAAD,EAAQhC,IAAR,EAAciE,KAAd,EAAqBjD,MAArB,CA1BqC,CArBtC;AAAA;AAAA,MAqBK1B,MArBL;AAAA,MAqBawG,MArBb;AAAA,MAqBqBC,MArBrB;;AAiDF,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;AACA,MAAM9F,QAAQ,GAAG+F,oBAAoB,CACjCrD,MADiC,EAEjC,IAFiC,CAArC;AAIA,MAAMhF,cAAc,GAAGsI,iBAAiB,CAAkB3F,WAAlB,EAA+BwF,KAA/B,CAAxC;AAEA,MAAMI,UAAU,GAAGrE,OAAO,CAAC;AAAA,WAAO,OAAOoB,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0C;AAAA,aAAMA,OAAN;AAAA,KAAjD;AAAA,GAAD,EAAkE,CACxFA,OADwF,CAAlE,CAA1B;AAGA,MAAMkD,WAAW,GAAGF,iBAAiB,CAAC/C,QAAD,EAAW4C,KAAX,CAArC;AACA,MAAMM,iBAAiB,GAAGvE,OAAO,CAC7B;AAAA,WAAO,OAAOsB,cAAP,KAA0B,UAA1B,GAAuCA,cAAvC,GAAwD;AAAA,aAAMA,cAAN;AAAA,KAA/D;AAAA,GAD6B,EAE7B,CAACA,cAAD,CAF6B,CAAjC;AAIA,MAAMkD,iBAAiB,GAAGJ,iBAAiB,CAAC7C,cAAD,EAAiB0C,KAAjB,CAA3C;AAEA,MAAMQ,QAAQ,GAAGC,mBAAmB,CAGlC7E,KAHkC,CAApC;AAIA,MAAM8E,WAAW,GAAGC,iBAAiB,CAACxC,WAAD,CAArC;AAEA,MAAMyC,cAAiC,GAAG7E,OAAO,CAC7C;AAAA,WACIzC,MAAM,CAACC,GAAP,CAAW,UAACsH,MAAD,EAASC,UAAT,EAAwB;AAC/B,UAAMC,cAAkC,GAAGF,MAAM,CAACtH,GAAP,CAAW,UAACwF,KAAD,EAAQvF,CAAR;AAAA,eAAe;AACjE0C,UAAAA,OAAO,EAAEgC,IAAI,CAAC4C,UAAD,CADoD;AAEjE3E,UAAAA,UAAU,EAAE,EAFqD;AAGjEX,UAAAA,KAAK,EAAEhC,CAH0D;AAIjER,UAAAA,KAAK,EAAE,EAJ0D;AAKjEsB,UAAAA,CAAC,EAAEwF,MAAM,CAACtG,CAAD,CALwD;AAMjEyF,UAAAA,KAAK,EAAEF,KAAK,CAACE,KANoD;AAOjE7C,UAAAA,cAAc,EAAEsE,WAAW,CAAC3B,KAAK,CAACE,KAAP,CAPsC;AAQjEnF,UAAAA,EAAE,EAAEiG,MAAM,CAAChB,KAAK,CAAC,CAAD,CAAN,CARuD;AASjElF,UAAAA,EAAE,EAAEkG,MAAM,CAAChB,KAAK,CAAC,CAAD,CAAN;AATuD,SAAf;AAAA,OAAX,CAA3C;AAYA,UAAMrH,KAAwD,GAAG;AAC7DsJ,QAAAA,EAAE,EAAE9C,IAAI,CAAC4C,UAAD,CADqD;AAE7DjI,QAAAA,IAAI,EAAEyF,aAAa,CAACyC,cAAD;AAF0C,OAAjE;;AAKA,UAAME,2BAA0D,qCACzDvJ,KADyD;AAE5DkE,QAAAA,KAAK,EAAE4E,QAAQ,CAAC9I,KAAD,CAF6C;AAG5DsB,QAAAA,KAAK,EAAEmB,QAAQ,CAACzC,KAAD;AAH6C,QAAhE;;AAMA,+CACOuJ,2BADP;AAEIjH,QAAAA,IAAI,EAAE+G,cAAc,CAACxH,GAAf,CAAmB,UAAAwF,KAAK,EAAI;AAC9BA,UAAAA,KAAK,CAAC5C,UAAN,GAAmB8E,2BAA2B,CAACrF,KAA/C;AACAmD,UAAAA,KAAK,CAAC/F,KAAN,GAAciI,2BAA2B,CAACjI,KAA1C;AAEA,iBAAO+F,KAAP;AACH,SALK;AAFV;AASH,KAjCD,CADJ;AAAA,GAD6C,EAoC7C,CAACzF,MAAD,EAAS4E,IAAT,EAAesC,QAAf,EAAyBlC,aAAzB,EAAwCnE,QAAxC,EAAkD2F,MAAlD,EAA0DC,MAA1D,EAAkEW,WAAlE,CApC6C,CAAjD;AAuCA,MAAMnF,MAAyB,GAAGQ,OAAO,CACrC;AAAA,WACI0D,KAAK,CAAC1C,IAAN,CAAW;AAAE2C,MAAAA,MAAM,EAAE1F,IAAI,CAAC0F;AAAf,KAAX,EAAoC,UAACC,CAAD,EAAInG,CAAJ,EAAU;AAC1C,UAAM0H,UAAU,GAAGN,cAAc,CAC5BrH,GADc,CACV,UAAA7B,KAAK;AAAA,eAAIA,KAAK,CAACsC,IAAN,CAAWR,CAAX,CAAJ;AAAA,OADK,EAEd2H,IAFc,CAET,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACvH,EAAF,GAAOwH,CAAC,CAACxH,EAAnB;AAAA,OAFS,CAAnB;AAIA,aAAO;AACH2B,QAAAA,KAAK,EAAEhC,CADJ;AAEHc,QAAAA,CAAC,EAAEsG,cAAc,CAAC,CAAD,CAAd,CAAkB5G,IAAlB,CAAuBR,CAAvB,EAA0Bc,CAF1B;AAGH0B,QAAAA,KAAK,EAAEkF;AAHJ,OAAP;AAKH,KAVD,CADJ;AAAA,GADqC,EAarC,CAAClH,IAAI,CAAC0F,MAAN,EAAckB,cAAd,CAbqC,CAAzC;AAgBA,MAAMU,YAAoC,GAAGvF,OAAO,CAChD;AAAA,WAAO;AACH+D,MAAAA,MAAM,EAANA,MADG;AAEHC,MAAAA,MAAM,EAANA,MAFG;AAGHzG,MAAAA,MAAM,EAAEsH,cAHL;AAIHrF,MAAAA,MAAM,EAANA;AAJG,KAAP;AAAA,GADgD,EAOhD,CAACuE,MAAD,EAASC,MAAT,EAAiBa,cAAjB,EAAiCrF,MAAjC,CAPgD,CAApD;AAUA,SAAO;AACHuE,IAAAA,MAAM,EAANA,MADG;AAEHC,IAAAA,MAAM,EAANA,MAFG;AAGHzG,IAAAA,MAAM,EAAEsH,cAHL;AAIHrF,IAAAA,MAAM,EAANA,MAJG;AAKH1D,IAAAA,cAAc,EAAdA,cALG;AAMHuI,IAAAA,UAAU,EAAVA,UANG;AAOHC,IAAAA,WAAW,EAAXA,WAPG;AAQHC,IAAAA,iBAAiB,EAAjBA,iBARG;AASHC,IAAAA,iBAAiB,EAAjBA,iBATG;AAUHe,IAAAA,YAAY,EAAZA;AAVG,GAAP;AAYH,CArLM;;ACHP,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAiDc;AAAA,MAhD9BvH,IAgD8B,QAhD9BA,IAgD8B;AAAA,MA/C9BkE,IA+C8B,QA/C9BA,IA+C8B;AAAA,MA9C9BtC,KA8C8B,QA9C9BA,KA8C8B;AAAA,MA7C9BuC,WA6C8B,QA7C9BA,WA6C8B;AAAA,MA3C9B5B,UA2C8B,QA3C9BA,UA2C8B;AAAA,MA1C9BD,KA0C8B,QA1C9BA,KA0C8B;AAAA,MAzC9BE,KAyC8B,QAzC9BA,KAyC8B;AAAA,yBAvC9BlD,MAuC8B;AAAA,MAvCtBkI,WAuCsB,4BAvCR5D,eAAe,CAACtE,MAuCR;AAAA,MArC9B2E,KAqC8B,QArC9BA,KAqC8B;AAAA,MApC9BjD,MAoC8B,QApC9BA,MAoC8B;AAAA,MAnCtByG,aAmCsB,QAnC9BC,MAmC8B;AAAA,MAjC9BC,OAiC8B,QAjC9BA,OAiC8B;AAAA,MAhC9BC,SAgC8B,QAhC9BA,SAgC8B;AAAA,6BA/B9BnF,UA+B8B;AAAA,MA/B9BA,UA+B8B,gCA/BjBmB,eAAe,CAACnB,UA+BC;AAAA,2BA9B9BC,QA8B8B;AAAA,MA9B9BA,QA8B8B,8BA9BnBkB,eAAe,CAAClB,QA8BG;AAAA,8BA7B9BC,WA6B8B;AAAA,MA7B9BA,WA6B8B,iCA7BhBiB,eAAe,CAACjB,WA6BA;AAAA,8BA5B9BC,WA4B8B;AAAA,MA5B9BA,WA4B8B,iCA5BhBgB,eAAe,CAAChB,WA4BA;AAAA,MA1B9BC,MA0B8B,QA1B9BA,MA0B8B;AAAA,8BAzB9BlF,WAyB8B;AAAA,MAzB9BA,WAyB8B,iCAzBhBiG,eAAe,CAACjG,WAyBA;AAAA,8BAxB9BC,WAwB8B;AAAA,MAxB9BA,WAwB8B,iCAxBhBgG,eAAe,CAAChG,WAwBA;AAAA,MAvB9B4C,WAuB8B,QAvB9BA,WAuB8B;AAAA,uBAtB9BqD,IAsB8B;AAAA,MAtB9BA,IAsB8B,0BAtBvBD,eAAe,CAACC,IAsBO;AAAA,uBArB9B1E,IAqB8B;AAAA,MArB9BA,IAqB8B,0BArBvByE,eAAe,CAACzE,IAqBO;AAAA,6BAnB9B8D,UAmB8B;AAAA,MAnB9BA,UAmB8B,gCAnBjBW,eAAe,CAACX,UAmBC;AAAA,8BAlB9BC,WAkB8B;AAAA,MAlB9BA,WAkB8B,iCAlBhBU,eAAe,CAACV,WAkBA;AAAA,+BAjB9BjD,YAiB8B;AAAA,MAjB9BA,YAiB8B,kCAjBf2D,eAAe,CAAC3D,YAiBD;AAAA,MAhB9BkD,OAgB8B,QAhB9BA,OAgB8B;AAAA,MAf9BC,QAe8B,QAf9BA,QAe8B;AAAA,MAd9BC,cAc8B,QAd9BA,cAc8B;AAAA,MAb9BC,cAa8B,QAb9BA,cAa8B;AAAA,gCAX9BxF,aAW8B;AAAA,MAX9BA,aAW8B,mCAXd8F,eAAe,CAAC9F,aAWF;AAAA,0BAV9BC,OAU8B;AAAA,MAV9BA,OAU8B,6BAVpB6F,eAAe,CAAC7F,OAUI;AAAA,mCAT9BwF,kBAS8B;AAAA,MAT9BA,kBAS8B,sCATTK,eAAe,CAACL,kBASP;AAAA,+BAR9BC,YAQ8B;AAAA,MAR9BA,YAQ8B,kCARfI,eAAe,CAACJ,YAQD;AAAA,0BAN9BC,OAM8B;AAAA,MAN9BA,OAM8B,6BANpBG,eAAe,CAACH,OAMI;AAAA,MAJ9BE,IAI8B,QAJ9BA,IAI8B;AAAA,MAH9BkE,SAG8B,QAH9BA,SAG8B;AAAA,MAF9BC,cAE8B,QAF9BA,cAE8B;AAAA,MAD9BC,eAC8B,QAD9BA,eAC8B;;AAAA,uBACuCC,aAAa,CAC9E/D,KAD8E,EAE9EjD,MAF8E,EAG9EyG,aAH8E,CADpD;AAAA,MACtBC,MADsB,kBACtBA,MADsB;AAAA,MACdO,UADc,kBACdA,UADc;AAAA,MACFC,WADE,kBACFA,WADE;AAAA,MACWC,UADX,kBACWA,UADX;AAAA,MACuBC,WADvB,kBACuBA,WADvB;;AAAA,mBAkB1BpE,SAAS,CAAW;AACpBC,IAAAA,KAAK,EAAEgE,UADa;AAEpBjH,IAAAA,MAAM,EAAEkH,WAFY;AAGpBlI,IAAAA,IAAI,EAAJA,IAHoB;AAIpBkE,IAAAA,IAAI,EAAJA,IAJoB;AAKpBtC,IAAAA,KAAK,EAALA,KALoB;AAMpBuC,IAAAA,WAAW,EAAXA,WANoB;AAOpB5B,IAAAA,UAAU,EAAVA,UAPoB;AAQpBD,IAAAA,KAAK,EAALA,KARoB;AASpBE,IAAAA,KAAK,EAALA,KAToB;AAUpBK,IAAAA,MAAM,EAANA,MAVoB;AAWpBrC,IAAAA,WAAW,EAAXA,WAXoB;AAYpB2C,IAAAA,OAAO,EAAPA,OAZoB;AAapBC,IAAAA,QAAQ,EAARA,QAboB;AAcpBC,IAAAA,cAAc,EAAdA,cAdoB;AAepBC,IAAAA,cAAc,EAAdA;AAfoB,GAAX,CAlBiB;AAAA,MAQ1BwC,MAR0B,cAQ1BA,MAR0B;AAAA,MAS1BC,MAT0B,cAS1BA,MAT0B;AAAA,MAU1BzG,MAV0B,cAU1BA,MAV0B;AAAA,MAW1BiC,MAX0B,cAW1BA,MAX0B;AAAA,MAY1B1D,cAZ0B,cAY1BA,cAZ0B;AAAA,MAa1BuI,UAb0B,cAa1BA,UAb0B;AAAA,MAc1BC,WAd0B,cAc1BA,WAd0B;AAAA,MAe1BC,iBAf0B,cAe1BA,iBAf0B;AAAA,MAgB1BC,iBAhB0B,cAgB1BA,iBAhB0B;AAAA,MAiB1Be,YAjB0B,cAiB1BA,YAjB0B;;AAoC9B,MAAMe,SAAS,GAAGC,QAAQ,CAACzE,IAAD,EAAOvE,MAAP,EAAeH,IAAf,CAA1B;AAEA,MAAMoJ,SAA2C,GAAG;AAChDC,IAAAA,IAAI,EAAE,IAD0C;AAEhDC,IAAAA,IAAI,EAAE,IAF0C;AAGhDnJ,IAAAA,MAAM,EAAE,IAHwC;AAIhDoJ,IAAAA,IAAI,EAAE,IAJ0C;AAKhDnH,IAAAA,MAAM,EAAE,IALwC;AAMhDkC,IAAAA,OAAO,EAAE;AANuC,GAApD;;AASA,MAAI+D,WAAW,CAACmB,QAAZ,CAAqB,MAArB,CAAJ,EAAkC;AAC9BJ,IAAAA,SAAS,CAACC,IAAV,GACItJ,IAAC,IAAD;AAEI,MAAA,KAAK,EAAE+I,UAFX;AAGI,MAAA,MAAM,EAAEC,WAHZ;AAII,MAAA,MAAM,EAAEvF,WAAW,GAAImD,MAAJ,GAAqB,IAJ5C;AAKI,MAAA,MAAM,EAAElD,WAAW,GAAImD,MAAJ,GAAqB;AAL5C,OACQ,MADR,CADJ;AASH;;AAED,MAAIyB,WAAW,CAACmB,QAAZ,CAAqB,MAArB,CAAJ,EAAkC;AAC9BJ,IAAAA,SAAS,CAACE,IAAV,GACIvJ,IAAC,IAAD;AAEI,MAAA,MAAM,EAAE4G,MAFZ;AAGI,MAAA,MAAM,EAAEC,MAHZ;AAII,MAAA,KAAK,EAAEkC,UAJX;AAKI,MAAA,MAAM,EAAEC,WALZ;AAMI,MAAA,GAAG,EAAEP,OANT;AAOI,MAAA,KAAK,EAAEC,SAPX;AAQI,MAAA,MAAM,EAAEnF,UARZ;AASI,MAAA,IAAI,EAAEC;AATV,OACQ,MADR,CADJ;AAaH;;AAED,MAAI8E,WAAW,CAACmB,QAAZ,CAAqB,QAArB,CAAJ,EAAoC;AAChCJ,IAAAA,SAAS,CAACjJ,MAAV,GACIJ,IAAC,YAAD;AAEI,MAAA,MAAM,EAAEI,MAFZ;AAGI,MAAA,WAAW,EAAE3B,WAHjB;AAII,MAAA,WAAW,EAAEC,WAJjB;AAKI,MAAA,cAAc,EAAEC,cALpB;AAMI,MAAA,aAAa,EAAEC,aANnB;AAOI,MAAA,OAAO,EAAEC;AAPb,OACQ,QADR,CADJ;AAWH;;AAED,MAAIyJ,WAAW,CAACmB,QAAZ,CAAqB,MAArB,KAAgC1F,UAApC,EAAgD;AAC5CsF,IAAAA,SAAS,CAACG,IAAV,GACIxJ,IAAC0J,UAAD;AAAA,gBACKtJ,MAAM,CAACC,GAAP,CAAW,UAAA7B,KAAK;AAAA,eACbwB,IAAC,UAAD;AAEI,UAAA,EAAE,EAAExB,KAAK,CAACsJ,EAFd;AAGI,UAAA,KAAK,EAAEtJ,KAAK,CAACsB,KAHjB;AAII,UAAA,IAAI,EAAEtB,KAAK,CAACsC,IAJhB;AAKI,UAAA,YAAY,EAAEC,YALlB;AAMI,UAAA,QAAQ,EAAEiD,WANd;AAOI,UAAA,OAAO,EAAEkD,UAPb;AAQI,UAAA,QAAQ,EAAEC,WARd;AASI,UAAA,cAAc,EAAEC,iBATpB;AAUI,UAAA,cAAc,EAAEC;AAVpB,WACS7I,KAAK,CAACsJ,EADf,CADa;AAAA,OAAhB;AADL,OAAc,MAAd,CADJ;AAkBH;;AAED,MAAIQ,WAAW,CAACmB,QAAZ,CAAqB,QAArB,KAAkC7K,aAAlC,IAAmDyF,kBAAvD,EAA2E;AACvEgF,IAAAA,SAAS,CAAChH,MAAV,GACIrC,IAAC,YAAD;AAEI,MAAA,MAAM,EAAEqC,MAFZ;AAGI,MAAA,MAAM,EAAE2G,WAHZ;AAII,MAAA,OAAO,EAAE1E;AAJb,OACQ,QADR,CADJ;AAQH;;AAED,MAAIgE,WAAW,CAACmB,QAAZ,CAAqB,SAArB,CAAJ,EAAqC;AACjCJ,IAAAA,SAAS,CAAC9E,OAAV,GACIvE,IAAC0J,UAAD;AAAA,gBACKnF,OAAO,CAAClE,GAAR,CAAY,UAACsJ,MAAD,EAASrJ,CAAT,EAAe;AACxB,YAAMsJ,UAAU,GAAGxJ,MAAM,CACpBC,GADc,CACV,UAAA7B,KAAK;AAAA,iBAAK;AACXsJ,YAAAA,EAAE,EAAEtJ,KAAK,CAACsJ,EADC;AAEXpF,YAAAA,KAAK,EAAElE,KAAK,CAACkE,KAFF;AAGX5C,YAAAA,KAAK,EAAEtB,KAAK,CAACsB,KAHF;AAIXG,YAAAA,IAAI,EAAEzB,KAAK,CAACyB;AAJD,WAAL;AAAA,SADK,EAOd4J,OAPc,EAAnB;AASA,eACI7J,IAAC,YAAD,oCAEQ2J,MAFR;AAGI,UAAA,cAAc,EAAEZ,UAHpB;AAII,UAAA,eAAe,EAAEC,WAJrB;AAKI,UAAA,IAAI,EAAEY;AALV,YACStJ,CADT,CADJ;AASH,OAnBA;AADL,OAAc,SAAd,CADJ;AAwBH;;AAED,SACIN,IAAC,UAAD;AACI,IAAA,KAAK,EAAEiJ,UADX;AAEI,IAAA,MAAM,EAAEC,WAFZ;AAGI,IAAA,MAAM,EAAEV,MAHZ;AAII,IAAA,IAAI,EAAEW,SAJV;AAKI,IAAA,IAAI,EAAE1E,IALV;AAMI,IAAA,SAAS,EAAEkE,SANf;AAOI,IAAA,cAAc,EAAEC,cAPpB;AAQI,IAAA,eAAe,EAAEC,eARrB;AAAA,cAUKP,WAAW,CAACjI,GAAZ,CAAgB,UAAC7B,KAAD,EAAQ8B,CAAR,EAAc;AAAA;;AAC3B,UAAI,OAAO9B,KAAP,KAAiB,UAArB,EAAiC;AAC7B,eAAOwB,IAAC0J,UAAD;AAAA,oBAAmBtK,aAAa,CAACZ,KAAD,EAAQ4J,YAAR;AAAhC,WAAe9H,CAAf,CAAP;AACH;;AAED,iCAAO+I,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAG7K,KAAH,CAAhB,+DAA6B,IAA7B;AACH,KANA;AAVL,IADJ;AAoBH,CAzND;;IA2NasL,MAAM,GAAG,SAATA,MAAS;AAAA,kCAClBlL,aADkB;AAAA,MAClBA,aADkB,oCACF8F,eAAe,CAAC9F,aADd;AAAA,4BAElBU,OAFkB;AAAA,MAElBA,OAFkB,8BAERoF,eAAe,CAACpF,OAFR;AAAA,iCAGlBsF,YAHkB;AAAA,MAGlBA,YAHkB,mCAGHF,eAAe,CAACE,YAHb;AAAA,MAIlBkC,KAJkB,SAIlBA,KAJkB;AAAA,MAKlBiD,aALkB,SAKlBA,aALkB;AAAA,MAMfC,UANe;;AAAA,SAQlBhK,IAAC,SAAD;AAEQV,IAAAA,OAAO,EAAPA,OAFR;AAGQV,IAAAA,aAAa,EAAbA,aAHR;AAIQgG,IAAAA,YAAY,EAAZA,YAJR;AAKQmF,IAAAA,aAAa,EAAbA,aALR;AAMQjD,IAAAA,KAAK,EAALA,KANR;AAAA,cASI9G,IAAC,WAAD;AAAuB,MAAA,aAAa,EAAEpB;AAAtC,OAAyDoL,UAAzD;AATJ,IARkB;AAAA;;IC7OTC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC5BC,KAD4B;AAAA,SAG5BlK,IAAC,iBAAD;AAAA,cACK;AAAA,UAAG+E,KAAH,QAAGA,KAAH;AAAA,UAAUjD,MAAV,QAAUA,MAAV;AAAA,aAAuB9B,IAAC,MAAD;AAAkB,QAAA,KAAK,EAAE+E,KAAzB;AAAgC,QAAA,MAAM,EAAEjD;AAAxC,SAAoDoI,KAApD,EAAvB;AAAA;AADL,IAH4B;AAAA;;;;"}