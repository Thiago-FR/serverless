{"version":3,"file":"nivo-chord.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/ChordArcTooltip.js","../src/ChordRibbonTooltip.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/compute.js","../src/hooks.js","../src/ChordRibbon.js","../src/ChordRibbons.js","../src/ChordArc.js","../src/ChordArcs.js","../src/ChordLabels.js","../src/Chord.js","../src/ChordCanvas.js","../src/ResponsiveChord.js","../src/ResponsiveChordCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChordArcTooltip = memo(({ arc }) => {\n    return (\n        <BasicTooltip\n            id={arc.label}\n            value={arc.formattedValue}\n            color={arc.color}\n            enableChip={true}\n        />\n    )\n})\n\nChordArcTooltip.displayName = 'ChordArcTooltip'\nChordArcTooltip.propTypes = {\n    arc: PropTypes.object.isRequired,\n}\n\nexport default ChordArcTooltip\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\n\nconst ChordRibbonTooltip = memo(({ ribbon }) => {\n    const theme = useTheme()\n\n    return (\n        <TableTooltip\n            theme={theme}\n            rows={[\n                [\n                    <Chip key=\"chip\" color={ribbon.source.color} />,\n                    <strong key=\"id\">{ribbon.source.label}</strong>,\n                    ribbon.source.formattedValue,\n                ],\n                [\n                    <Chip key=\"chip\" color={ribbon.target.color} />,\n                    <strong key=\"id\">{ribbon.target.label}</strong>,\n                    ribbon.target.formattedValue,\n                ],\n            ]}\n        />\n    )\n})\n\nChordRibbonTooltip.displayName = 'ChordRibbonTooltip'\nChordRibbonTooltip.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n}\n\nexport default ChordRibbonTooltip\n","import PropTypes from 'prop-types'\nimport { blendModePropType, motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport ChordArcTooltip from './ChordArcTooltip'\nimport ChordRibbonTooltip from './ChordRibbonTooltip'\n\nconst commonPropTypes = {\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    padAngle: PropTypes.number.isRequired,\n    innerRadiusRatio: PropTypes.number.isRequired,\n    innerRadiusOffset: PropTypes.number.isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['ribbons', 'arcs', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    arcOpacity: PropTypes.number.isRequired,\n    arcHoverOpacity: PropTypes.number.isRequired,\n    arcHoverOthersOpacity: PropTypes.number.isRequired,\n    arcBorderWidth: PropTypes.number.isRequired,\n    arcBorderColor: inheritedColorPropType.isRequired,\n    onArcMouseEnter: PropTypes.func,\n    onArcMouseMove: PropTypes.func,\n    onArcMouseLeave: PropTypes.func,\n    onArcClick: PropTypes.func,\n    arcTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    ribbonOpacity: PropTypes.number.isRequired,\n    ribbonHoverOpacity: PropTypes.number.isRequired,\n    ribbonHoverOthersOpacity: PropTypes.number.isRequired,\n    ribbonBorderWidth: PropTypes.number.isRequired,\n    ribbonBorderColor: inheritedColorPropType.isRequired,\n    ribbonBlendMode: blendModePropType.isRequired,\n    onRibbonMouseEnter: PropTypes.func,\n    onRibbonMouseMove: PropTypes.func,\n    onRibbonMouseLeave: PropTypes.func,\n    onRibbonClick: PropTypes.func,\n    ribbonTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelOffset: PropTypes.number.isRequired,\n    labelRotation: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const ChordPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChordCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    padAngle: 0,\n    innerRadiusRatio: 0.9,\n    innerRadiusOffset: 0,\n\n    layers: ['ribbons', 'arcs', 'labels', 'legends'],\n\n    arcOpacity: 1,\n    arcHoverOpacity: 1,\n    arcHoverOthersOpacity: 0.15,\n    arcBorderWidth: 1,\n    arcBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    arcTooltip: ChordArcTooltip,\n\n    ribbonOpacity: 0.5,\n    ribbonHoverOpacity: 0.85,\n    ribbonHoverOthersOpacity: 0.15,\n    ribbonBorderWidth: 1,\n    ribbonBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    ribbonBlendMode: 'normal',\n    ribbonTooltip: ChordRibbonTooltip,\n\n    enableLabel: true,\n    label: 'id',\n    labelOffset: 12,\n    labelRotation: 0,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    colors: { scheme: 'nivo' },\n\n    legends: [],\n\n    isInteractive: true,\n}\n\nexport const ChordDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const ChordCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { arc as d3Arc } from 'd3-shape'\nimport { chord as d3Chord, ribbon as d3Ribbon } from 'd3-chord'\n\nexport const computeChordLayout = ({ padAngle }) => d3Chord().padAngle(padAngle)\n\nexport const computeChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) => {\n    const center = [width / 2, height / 2]\n    const radius = Math.min(width, height) / 2\n    const innerRadius = radius * innerRadiusRatio\n    const ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset)\n\n    const arcGenerator = d3Arc().outerRadius(radius).innerRadius(innerRadius)\n\n    const ribbonGenerator = d3Ribbon().radius(ribbonRadius)\n\n    return { center, radius, innerRadius, arcGenerator, ribbonGenerator }\n}\n\nexport const computeChordArcsAndRibbons = ({\n    chord,\n    getColor,\n    keys,\n    matrix,\n    getLabel,\n    formatValue,\n}) => {\n    const ribbons = chord(matrix)\n\n    const arcs = ribbons.groups.map(arc => {\n        arc.id = keys[arc.index]\n        arc.color = getColor(arc)\n        arc.formattedValue = formatValue(arc.value)\n        arc.label = getLabel(arc)\n\n        return arc\n    })\n\n    ribbons.forEach(ribbon => {\n        ribbon.source.id = keys[ribbon.source.index]\n        ribbon.source.color = getColor(ribbon.source)\n        ribbon.source.formattedValue = formatValue(ribbon.source.value)\n        ribbon.source.label = getLabel(ribbon.source)\n\n        ribbon.target.id = keys[ribbon.target.index]\n        ribbon.target.color = getColor(ribbon.target)\n        ribbon.target.formattedValue = formatValue(ribbon.target.value)\n        ribbon.target.label = getLabel(ribbon.target)\n\n        // ensure id remains the same even if source/target are reversed\n        ribbon.id = [ribbon.source.id, ribbon.target.id].sort().join('.')\n    })\n\n    return { arcs, ribbons }\n}\n","import { useMemo, useState } from 'react'\nimport { useValueFormatter, getLabelGenerator } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { computeChordLayout, computeChordGenerators, computeChordArcsAndRibbons } from './compute'\n\nexport const useChordLayout = ({ padAngle }) =>\n    useMemo(() => computeChordLayout({ padAngle }), [padAngle])\n\nexport const useChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) =>\n    useMemo(\n        () =>\n            computeChordGenerators({\n                width,\n                height,\n                innerRadiusRatio,\n                innerRadiusOffset,\n            }),\n        [width, height, innerRadiusRatio, innerRadiusOffset]\n    )\n\nexport const useChordArcsAndRibbons = ({ chord, getColor, keys, matrix, getLabel, formatValue }) =>\n    useMemo(\n        () =>\n            computeChordArcsAndRibbons({\n                chord,\n                getColor,\n                keys,\n                matrix,\n                getLabel,\n                formatValue,\n            }),\n        [chord, getColor, keys, matrix, getLabel, formatValue]\n    )\n\nexport const useChord = ({\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    width,\n    height,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n    colors,\n}) => {\n    const chord = useChordLayout({ padAngle })\n    const { center, radius, innerRadius, arcGenerator, ribbonGenerator } = useChordGenerators({\n        width,\n        height,\n        innerRadiusRatio,\n        innerRadiusOffset,\n    })\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const { arcs, ribbons } = useChordArcsAndRibbons({\n        chord,\n        getColor,\n        keys,\n        matrix,\n        getLabel,\n        formatValue,\n    })\n\n    return {\n        center,\n        chord,\n        radius,\n        innerRadius,\n        arcGenerator,\n        ribbonGenerator,\n        getColor,\n        arcs,\n        ribbons,\n    }\n}\n\nexport const useChordSelection = ({\n    arcs,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    ribbons,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n}) => {\n    const [currentArc, setCurrentArc] = useState(null)\n    const [currentRibbon, setCurrentRibbon] = useState(null)\n\n    const selection = useMemo(() => {\n        const selectedArcIds = []\n        const selectedRibbonIds = []\n\n        if (currentArc) {\n            selectedArcIds.push(currentArc.id)\n            ribbons\n                .filter(\n                    ribbon =>\n                        ribbon.source.id === currentArc.id || ribbon.target.id === currentArc.id\n                )\n                .forEach(ribbon => {\n                    selectedRibbonIds.push(ribbon.id)\n                })\n        }\n\n        if (currentRibbon) {\n            selectedArcIds.push(currentRibbon.source.id)\n            selectedArcIds.push(currentRibbon.target.id)\n            selectedRibbonIds.push(currentRibbon.id)\n        }\n\n        return { selectedArcIds, selectedRibbonIds }\n    }, [currentArc, currentRibbon, arcs, ribbons])\n\n    const hasSelection =\n        selection.selectedArcIds.length > 1 || selection.selectedRibbonIds.length > 0\n\n    const getArcOpacity = useMemo(\n        () => arc => {\n            if (!hasSelection) return arcOpacity\n            return selection.selectedArcIds.includes(arc.id)\n                ? arcHoverOpacity\n                : arcHoverOthersOpacity\n        },\n        [selection.selectedArcIds, arcOpacity, arcHoverOpacity, arcHoverOthersOpacity]\n    )\n    const getRibbonOpacity = useMemo(\n        () => ribbon => {\n            if (!hasSelection) return ribbonOpacity\n            return selection.selectedRibbonIds.includes(ribbon.id)\n                ? ribbonHoverOpacity\n                : ribbonHoverOthersOpacity\n        },\n        [selection.selectedRibbonIds, ribbonOpacity, ribbonHoverOpacity, ribbonHoverOthersOpacity]\n    )\n\n    return {\n        currentArc,\n        setCurrentArc,\n        currentRibbon,\n        setCurrentRibbon,\n        hasSelection,\n        ...selection,\n        getArcOpacity,\n        getRibbonOpacity,\n    }\n}\n\nexport const useChordLayerContext = ({\n    center,\n    radius,\n    arcs,\n    arcGenerator,\n    ribbons,\n    ribbonGenerator,\n}) =>\n    useMemo(\n        () => ({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        }),\n        [center, radius, arcs, arcGenerator, ribbons, ribbonGenerator]\n    )\n","import { createElement, memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst ChordRibbon = memo(\n    ({\n        ribbon,\n        ribbonGenerator,\n        sourceStartAngle,\n        sourceEndAngle,\n        targetStartAngle,\n        targetEndAngle,\n        color,\n        opacity,\n        borderWidth,\n        getBorderColor,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(ribbon)\n                showTooltipFromEvent(createElement(tooltip, { ribbon }), event)\n                onMouseEnter && onMouseEnter(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(createElement(tooltip, { ribbon }), event)\n                onMouseMove && onMouseMove(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(ribbon, event)\n            }\n        }, [isInteractive, hideTooltip, ribbon, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(ribbon, event)\n        }, [isInteractive, ribbon, onClick])\n\n        return (\n            <path\n                d={ribbonGenerator({\n                    source: {\n                        startAngle: sourceStartAngle,\n                        endAngle: sourceEndAngle,\n                    },\n                    target: {\n                        startAngle: targetStartAngle,\n                        endAngle: targetEndAngle,\n                    },\n                })}\n                fill={color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor({ ...ribbon, color })}\n                strokeOpacity={opacity}\n                style={{ mixBlendMode: blendMode }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordRibbon.displayName = 'ChordRibbon'\nChordRibbon.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    sourceStartAngle: PropTypes.number.isRequired,\n    sourceEndAngle: PropTypes.number.isRequired,\n    targetStartAngle: PropTypes.number.isRequired,\n    targetEndAngle: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    blendMode: blendModePropType.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordRibbon\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport mapValues from 'lodash/mapValues'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { blendModePropType, midAngle, useMotionConfig } from '@nivo/core'\nimport { interpolateColor, getInterpolatedColor } from '@nivo/colors'\nimport ChordRibbon from './ChordRibbon'\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\nconst getRibbonAngles = ({ source, target }, useMiddleAngle, springConfig) => {\n    let firstArc\n    let secondArc\n    if (source.startAngle < target.startAngle) {\n        firstArc = source\n        secondArc = target\n    } else {\n        firstArc = target\n        secondArc = source\n    }\n\n    let angles\n    if (useMiddleAngle === true) {\n        const firstMiddleAngle = midAngle(firstArc)\n        const secondMiddleAngle = midAngle(secondArc)\n\n        angles = {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle,\n        }\n    } else {\n        angles = {\n            sourceStartAngle: firstArc.startAngle,\n            sourceEndAngle: firstArc.endAngle,\n            targetStartAngle: secondArc.startAngle,\n            targetEndAngle: secondArc.endAngle,\n        }\n    }\n\n    if (!springConfig) return angles\n\n    return mapValues(angles, angle => spring(angle, springConfig))\n}\n\nconst ribbonWillEnter = ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color),\n})\n\nconst ribbonWillLeave = springConfig => ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true, springConfig),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color, springConfig),\n})\n\nconst ChordRibbons = memo(\n    ({\n        ribbons,\n        ribbonGenerator,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return (\n                <g>\n                    {ribbons.map(ribbon => {\n                        return (\n                            <ChordRibbon\n                                key={ribbon.id}\n                                ribbon={ribbon}\n                                ribbonGenerator={ribbonGenerator}\n                                sourceStartAngle={ribbon.source.startAngle}\n                                sourceEndAngle={ribbon.source.endAngle}\n                                targetStartAngle={ribbon.target.startAngle}\n                                targetEndAngle={ribbon.target.endAngle}\n                                color={ribbon.source.color}\n                                blendMode={blendMode}\n                                opacity={getOpacity(ribbon)}\n                                borderWidth={borderWidth}\n                                getBorderColor={getBorderColor}\n                                isInteractive={isInteractive}\n                                setCurrent={setCurrent}\n                                onMouseEnter={onMouseEnter}\n                                onMouseMove={onMouseMove}\n                                onMouseLeave={onMouseLeave}\n                                onClick={onClick}\n                                tooltip={tooltip}\n                            />\n                        )\n                    })}\n                </g>\n            )\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                willEnter={ribbonWillEnter}\n                willLeave={ribbonWillLeave(springConfig)}\n                styles={ribbons.map(ribbon => {\n                    return {\n                        key: ribbon.id,\n                        data: ribbon,\n                        style: {\n                            ...getRibbonAngles(ribbon, false, springConfig),\n                            opacity: spring(getOpacity(ribbon), springConfig),\n                            ...interpolateColor(ribbon.source.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: ribbon }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordRibbon\n                                    key={key}\n                                    ribbon={ribbon}\n                                    ribbonGenerator={ribbonGenerator}\n                                    sourceStartAngle={style.sourceStartAngle}\n                                    sourceEndAngle={Math.max(\n                                        style.sourceEndAngle,\n                                        style.sourceStartAngle\n                                    )}\n                                    targetStartAngle={style.targetStartAngle}\n                                    targetEndAngle={Math.max(\n                                        style.targetEndAngle,\n                                        style.targetStartAngle\n                                    )}\n                                    color={color}\n                                    blendMode={blendMode}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordRibbons.displayName = 'ChordRibbons'\nChordRibbons.propTypes = {\n    ribbons: PropTypes.array.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default ChordRibbons\n","import { createElement, memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst ChordArc = memo(\n    ({\n        arc,\n        startAngle,\n        endAngle,\n        borderWidth,\n        getBorderColor,\n        opacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(arc)\n                showTooltipFromEvent(createElement(tooltip, { arc }), event)\n                onMouseEnter && onMouseEnter(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(createElement(tooltip, { arc }), event)\n                onMouseMove && onMouseMove(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(arc, event)\n            }\n        }, [isInteractive, hideTooltip, arc, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(arc, event)\n        }, [isInteractive, arc, onClick])\n\n        return (\n            <path\n                d={arcGenerator({ startAngle, endAngle })}\n                fill={arc.color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor(arc)}\n                strokeOpacity={opacity}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordArc.displayName = 'ChordArc'\nChordArc.propTypes = {\n    arc: PropTypes.object.isRequired,\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    opacity: PropTypes.number.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArc\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { interpolateColor, getInterpolatedColor } from '@nivo/colors'\nimport { useMotionConfig } from '@nivo/core'\nimport ChordArc from './ChordArc'\n\nconst ChordArcs = memo(\n    ({\n        arcs,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return arcs.map(arc => {\n                return (\n                    <ChordArc\n                        key={arc.id}\n                        arc={arc}\n                        arcGenerator={arcGenerator}\n                        startAngle={arc.startAngle}\n                        endAngle={arc.endAngle}\n                        color={arc.color}\n                        opacity={getOpacity(arc)}\n                        borderWidth={borderWidth}\n                        getBorderColor={getBorderColor}\n                        getOpacity={getOpacity}\n                        isInteractive={isInteractive}\n                        setCurrent={setCurrent}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                )\n            })\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                styles={arcs.map(arc => {\n                    return {\n                        key: arc.id,\n                        data: arc,\n                        style: {\n                            startAngle: spring(arc.startAngle, springConfig),\n                            endAngle: spring(arc.endAngle, springConfig),\n                            opacity: spring(getOpacity(arc), springConfig),\n                            ...interpolateColor(arc.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: arc }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordArc\n                                    key={key}\n                                    arc={arc}\n                                    arcGenerator={arcGenerator}\n                                    startAngle={style.startAngle}\n                                    endAngle={style.endAngle}\n                                    color={color}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    getOpacity={getOpacity}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordArcs.displayName = 'ChordArcs'\nChordArcs.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArcs\n","import PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { midAngle, getPolarLabelProps, useTheme } from '@nivo/core'\nimport { useMotionConfig } from '@nivo/core'\n\nconst ChordLabels = ({ arcs, radius, rotation, getColor }) => {\n    const theme = useTheme()\n    const { animate, springConfig } = useMotionConfig()\n\n    if (animate !== true) {\n        return (\n            <>\n                {arcs.map(arc => {\n                    const color = getColor(arc, theme)\n                    const angle = midAngle(arc)\n                    const textProps = getPolarLabelProps(radius, angle, rotation)\n\n                    return (\n                        <text\n                            key={arc.id}\n                            transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                            style={{\n                                ...theme.labels.text,\n                                pointerEvents: 'none',\n                                fill: color,\n                            }}\n                            textAnchor={textProps.align}\n                            dominantBaseline={textProps.baseline}\n                        >\n                            {arc.label}\n                        </text>\n                    )\n                })}\n            </>\n        )\n    }\n\n    return (\n        <TransitionMotion\n            styles={arcs.map(arc => {\n                const angle = midAngle(arc)\n\n                return {\n                    key: arc.id,\n                    data: arc,\n                    style: {\n                        angle: spring(angle, springConfig),\n                    },\n                }\n            })}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: arc }) => {\n                        const color = getColor(arc, theme)\n                        const textProps = getPolarLabelProps(radius, style.angle, rotation)\n\n                        return (\n                            <text\n                                key={key}\n                                transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                                style={{\n                                    ...theme.labels.text,\n                                    pointerEvents: 'none',\n                                    fill: color,\n                                }}\n                                textAnchor={textProps.align}\n                                dominantBaseline={textProps.baseline}\n                            >\n                                {arc.label}\n                            </text>\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nChordLabels.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    radius: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    getColor: PropTypes.func.isRequired,\n}\n\nexport default ChordLabels\n","import { Fragment } from 'react'\nimport { withContainer, SvgWrapper, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { ChordPropTypes, ChordDefaultProps } from './props'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport ChordRibbons from './ChordRibbons'\nimport ChordArcs from './ChordArcs'\nimport ChordLabels from './ChordLabels'\n\nconst Chord = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n\n    layers,\n\n    colors,\n\n    arcBorderWidth,\n    arcBorderColor,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    arcTooltip,\n\n    ribbonBorderWidth,\n    ribbonBorderColor,\n    ribbonBlendMode,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n    ribbonTooltip,\n\n    enableLabel,\n    labelOffset,\n    labelRotation,\n    labelTextColor,\n\n    isInteractive,\n    onArcMouseEnter,\n    onArcMouseMove,\n    onArcMouseLeave,\n    onArcClick,\n    onRibbonMouseEnter,\n    onRibbonMouseMove,\n    onRibbonMouseLeave,\n    onRibbonClick,\n\n    legends,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { center, radius, arcGenerator, ribbonGenerator, arcs, ribbons } = useChord({\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        colors,\n    })\n\n    const { setCurrentArc, setCurrentRibbon, getArcOpacity, getRibbonOpacity } = useChordSelection({\n        arcs,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        ribbons,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n    })\n\n    const theme = useTheme()\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n    const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n    const layerContext = useChordLayerContext({\n        center,\n        radius,\n        arcs,\n        arcGenerator,\n        ribbons,\n        ribbonGenerator,\n    })\n\n    if (radius <= 0) return null\n\n    const legendData = arcs.map(arc => ({\n        id: arc.id,\n        label: arc.label,\n        color: arc.color,\n    }))\n\n    const layerById = {\n        ribbons: (\n            <g key=\"ribbons\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordRibbons\n                    ribbons={ribbons}\n                    ribbonGenerator={ribbonGenerator}\n                    borderWidth={ribbonBorderWidth}\n                    getBorderColor={getRibbonBorderColor}\n                    getOpacity={getRibbonOpacity}\n                    blendMode={ribbonBlendMode}\n                    setCurrent={setCurrentRibbon}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onRibbonMouseEnter}\n                    onMouseMove={onRibbonMouseMove}\n                    onMouseLeave={onRibbonMouseLeave}\n                    onClick={onRibbonClick}\n                    tooltip={ribbonTooltip}\n                />\n            </g>\n        ),\n        arcs: (\n            <g key=\"arcs\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordArcs\n                    arcs={arcs}\n                    arcGenerator={arcGenerator}\n                    borderWidth={arcBorderWidth}\n                    getBorderColor={getArcBorderColor}\n                    getOpacity={getArcOpacity}\n                    setCurrent={setCurrentArc}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onArcMouseEnter}\n                    onMouseMove={onArcMouseMove}\n                    onMouseLeave={onArcMouseLeave}\n                    onClick={onArcClick}\n                    tooltip={arcTooltip}\n                />\n            </g>\n        ),\n        labels: null,\n        legends: (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (enableLabel === true) {\n        layerById.labels = (\n            <g key=\"labels\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordLabels\n                    arcs={arcs}\n                    radius={radius + labelOffset}\n                    rotation={labelRotation}\n                    getColor={getLabelTextColor}\n                />\n            </g>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nChord.propTypes = ChordPropTypes\nChord.defaultProps = ChordDefaultProps\n\nexport default withContainer(Chord)\n","import { createElement, memo, useRef, useEffect, useCallback } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    midAngle,\n    getPolarLabelProps,\n    degreesToRadians,\n    getRelativeCursor,\n} from '@nivo/core'\nimport { findArcUnderCursor } from '@nivo/arcs'\nimport { useInheritedColor } from '@nivo/colors'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport { ChordCanvasPropTypes, ChordCanvasDefaultProps } from './props'\n\nconst getArcFromMouseEvent = ({ event, canvasEl, center, margin, radius, innerRadius, arcs }) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    const centerX = margin.left + center[0]\n    const centerY = margin.top + center[1]\n\n    return findArcUnderCursor(centerX, centerY, radius, innerRadius, arcs, x, y)\n}\n\nconst ChordCanvas = memo(\n    ({\n        pixelRatio,\n        margin: partialMargin,\n        width,\n        height,\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        layers,\n        colors,\n        arcBorderWidth,\n        arcBorderColor,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        arcTooltip,\n        ribbonBorderWidth,\n        ribbonBorderColor,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n        enableLabel,\n        labelOffset,\n        labelRotation,\n        labelTextColor,\n        isInteractive,\n        onArcMouseEnter,\n        onArcMouseMove,\n        onArcMouseLeave,\n        onArcClick,\n        legends,\n    }) => {\n        const canvasEl = useRef(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n\n        const {\n            center,\n            radius,\n            innerRadius,\n            arcGenerator,\n            ribbonGenerator,\n            arcs,\n            ribbons,\n        } = useChord({\n            keys,\n            matrix,\n            label,\n            valueFormat,\n            width: innerWidth,\n            height: innerHeight,\n            innerRadiusRatio,\n            innerRadiusOffset,\n            padAngle,\n            colors,\n        })\n\n        const { currentArc, setCurrentArc, getArcOpacity, getRibbonOpacity } = useChordSelection({\n            arcs,\n            arcOpacity,\n            arcHoverOpacity,\n            arcHoverOthersOpacity,\n            ribbons,\n            ribbonOpacity,\n            ribbonHoverOpacity,\n            ribbonHoverOthersOpacity,\n        })\n\n        const theme = useTheme()\n        const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n        const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n        const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n        const layerContext = useChordLayerContext({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        })\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n            if (radius <= 0) return\n\n            layers.forEach(layer => {\n                if (layer === 'ribbons') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ribbonGenerator.context(ctx)\n                    ribbons.forEach(ribbon => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getRibbonOpacity(ribbon)\n                        ctx.fillStyle = ribbon.source.color\n                        ctx.beginPath()\n                        ribbonGenerator(ribbon)\n                        ctx.fill()\n\n                        if (ribbonBorderWidth > 0) {\n                            ctx.strokeStyle = getRibbonBorderColor({\n                                ...ribbon,\n                                color: ribbon.source.color,\n                            })\n                            ctx.lineWidth = ribbonBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'arcs') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    arcGenerator.context(ctx)\n                    arcs.forEach(arc => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getArcOpacity(arc)\n                        ctx.fillStyle = arc.color\n                        ctx.beginPath()\n                        arcGenerator(arc)\n                        ctx.fill()\n\n                        if (arcBorderWidth > 0) {\n                            ctx.strokeStyle = getArcBorderColor(arc)\n                            ctx.lineWidth = arcBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'labels' && enableLabel === true) {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ctx.font = `${theme.labels.text.fontSize}px ${\n                        theme.labels.text.fontFamily || 'sans-serif'\n                    }`\n\n                    arcs.forEach(arc => {\n                        const angle = midAngle(arc)\n                        const props = getPolarLabelProps(radius + labelOffset, angle, labelRotation)\n\n                        ctx.save()\n                        ctx.translate(props.x, props.y)\n                        ctx.rotate(degreesToRadians(props.rotate))\n\n                        ctx.textAlign = props.align\n                        ctx.textBaseline = props.baseline\n                        ctx.fillStyle = getLabelTextColor(arc, theme)\n                        ctx.fillText(arc.label, 0, 0)\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'legends') {\n                    ctx.save()\n                    ctx.translate(margin.left, margin.top)\n\n                    const legendData = arcs.map(arc => ({\n                        id: arc.id,\n                        label: arc.label,\n                        color: arc.color,\n                    }))\n\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: innerWidth,\n                            containerHeight: innerHeight,\n                            theme,\n                        })\n                    })\n\n                    ctx.restore()\n                }\n\n                if (typeof layer === 'function') {\n                    layer(ctx, layerContext)\n                }\n            })\n        }, [\n            canvasEl,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            layers,\n            arcs,\n            arcGenerator,\n            getArcOpacity,\n            arcBorderWidth,\n            getArcBorderColor,\n            ribbons,\n            ribbonGenerator,\n            getRibbonOpacity,\n            ribbonBorderWidth,\n            getRibbonBorderColor,\n            enableLabel,\n            labelOffset,\n            labelRotation,\n            getLabelTextColor,\n            legends,\n            layerContext,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseHover = useCallback(\n            event => {\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                if (arc) {\n                    setCurrentArc(arc)\n                    showTooltipFromEvent(createElement(arcTooltip, { arc }), event)\n                    !currentArc && onArcMouseEnter && onArcMouseEnter(arc, event)\n                    onArcMouseMove && onArcMouseMove(arc, event)\n                    currentArc &&\n                        currentArc.id !== arc.id &&\n                        onArcMouseLeave &&\n                        onArcMouseLeave(arc, event)\n                } else {\n                    setCurrentArc(null)\n                    hideTooltip()\n                    currentArc && onArcMouseLeave && onArcMouseLeave(currentArc, event)\n                }\n            },\n            [\n                canvasEl,\n                center,\n                margin,\n                radius,\n                innerRadius,\n                arcs,\n                setCurrentArc,\n                showTooltipFromEvent,\n                hideTooltip,\n                onArcMouseEnter,\n                onArcMouseMove,\n                onArcMouseLeave,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentArc(null)\n            hideTooltip()\n        }, [setCurrentArc, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onArcClick) return\n\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                arc && onArcClick(arc, event)\n            },\n            [canvasEl, center, margin, radius, innerRadius, arcs, onArcClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nChordCanvas.propTypes = ChordCanvasPropTypes\nChordCanvas.defaultProps = ChordCanvasDefaultProps\n\nexport default withContainer(ChordCanvas)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport Chord from './Chord'\n\nconst ResponsiveChord = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Chord width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChord\n","import { ResponsiveWrapper } from '@nivo/core'\nimport ChordCanvas from './ChordCanvas'\n\nconst ResponsiveChordCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChordCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChordCanvas\n"],"names":["defineProperty","ChordArcTooltip","memo","arc","_jsx","label","formattedValue","color","displayName","ChordRibbonTooltip","ribbon","theme","useTheme","source","target","commonPropTypes","keys","PropTypes","arrayOf","string","isRequired","matrix","number","valueFormat","oneOfType","func","padAngle","innerRadiusRatio","innerRadiusOffset","layers","oneOf","arcOpacity","arcHoverOpacity","arcHoverOthersOpacity","arcBorderWidth","arcBorderColor","inheritedColorPropType","onArcMouseEnter","onArcMouseMove","onArcMouseLeave","onArcClick","arcTooltip","object","ribbonOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","ribbonBorderWidth","ribbonBorderColor","ribbonBlendMode","blendModePropType","onRibbonMouseEnter","onRibbonMouseMove","onRibbonMouseLeave","onRibbonClick","ribbonTooltip","enableLabel","bool","labelOffset","labelRotation","labelTextColor","colors","ordinalColorsPropType","isInteractive","legends","shape","LegendPropShape","ChordPropTypes","motionPropTypes","role","ChordCanvasPropTypes","pixelRatio","commonDefaultProps","from","modifiers","scheme","ChordDefaultProps","animate","motionStiffness","motionDamping","ChordCanvasDefaultProps","window","devicePixelRatio","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","computeChordLayout","d3Chord","computeChordGenerators","width","height","center","radius","Math","min","innerRadius","ribbonRadius","arcGenerator","d3Arc","outerRadius","ribbonGenerator","d3Ribbon","computeChordArcsAndRibbons","chord","getColor","getLabel","formatValue","ribbons","arcs","groups","map","id","index","value","forEach","sort","join","useChordLayout","useMemo","useChordGenerators","useChordArcsAndRibbons","useChord","getLabelGenerator","useValueFormatter","useOrdinalColorScale","useChordSelection","useState","currentArc","setCurrentArc","currentRibbon","setCurrentRibbon","selection","selectedArcIds","selectedRibbonIds","push","filter","hasSelection","length","getArcOpacity","includes","getRibbonOpacity","useChordLayerContext","ChordRibbon","sourceStartAngle","sourceEndAngle","targetStartAngle","targetEndAngle","opacity","borderWidth","getBorderColor","blendMode","setCurrent","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","undefined","event","createElement","handleMouseMove","handleMouseLeave","handleClick","startAngle","endAngle","mixBlendMode","getRibbonAngles","useMiddleAngle","springConfig","firstArc","secondArc","angles","firstMiddleAngle","midAngle","secondMiddleAngle","mapValues","angle","spring","ribbonWillEnter","data","interpolateColor","ribbonWillLeave","ChordRibbons","getOpacity","useMotionConfig","_springConfig","precision","key","style","interpolatedStyles","getInterpolatedColor","max","ChordArc","ChordArcs","ChordLabels","rotation","textProps","getPolarLabelProps","x","y","rotate","labels","text","pointerEvents","fill","align","baseline","Chord","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getLabelTextColor","useInheritedColor","getArcBorderColor","getRibbonBorderColor","layerContext","legendData","layerById","Fragment","legend","i","layer","defaultProps","withContainer","getArcFromMouseEvent","canvasEl","getRelativeCursor","centerX","left","centerY","top","findArcUnderCursor","ChordCanvas","useRef","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","context","globalAlpha","beginPath","strokeStyle","lineWidth","stroke","restore","font","fontSize","fontFamily","props","degreesToRadians","textAlign","textBaseline","fillText","renderLegendToCanvas","containerWidth","containerHeight","handleMouseHover","useCallback","cursor","ResponsiveChord","ResponsiveChordCanvas"],"mappings":"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"}